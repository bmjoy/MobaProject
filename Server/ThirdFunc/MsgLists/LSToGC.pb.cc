// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LSToGC.proto
// Protobuf C++ Version: 4.26.0-dev

#include "LSToGC.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace LSToGC {

inline constexpr ServerInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        servername_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        serveraddr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        serverport_{0},
        serverstate_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServerInfo::ServerInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerInfoDefaultTypeInternal() {}
  union {
    ServerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerInfoDefaultTypeInternal _ServerInfo_default_instance_;

inline constexpr LoginResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        result_{0},
        msgid_{static_cast< ::LSToGC::MsgID >(512)} {}

template <typename>
PROTOBUF_CONSTEXPR LoginResult::LoginResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LoginResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginResultDefaultTypeInternal() {}
  union {
    LoginResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginResultDefaultTypeInternal _LoginResult_default_instance_;

inline constexpr ServerBSAddr::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        serverinfo_{},
        msgid_{static_cast< ::LSToGC::MsgID >(513)} {}

template <typename>
PROTOBUF_CONSTEXPR ServerBSAddr::ServerBSAddr(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ServerBSAddrDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerBSAddrDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerBSAddrDefaultTypeInternal() {}
  union {
    ServerBSAddr _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerBSAddrDefaultTypeInternal _ServerBSAddr_default_instance_;
}  // namespace LSToGC
static ::_pb::Metadata file_level_metadata_LSToGC_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_LSToGC_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_LSToGC_2eproto = nullptr;
const ::uint32_t
    TableStruct_LSToGC_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::LSToGC::LoginResult, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::LSToGC::LoginResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::LSToGC::LoginResult, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::LSToGC::LoginResult, _impl_.result_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::LSToGC::ServerInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::LSToGC::ServerInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::LSToGC::ServerInfo, _impl_.servername_),
        PROTOBUF_FIELD_OFFSET(::LSToGC::ServerInfo, _impl_.serveraddr_),
        PROTOBUF_FIELD_OFFSET(::LSToGC::ServerInfo, _impl_.serverport_),
        PROTOBUF_FIELD_OFFSET(::LSToGC::ServerInfo, _impl_.serverstate_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::LSToGC::ServerBSAddr, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::LSToGC::ServerBSAddr, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::LSToGC::ServerBSAddr, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::LSToGC::ServerBSAddr, _impl_.serverinfo_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::LSToGC::LoginResult)},
        {12, 24, -1, sizeof(::LSToGC::ServerInfo)},
        {28, 38, -1, sizeof(::LSToGC::ServerBSAddr)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::LSToGC::_LoginResult_default_instance_._instance,
    &::LSToGC::_ServerInfo_default_instance_._instance,
    &::LSToGC::_ServerBSAddr_default_instance_._instance,
};
const char descriptor_table_protodef_LSToGC_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014LSToGC.proto\022\006LSToGC\"]\n\013LoginResult\022>\n"
    "\005msgid\030\001 \001(\0162\r.LSToGC.MsgID: eMsgToGCFro"
    "mLS_NotifyLoginResult\022\016\n\006result\030\002 \001(\005\"]\n"
    "\nServerInfo\022\022\n\nServerName\030\001 \001(\t\022\022\n\nServe"
    "rAddr\030\002 \001(\t\022\022\n\nServerPort\030\003 \001(\005\022\023\n\013Serve"
    "rState\030\004 \001(\005\"w\n\014ServerBSAddr\022\?\n\005msgid\030\001 "
    "\001(\0162\r.LSToGC.MsgID:!eMsgToGCFromLS_Notif"
    "yServerBSAddr\022&\n\nserverinfo\030\002 \003(\0132\022.LSTo"
    "GC.ServerInfo*V\n\005MsgID\022%\n eMsgToGCFromLS"
    "_NotifyLoginResult\020\200\004\022&\n!eMsgToGCFromLS_"
    "NotifyServerBSAddr\020\201\004"
};
static ::absl::once_flag descriptor_table_LSToGC_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_LSToGC_2eproto = {
    false,
    false,
    421,
    descriptor_table_protodef_LSToGC_2eproto,
    "LSToGC.proto",
    &descriptor_table_LSToGC_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_LSToGC_2eproto::offsets,
    file_level_metadata_LSToGC_2eproto,
    file_level_enum_descriptors_LSToGC_2eproto,
    file_level_service_descriptors_LSToGC_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_LSToGC_2eproto_getter() {
  return &descriptor_table_LSToGC_2eproto;
}
namespace LSToGC {
const ::google::protobuf::EnumDescriptor* MsgID_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_LSToGC_2eproto);
  return file_level_enum_descriptors_LSToGC_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MsgID_internal_data_[] = {
    131584u, 0u, };
bool MsgID_IsValid(int value) {
  return 512 <= value && value <= 513;
}
// ===================================================================

class LoginResult::_Internal {
 public:
  using HasBits = decltype(std::declval<LoginResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LoginResult, _impl_._has_bits_);
};

LoginResult::LoginResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:LSToGC.LoginResult)
}
LoginResult::LoginResult(
    ::google::protobuf::Arena* arena, const LoginResult& from)
    : LoginResult(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LoginResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msgid_{static_cast< ::LSToGC::MsgID >(512)} {}

inline void LoginResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
LoginResult::~LoginResult() {
  // @@protoc_insertion_point(destructor:LSToGC.LoginResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LoginResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
LoginResult::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(LoginResult, _impl_._cached_size_),
              false,
          },
          &LoginResult::MergeImpl,
          &LoginResult::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void LoginResult::Clear() {
// @@protoc_insertion_point(message_clear_start:LSToGC.LoginResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.result_ = 0;
    _impl_.msgid_ = 512;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LoginResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> LoginResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LoginResult, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LoginResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::LSToGC::LoginResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 result = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LoginResult, _impl_.result_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(LoginResult, _impl_.result_)}},
    // optional .LSToGC.MsgID msgid = 1 [default = eMsgToGCFromLS_NotifyLoginResult];
    {::_pbi::TcParser::FastErS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(LoginResult, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .LSToGC.MsgID msgid = 1 [default = eMsgToGCFromLS_NotifyLoginResult];
    {PROTOBUF_FIELD_OFFSET(LoginResult, _impl_.msgid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int32 result = 2;
    {PROTOBUF_FIELD_OFFSET(LoginResult, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {512, 2},
  }}, {{
  }},
};

::uint8_t* LoginResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LSToGC.LoginResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .LSToGC.MsgID msgid = 1 [default = eMsgToGCFromLS_NotifyLoginResult];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional int32 result = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LSToGC.LoginResult)
  return target;
}

::size_t LoginResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LSToGC.LoginResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 result = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_result());
    }

    // optional .LSToGC.MsgID msgid = 1 [default = eMsgToGCFromLS_NotifyLoginResult];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void LoginResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoginResult*>(&to_msg);
  auto& from = static_cast<const LoginResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LSToGC.LoginResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoginResult::CopyFrom(const LoginResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LSToGC.LoginResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LoginResult::IsInitialized() const {
  return true;
}

void LoginResult::InternalSwap(LoginResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginResult, _impl_.msgid_)
      + sizeof(LoginResult::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(LoginResult, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata LoginResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_LSToGC_2eproto_getter,
                                   &descriptor_table_LSToGC_2eproto_once,
                                   file_level_metadata_LSToGC_2eproto[0]);
}
// ===================================================================

class ServerInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<ServerInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_._has_bits_);
};

ServerInfo::ServerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:LSToGC.ServerInfo)
}
inline PROTOBUF_NDEBUG_INLINE ServerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        servername_(arena, from.servername_),
        serveraddr_(arena, from.serveraddr_) {}

ServerInfo::ServerInfo(
    ::google::protobuf::Arena* arena,
    const ServerInfo& from)
    : ::google::protobuf::Message(arena) {
  ServerInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, serverport_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, serverport_),
           offsetof(Impl_, serverstate_) -
               offsetof(Impl_, serverport_) +
               sizeof(Impl_::serverstate_));

  // @@protoc_insertion_point(copy_constructor:LSToGC.ServerInfo)
}
inline PROTOBUF_NDEBUG_INLINE ServerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        servername_(arena),
        serveraddr_(arena) {}

inline void ServerInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, serverport_),
           0,
           offsetof(Impl_, serverstate_) -
               offsetof(Impl_, serverport_) +
               sizeof(Impl_::serverstate_));
}
ServerInfo::~ServerInfo() {
  // @@protoc_insertion_point(destructor:LSToGC.ServerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.servername_.Destroy();
  _impl_.serveraddr_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ServerInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_._cached_size_),
              false,
          },
          &ServerInfo::MergeImpl,
          &ServerInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:LSToGC.ServerInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.servername_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.serveraddr_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.serverport_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.serverstate_) -
        reinterpret_cast<char*>(&_impl_.serverport_)) + sizeof(_impl_.serverstate_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 46, 2> ServerInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ServerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::LSToGC::ServerInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 ServerState = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerInfo, _impl_.serverstate_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.serverstate_)}},
    // optional string ServerName = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.servername_)}},
    // optional string ServerAddr = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.serveraddr_)}},
    // optional int32 ServerPort = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ServerInfo, _impl_.serverport_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.serverport_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string ServerName = 1;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.servername_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string ServerAddr = 2;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.serveraddr_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 ServerPort = 3;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.serverport_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 ServerState = 4;
    {PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.serverstate_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\21\12\12\0\0\0\0\0"
    "LSToGC.ServerInfo"
    "ServerName"
    "ServerAddr"
  }},
};

::uint8_t* ServerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LSToGC.ServerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string ServerName = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_servername();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "LSToGC.ServerInfo.ServerName");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string ServerAddr = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_serveraddr();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "LSToGC.ServerInfo.ServerAddr");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 ServerPort = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_serverport(), target);
  }

  // optional int32 ServerState = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_serverstate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LSToGC.ServerInfo)
  return target;
}

::size_t ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LSToGC.ServerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string ServerName = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_servername());
    }

    // optional string ServerAddr = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_serveraddr());
    }

    // optional int32 ServerPort = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_serverport());
    }

    // optional int32 ServerState = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_serverstate());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ServerInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerInfo*>(&to_msg);
  auto& from = static_cast<const ServerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LSToGC.ServerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_servername(from._internal_servername());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_serveraddr(from._internal_serveraddr());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.serverport_ = from._impl_.serverport_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.serverstate_ = from._impl_.serverstate_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerInfo::CopyFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LSToGC.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerInfo::IsInitialized() const {
  return true;
}

void ServerInfo::InternalSwap(ServerInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.servername_, &other->_impl_.servername_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.serveraddr_, &other->_impl_.serveraddr_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.serverstate_)
      + sizeof(ServerInfo::_impl_.serverstate_)
      - PROTOBUF_FIELD_OFFSET(ServerInfo, _impl_.serverport_)>(
          reinterpret_cast<char*>(&_impl_.serverport_),
          reinterpret_cast<char*>(&other->_impl_.serverport_));
}

::google::protobuf::Metadata ServerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_LSToGC_2eproto_getter,
                                   &descriptor_table_LSToGC_2eproto_once,
                                   file_level_metadata_LSToGC_2eproto[1]);
}
// ===================================================================

class ServerBSAddr::_Internal {
 public:
  using HasBits = decltype(std::declval<ServerBSAddr>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ServerBSAddr, _impl_._has_bits_);
};

ServerBSAddr::ServerBSAddr(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:LSToGC.ServerBSAddr)
}
inline PROTOBUF_NDEBUG_INLINE ServerBSAddr::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        serverinfo_{visibility, arena, from.serverinfo_} {}

ServerBSAddr::ServerBSAddr(
    ::google::protobuf::Arena* arena,
    const ServerBSAddr& from)
    : ::google::protobuf::Message(arena) {
  ServerBSAddr* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.msgid_ = from._impl_.msgid_;

  // @@protoc_insertion_point(copy_constructor:LSToGC.ServerBSAddr)
}
inline PROTOBUF_NDEBUG_INLINE ServerBSAddr::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        serverinfo_{visibility, arena},
        msgid_{static_cast< ::LSToGC::MsgID >(513)} {}

inline void ServerBSAddr::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ServerBSAddr::~ServerBSAddr() {
  // @@protoc_insertion_point(destructor:LSToGC.ServerBSAddr)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ServerBSAddr::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ServerBSAddr::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ServerBSAddr, _impl_._cached_size_),
              false,
          },
          &ServerBSAddr::MergeImpl,
          &ServerBSAddr::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ServerBSAddr::Clear() {
// @@protoc_insertion_point(message_clear_start:LSToGC.ServerBSAddr)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.serverinfo_.Clear();
  _impl_.msgid_ = 513;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ServerBSAddr::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ServerBSAddr::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServerBSAddr, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ServerBSAddr_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::LSToGC::ServerBSAddr>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .LSToGC.ServerInfo serverinfo = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ServerBSAddr, _impl_.serverinfo_)}},
    // optional .LSToGC.MsgID msgid = 1 [default = eMsgToGCFromLS_NotifyServerBSAddr];
    {::_pbi::TcParser::FastErS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ServerBSAddr, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .LSToGC.MsgID msgid = 1 [default = eMsgToGCFromLS_NotifyServerBSAddr];
    {PROTOBUF_FIELD_OFFSET(ServerBSAddr, _impl_.msgid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .LSToGC.ServerInfo serverinfo = 2;
    {PROTOBUF_FIELD_OFFSET(ServerBSAddr, _impl_.serverinfo_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {512, 2},
    {::_pbi::TcParser::GetTable<::LSToGC::ServerInfo>()},
  }}, {{
  }},
};

::uint8_t* ServerBSAddr::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LSToGC.ServerBSAddr)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .LSToGC.MsgID msgid = 1 [default = eMsgToGCFromLS_NotifyServerBSAddr];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // repeated .LSToGC.ServerInfo serverinfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_serverinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_serverinfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LSToGC.ServerBSAddr)
  return target;
}

::size_t ServerBSAddr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LSToGC.ServerBSAddr)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .LSToGC.ServerInfo serverinfo = 2;
  total_size += 1UL * this->_internal_serverinfo_size();
  for (const auto& msg : this->_internal_serverinfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional .LSToGC.MsgID msgid = 1 [default = eMsgToGCFromLS_NotifyServerBSAddr];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ServerBSAddr::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerBSAddr*>(&to_msg);
  auto& from = static_cast<const ServerBSAddr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LSToGC.ServerBSAddr)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_serverinfo()->MergeFrom(
      from._internal_serverinfo());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.msgid_ = from._impl_.msgid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerBSAddr::CopyFrom(const ServerBSAddr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LSToGC.ServerBSAddr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ServerBSAddr::IsInitialized() const {
  return true;
}

void ServerBSAddr::InternalSwap(ServerBSAddr* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.serverinfo_.InternalSwap(&other->_impl_.serverinfo_);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata ServerBSAddr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_LSToGC_2eproto_getter,
                                   &descriptor_table_LSToGC_2eproto_once,
                                   file_level_metadata_LSToGC_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace LSToGC
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_LSToGC_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
