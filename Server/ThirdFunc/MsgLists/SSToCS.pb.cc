// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SSToCS.proto
// Protobuf C++ Version: 4.26.0-dev

#include "SSToCS.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace SSToCS {

inline constexpr userData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        guid_{::uint64_t{0u}},
        deadtimes_{0u},
        herokills_{0u},
        gameinn_{0u},
        wininn_{0u},
        gold_{::int64_t{0}},
        exp_{0u},
        destorybuilding_{0},
        heroid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR userData::userData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct userDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR userDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~userDataDefaultTypeInternal() {}
  union {
    userData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 userDataDefaultTypeInternal _userData_default_instance_;

inline constexpr UserNetInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gsid_{0},
        gcnsid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserNetInfo::UserNetInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserNetInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserNetInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserNetInfoDefaultTypeInternal() {}
  union {
    UserNetInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserNetInfoDefaultTypeInternal _UserNetInfo_default_instance_;

inline constexpr UpGuideBattleStep::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        guid_{::int64_t{0}},
        taskid_{0},
        num_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8231)} {}

template <typename>
PROTOBUF_CONSTEXPR UpGuideBattleStep::UpGuideBattleStep(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpGuideBattleStepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpGuideBattleStepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpGuideBattleStepDefaultTypeInternal() {}
  union {
    UpGuideBattleStep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpGuideBattleStepDefaultTypeInternal _UpGuideBattleStep_default_instance_;

inline constexpr SyncAllBattleInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        playbattle_{},
        maxbattleid_{::uint64_t{0u}},
        mgsid_{static_cast< ::SSToCS::MsgID >(8229)} {}

template <typename>
PROTOBUF_CONSTEXPR SyncAllBattleInfo::SyncAllBattleInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SyncAllBattleInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncAllBattleInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncAllBattleInfoDefaultTypeInternal() {}
  union {
    SyncAllBattleInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncAllBattleInfoDefaultTypeInternal _SyncAllBattleInfo_default_instance_;

inline constexpr ReportGotSomeMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        otherval_{::uint64_t{0u}},
        gotmsgid_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8228)} {}

template <typename>
PROTOBUF_CONSTEXPR ReportGotSomeMsg::ReportGotSomeMsg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReportGotSomeMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportGotSomeMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportGotSomeMsgDefaultTypeInternal() {}
  union {
    ReportGotSomeMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportGotSomeMsgDefaultTypeInternal _ReportGotSomeMsg_default_instance_;

inline constexpr ReportBattleShowResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        battleid_{::uint64_t{0u}},
        result_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8227)} {}

template <typename>
PROTOBUF_CONSTEXPR ReportBattleShowResult::ReportBattleShowResult(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReportBattleShowResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportBattleShowResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportBattleShowResultDefaultTypeInternal() {}
  union {
    ReportBattleShowResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportBattleShowResultDefaultTypeInternal _ReportBattleShowResult_default_instance_;

inline constexpr ReportBattleFinished::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        battleid_{::int64_t{0}},
        campid_{0},
        res_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8195)} {}

template <typename>
PROTOBUF_CONSTEXPR ReportBattleFinished::ReportBattleFinished(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReportBattleFinishedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportBattleFinishedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportBattleFinishedDefaultTypeInternal() {}
  union {
    ReportBattleFinished _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportBattleFinishedDefaultTypeInternal _ReportBattleFinished_default_instance_;

inline constexpr GameLogSwitch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8232)} {}

template <typename>
PROTOBUF_CONSTEXPR GameLogSwitch::GameLogSwitch(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameLogSwitchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameLogSwitchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameLogSwitchDefaultTypeInternal() {}
  union {
    GameLogSwitch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameLogSwitchDefaultTypeInternal _GameLogSwitch_default_instance_;

inline constexpr FinishBattle_BattleUserData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        guid_{::uint64_t{0u}},
        heroguid_{::uint64_t{0u}},
        timeinsecond_{0u},
        heroid_{0},
        runepage_{0},
        deadtimes_{0u},
        herokills_{0u},
        destorybuilding_{0},
        diamondused_{::int64_t{0}},
        ifend_{false},
        ifairobot_{false},
        lasthitnum_{0},
        goldused_{::int64_t{0}},
        asskillnum_{0},
        herolv_{0},
        totalcp_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FinishBattle_BattleUserData::FinishBattle_BattleUserData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FinishBattle_BattleUserDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FinishBattle_BattleUserDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FinishBattle_BattleUserDataDefaultTypeInternal() {}
  union {
    FinishBattle_BattleUserData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FinishBattle_BattleUserDataDefaultTypeInternal _FinishBattle_BattleUserData_default_instance_;

inline constexpr CreateBattleResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        battleid_{::int64_t{0}},
        rst_{false},
        mgsid_{static_cast< ::SSToCS::MsgID >(8300)} {}

template <typename>
PROTOBUF_CONSTEXPR CreateBattleResponse::CreateBattleResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateBattleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateBattleResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateBattleResponseDefaultTypeInternal() {}
  union {
    CreateBattleResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateBattleResponseDefaultTypeInternal _CreateBattleResponse_default_instance_;

inline constexpr BattleLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        log_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        guid_{::int64_t{0}},
        log_type_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8230)} {}

template <typename>
PROTOBUF_CONSTEXPR BattleLog::BattleLog(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BattleLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BattleLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BattleLogDefaultTypeInternal() {}
  union {
    BattleLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BattleLogDefaultTypeInternal _BattleLog_default_instance_;

inline constexpr AskUserGoHall::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        guid_{::uint64_t{0u}},
        type_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8226)} {}

template <typename>
PROTOBUF_CONSTEXPR AskUserGoHall::AskUserGoHall(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskUserGoHallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskUserGoHallDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskUserGoHallDefaultTypeInternal() {}
  union {
    AskUserGoHall _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskUserGoHallDefaultTypeInternal _AskUserGoHall_default_instance_;

inline constexpr AskUpdateGuideStep::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        guid_{::uint64_t{0u}},
        state_{0},
        stepid_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8225)} {}

template <typename>
PROTOBUF_CONSTEXPR AskUpdateGuideStep::AskUpdateGuideStep(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskUpdateGuideStepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskUpdateGuideStepDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskUpdateGuideStepDefaultTypeInternal() {}
  union {
    AskUpdateGuideStep _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskUpdateGuideStepDefaultTypeInternal _AskUpdateGuideStep_default_instance_;

inline constexpr AskSkillEffectSwitchCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8220)} {}

template <typename>
PROTOBUF_CONSTEXPR AskSkillEffectSwitchCfg::AskSkillEffectSwitchCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskSkillEffectSwitchCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskSkillEffectSwitchCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskSkillEffectSwitchCfgDefaultTypeInternal() {}
  union {
    AskSkillEffectSwitchCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskSkillEffectSwitchCfgDefaultTypeInternal _AskSkillEffectSwitchCfg_default_instance_;

inline constexpr AskSkillEffectSummonCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8218)} {}

template <typename>
PROTOBUF_CONSTEXPR AskSkillEffectSummonCfg::AskSkillEffectSummonCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskSkillEffectSummonCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskSkillEffectSummonCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskSkillEffectSummonCfgDefaultTypeInternal() {}
  union {
    AskSkillEffectSummonCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskSkillEffectSummonCfgDefaultTypeInternal _AskSkillEffectSummonCfg_default_instance_;

inline constexpr AskSkillEffectRangeCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8215)} {}

template <typename>
PROTOBUF_CONSTEXPR AskSkillEffectRangeCfg::AskSkillEffectRangeCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskSkillEffectRangeCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskSkillEffectRangeCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskSkillEffectRangeCfgDefaultTypeInternal() {}
  union {
    AskSkillEffectRangeCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskSkillEffectRangeCfgDefaultTypeInternal _AskSkillEffectRangeCfg_default_instance_;

inline constexpr AskSkillEffectMoveCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8219)} {}

template <typename>
PROTOBUF_CONSTEXPR AskSkillEffectMoveCfg::AskSkillEffectMoveCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskSkillEffectMoveCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskSkillEffectMoveCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskSkillEffectMoveCfgDefaultTypeInternal() {}
  union {
    AskSkillEffectMoveCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskSkillEffectMoveCfgDefaultTypeInternal _AskSkillEffectMoveCfg_default_instance_;

inline constexpr AskSkillEffectLeadingCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8216)} {}

template <typename>
PROTOBUF_CONSTEXPR AskSkillEffectLeadingCfg::AskSkillEffectLeadingCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskSkillEffectLeadingCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskSkillEffectLeadingCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskSkillEffectLeadingCfgDefaultTypeInternal() {}
  union {
    AskSkillEffectLeadingCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskSkillEffectLeadingCfgDefaultTypeInternal _AskSkillEffectLeadingCfg_default_instance_;

inline constexpr AskSkillEffectBufCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8217)} {}

template <typename>
PROTOBUF_CONSTEXPR AskSkillEffectBufCfg::AskSkillEffectBufCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskSkillEffectBufCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskSkillEffectBufCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskSkillEffectBufCfgDefaultTypeInternal() {}
  union {
    AskSkillEffectBufCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskSkillEffectBufCfgDefaultTypeInternal _AskSkillEffectBufCfg_default_instance_;

inline constexpr AskSkillEffectAccountCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8213)} {}

template <typename>
PROTOBUF_CONSTEXPR AskSkillEffectAccountCfg::AskSkillEffectAccountCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskSkillEffectAccountCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskSkillEffectAccountCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskSkillEffectAccountCfgDefaultTypeInternal() {}
  union {
    AskSkillEffectAccountCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskSkillEffectAccountCfgDefaultTypeInternal _AskSkillEffectAccountCfg_default_instance_;

inline constexpr AskShopfgList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8201)} {}

template <typename>
PROTOBUF_CONSTEXPR AskShopfgList::AskShopfgList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskShopfgListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskShopfgListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskShopfgListDefaultTypeInternal() {}
  union {
    AskShopfgList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskShopfgListDefaultTypeInternal _AskShopfgList_default_instance_;

inline constexpr AskRegiste::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        userpwd_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ssid_{0},
        port_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8194)} {}

template <typename>
PROTOBUF_CONSTEXPR AskRegiste::AskRegiste(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskRegisteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskRegisteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskRegisteDefaultTypeInternal() {}
  union {
    AskRegiste _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskRegisteDefaultTypeInternal _AskRegiste_default_instance_;

inline constexpr AskPublicLuaStr::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8203)} {}

template <typename>
PROTOBUF_CONSTEXPR AskPublicLuaStr::AskPublicLuaStr(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskPublicLuaStrDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskPublicLuaStrDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskPublicLuaStrDefaultTypeInternal() {}
  union {
    AskPublicLuaStr _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskPublicLuaStrDefaultTypeInternal _AskPublicLuaStr_default_instance_;

inline constexpr AskPing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_{::int64_t{0}},
        mgsid_{static_cast< ::SSToCS::MsgID >(8193)} {}

template <typename>
PROTOBUF_CONSTEXPR AskPing::AskPing(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskPingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskPingDefaultTypeInternal() {}
  union {
    AskPing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskPingDefaultTypeInternal _AskPing_default_instance_;

inline constexpr AskPassitiveSkillCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8221)} {}

template <typename>
PROTOBUF_CONSTEXPR AskPassitiveSkillCfg::AskPassitiveSkillCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskPassitiveSkillCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskPassitiveSkillCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskPassitiveSkillCfgDefaultTypeInternal() {}
  union {
    AskPassitiveSkillCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskPassitiveSkillCfgDefaultTypeInternal _AskPassitiveSkillCfg_default_instance_;

inline constexpr AskPassitiveEffectReliveCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8224)} {}

template <typename>
PROTOBUF_CONSTEXPR AskPassitiveEffectReliveCfg::AskPassitiveEffectReliveCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskPassitiveEffectReliveCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskPassitiveEffectReliveCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskPassitiveEffectReliveCfgDefaultTypeInternal() {}
  union {
    AskPassitiveEffectReliveCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskPassitiveEffectReliveCfgDefaultTypeInternal _AskPassitiveEffectReliveCfg_default_instance_;

inline constexpr AskPassitiveEffectReboundCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8223)} {}

template <typename>
PROTOBUF_CONSTEXPR AskPassitiveEffectReboundCfg::AskPassitiveEffectReboundCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskPassitiveEffectReboundCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskPassitiveEffectReboundCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskPassitiveEffectReboundCfgDefaultTypeInternal() {}
  union {
    AskPassitiveEffectReboundCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskPassitiveEffectReboundCfgDefaultTypeInternal _AskPassitiveEffectReboundCfg_default_instance_;

inline constexpr AskPassitiveEffectBloodSeekCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8222)} {}

template <typename>
PROTOBUF_CONSTEXPR AskPassitiveEffectBloodSeekCfg::AskPassitiveEffectBloodSeekCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskPassitiveEffectBloodSeekCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskPassitiveEffectBloodSeekCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskPassitiveEffectBloodSeekCfgDefaultTypeInternal() {}
  union {
    AskPassitiveEffectBloodSeekCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskPassitiveEffectBloodSeekCfgDefaultTypeInternal _AskPassitiveEffectBloodSeekCfg_default_instance_;

inline constexpr AskNewSkillCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8211)} {}

template <typename>
PROTOBUF_CONSTEXPR AskNewSkillCfg::AskNewSkillCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskNewSkillCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskNewSkillCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskNewSkillCfgDefaultTypeInternal() {}
  union {
    AskNewSkillCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskNewSkillCfgDefaultTypeInternal _AskNewSkillCfg_default_instance_;

inline constexpr AskMapCfgList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mapid_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8204)} {}

template <typename>
PROTOBUF_CONSTEXPR AskMapCfgList::AskMapCfgList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskMapCfgListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskMapCfgListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskMapCfgListDefaultTypeInternal() {}
  union {
    AskMapCfgList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskMapCfgListDefaultTypeInternal _AskMapCfgList_default_instance_;

inline constexpr AskHeroCfgList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8200)} {}

template <typename>
PROTOBUF_CONSTEXPR AskHeroCfgList::AskHeroCfgList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskHeroCfgListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskHeroCfgListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskHeroCfgListDefaultTypeInternal() {}
  union {
    AskHeroCfgList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskHeroCfgListDefaultTypeInternal _AskHeroCfgList_default_instance_;

inline constexpr AskGoodsfgList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8202)} {}

template <typename>
PROTOBUF_CONSTEXPR AskGoodsfgList::AskGoodsfgList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskGoodsfgListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskGoodsfgListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskGoodsfgListDefaultTypeInternal() {}
  union {
    AskGoodsfgList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskGoodsfgListDefaultTypeInternal _AskGoodsfgList_default_instance_;

inline constexpr AskChangeFirstWinTime::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        guid_{::uint64_t{0u}},
        curtime_{::int64_t{0}},
        mgsid_{static_cast< ::SSToCS::MsgID >(8210)} {}

template <typename>
PROTOBUF_CONSTEXPR AskChangeFirstWinTime::AskChangeFirstWinTime(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskChangeFirstWinTimeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskChangeFirstWinTimeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskChangeFirstWinTimeDefaultTypeInternal() {}
  union {
    AskChangeFirstWinTime _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskChangeFirstWinTimeDefaultTypeInternal _AskChangeFirstWinTime_default_instance_;

inline constexpr AskAllCfgList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8199)} {}

template <typename>
PROTOBUF_CONSTEXPR AskAllCfgList::AskAllCfgList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskAllCfgListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskAllCfgListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskAllCfgListDefaultTypeInternal() {}
  union {
    AskAllCfgList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskAllCfgListDefaultTypeInternal _AskAllCfgList_default_instance_;

inline constexpr AddGold::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        guid_{::uint64_t{0u}},
        gold_{::int64_t{0}},
        mgsid_{static_cast< ::SSToCS::MsgID >(8207)} {}

template <typename>
PROTOBUF_CONSTEXPR AddGold::AddGold(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AddGoldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddGoldDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddGoldDefaultTypeInternal() {}
  union {
    AddGold _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddGoldDefaultTypeInternal _AddGold_default_instance_;

inline constexpr ReportUserOffline::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        usernetinfo_{nullptr},
        guid_{::uint64_t{0u}},
        mgsid_{static_cast< ::SSToCS::MsgID >(8196)} {}

template <typename>
PROTOBUF_CONSTEXPR ReportUserOffline::ReportUserOffline(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReportUserOfflineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportUserOfflineDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportUserOfflineDefaultTypeInternal() {}
  union {
    ReportUserOffline _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportUserOfflineDefaultTypeInternal _ReportUserOffline_default_instance_;

inline constexpr FinishBattle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        batteluserdatalist_{},
        battleid_{::int64_t{0}},
        wingrpid_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8310)} {}

template <typename>
PROTOBUF_CONSTEXPR FinishBattle::FinishBattle(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FinishBattleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FinishBattleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FinishBattleDefaultTypeInternal() {}
  union {
    FinishBattle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FinishBattleDefaultTypeInternal _FinishBattle_default_instance_;

inline constexpr AskUpdateData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_data_{},
        mgsid_{static_cast< ::SSToCS::MsgID >(8206)} {}

template <typename>
PROTOBUF_CONSTEXPR AskUpdateData::AskUpdateData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskUpdateDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskUpdateDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskUpdateDataDefaultTypeInternal() {}
  union {
    AskUpdateData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskUpdateDataDefaultTypeInternal _AskUpdateData_default_instance_;
}  // namespace SSToCS
static ::_pb::Metadata file_level_metadata_SSToCS_2eproto[38];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_SSToCS_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_SSToCS_2eproto = nullptr;
const ::uint32_t
    TableStruct_SSToCS_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::SSToCS::GameLogSwitch, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::GameLogSwitch, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::GameLogSwitch, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::UpGuideBattleStep, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::UpGuideBattleStep, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::UpGuideBattleStep, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::UpGuideBattleStep, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::UpGuideBattleStep, _impl_.taskid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::UpGuideBattleStep, _impl_.num_),
        3,
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::SSToCS::BattleLog, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::BattleLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::BattleLog, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::BattleLog, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::BattleLog, _impl_.log_type_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::BattleLog, _impl_.log_str_),
        3,
        1,
        2,
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPing, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPing, _impl_.time_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportGotSomeMsg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportGotSomeMsg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportGotSomeMsg, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportGotSomeMsg, _impl_.gotmsgid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportGotSomeMsg, _impl_.otherval_),
        2,
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportBattleShowResult, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportBattleShowResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportBattleShowResult, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportBattleShowResult, _impl_.battleid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportBattleShowResult, _impl_.result_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskChangeFirstWinTime, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskChangeFirstWinTime, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskChangeFirstWinTime, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskChangeFirstWinTime, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskChangeFirstWinTime, _impl_.curtime_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AddGold, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AddGold, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AddGold, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AddGold, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AddGold, _impl_.gold_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskRegiste, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskRegiste, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskRegiste, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskRegiste, _impl_.ssid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskRegiste, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskRegiste, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskRegiste, _impl_.userpwd_),
        4,
        2,
        0,
        3,
        1,
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportBattleFinished, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportBattleFinished, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportBattleFinished, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportBattleFinished, _impl_.battleid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportBattleFinished, _impl_.campid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportBattleFinished, _impl_.res_),
        3,
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::SSToCS::userData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::userData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::userData, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::userData, _impl_.deadtimes_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::userData, _impl_.herokills_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::userData, _impl_.gameinn_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::userData, _impl_.wininn_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::userData, _impl_.exp_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::userData, _impl_.gold_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::userData, _impl_.destorybuilding_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::userData, _impl_.heroid_),
        0,
        1,
        2,
        3,
        4,
        6,
        5,
        7,
        8,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUpdateData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUpdateData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUpdateData, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUpdateData, _impl_.user_data_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::SSToCS::UserNetInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::UserNetInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::UserNetInfo, _impl_.gsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::UserNetInfo, _impl_.gcnsid_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportUserOffline, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportUserOffline, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportUserOffline, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportUserOffline, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::ReportUserOffline, _impl_.usernetinfo_),
        2,
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskAllCfgList, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskAllCfgList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskAllCfgList, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskHeroCfgList, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskHeroCfgList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskHeroCfgList, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskGoodsfgList, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskGoodsfgList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskGoodsfgList, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskShopfgList, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskShopfgList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskShopfgList, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPublicLuaStr, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPublicLuaStr, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPublicLuaStr, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskMapCfgList, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskMapCfgList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskMapCfgList, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskMapCfgList, _impl_.mapid_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskNewSkillCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskNewSkillCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskNewSkillCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectAccountCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectAccountCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectAccountCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectLeadingCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectLeadingCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectLeadingCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectRangeCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectRangeCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectRangeCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectBufCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectBufCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectBufCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectSummonCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectSummonCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectSummonCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectMoveCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectMoveCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectMoveCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectSwitchCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectSwitchCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskSkillEffectSwitchCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveSkillCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveSkillCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveSkillCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveEffectBloodSeekCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveEffectBloodSeekCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveEffectBloodSeekCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveEffectReboundCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveEffectReboundCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveEffectReboundCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveEffectReliveCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveEffectReliveCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskPassitiveEffectReliveCfg, _impl_.mgsid_),
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUpdateGuideStep, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUpdateGuideStep, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUpdateGuideStep, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUpdateGuideStep, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUpdateGuideStep, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUpdateGuideStep, _impl_.stepid_),
        3,
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUserGoHall, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUserGoHall, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUserGoHall, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUserGoHall, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::AskUserGoHall, _impl_.type_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::SSToCS::SyncAllBattleInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::SyncAllBattleInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::SyncAllBattleInfo, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::SyncAllBattleInfo, _impl_.playbattle_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::SyncAllBattleInfo, _impl_.maxbattleid_),
        1,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::SSToCS::CreateBattleResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::CreateBattleResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::CreateBattleResponse, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::CreateBattleResponse, _impl_.battleid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::CreateBattleResponse, _impl_.rst_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.heroguid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.timeinsecond_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.ifend_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.heroid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.runepage_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.deadtimes_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.herokills_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.destorybuilding_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.diamondused_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.goldused_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.lasthitnum_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.asskillnum_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.herolv_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.totalcp_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle_BattleUserData, _impl_.ifairobot_),
        0,
        1,
        2,
        9,
        3,
        4,
        5,
        6,
        7,
        8,
        12,
        11,
        13,
        14,
        15,
        10,
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle, _impl_.battleid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle, _impl_.wingrpid_),
        PROTOBUF_FIELD_OFFSET(::SSToCS::FinishBattle, _impl_.batteluserdatalist_),
        2,
        0,
        1,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::SSToCS::GameLogSwitch)},
        {10, 22, -1, sizeof(::SSToCS::UpGuideBattleStep)},
        {26, 38, -1, sizeof(::SSToCS::BattleLog)},
        {42, 52, -1, sizeof(::SSToCS::AskPing)},
        {54, 65, -1, sizeof(::SSToCS::ReportGotSomeMsg)},
        {68, 79, -1, sizeof(::SSToCS::ReportBattleShowResult)},
        {82, 93, -1, sizeof(::SSToCS::AskChangeFirstWinTime)},
        {96, 107, -1, sizeof(::SSToCS::AddGold)},
        {110, 123, -1, sizeof(::SSToCS::AskRegiste)},
        {128, 140, -1, sizeof(::SSToCS::ReportBattleFinished)},
        {144, 161, -1, sizeof(::SSToCS::userData)},
        {170, 180, -1, sizeof(::SSToCS::AskUpdateData)},
        {182, 192, -1, sizeof(::SSToCS::UserNetInfo)},
        {194, 205, -1, sizeof(::SSToCS::ReportUserOffline)},
        {208, 217, -1, sizeof(::SSToCS::AskAllCfgList)},
        {218, 227, -1, sizeof(::SSToCS::AskHeroCfgList)},
        {228, 237, -1, sizeof(::SSToCS::AskGoodsfgList)},
        {238, 247, -1, sizeof(::SSToCS::AskShopfgList)},
        {248, 257, -1, sizeof(::SSToCS::AskPublicLuaStr)},
        {258, 268, -1, sizeof(::SSToCS::AskMapCfgList)},
        {270, 279, -1, sizeof(::SSToCS::AskNewSkillCfg)},
        {280, 289, -1, sizeof(::SSToCS::AskSkillEffectAccountCfg)},
        {290, 299, -1, sizeof(::SSToCS::AskSkillEffectLeadingCfg)},
        {300, 309, -1, sizeof(::SSToCS::AskSkillEffectRangeCfg)},
        {310, 319, -1, sizeof(::SSToCS::AskSkillEffectBufCfg)},
        {320, 329, -1, sizeof(::SSToCS::AskSkillEffectSummonCfg)},
        {330, 339, -1, sizeof(::SSToCS::AskSkillEffectMoveCfg)},
        {340, 349, -1, sizeof(::SSToCS::AskSkillEffectSwitchCfg)},
        {350, 359, -1, sizeof(::SSToCS::AskPassitiveSkillCfg)},
        {360, 369, -1, sizeof(::SSToCS::AskPassitiveEffectBloodSeekCfg)},
        {370, 379, -1, sizeof(::SSToCS::AskPassitiveEffectReboundCfg)},
        {380, 389, -1, sizeof(::SSToCS::AskPassitiveEffectReliveCfg)},
        {390, 402, -1, sizeof(::SSToCS::AskUpdateGuideStep)},
        {406, 417, -1, sizeof(::SSToCS::AskUserGoHall)},
        {420, 431, -1, sizeof(::SSToCS::SyncAllBattleInfo)},
        {434, 445, -1, sizeof(::SSToCS::CreateBattleResponse)},
        {448, 472, -1, sizeof(::SSToCS::FinishBattle_BattleUserData)},
        {488, 500, -1, sizeof(::SSToCS::FinishBattle)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::SSToCS::_GameLogSwitch_default_instance_._instance,
    &::SSToCS::_UpGuideBattleStep_default_instance_._instance,
    &::SSToCS::_BattleLog_default_instance_._instance,
    &::SSToCS::_AskPing_default_instance_._instance,
    &::SSToCS::_ReportGotSomeMsg_default_instance_._instance,
    &::SSToCS::_ReportBattleShowResult_default_instance_._instance,
    &::SSToCS::_AskChangeFirstWinTime_default_instance_._instance,
    &::SSToCS::_AddGold_default_instance_._instance,
    &::SSToCS::_AskRegiste_default_instance_._instance,
    &::SSToCS::_ReportBattleFinished_default_instance_._instance,
    &::SSToCS::_userData_default_instance_._instance,
    &::SSToCS::_AskUpdateData_default_instance_._instance,
    &::SSToCS::_UserNetInfo_default_instance_._instance,
    &::SSToCS::_ReportUserOffline_default_instance_._instance,
    &::SSToCS::_AskAllCfgList_default_instance_._instance,
    &::SSToCS::_AskHeroCfgList_default_instance_._instance,
    &::SSToCS::_AskGoodsfgList_default_instance_._instance,
    &::SSToCS::_AskShopfgList_default_instance_._instance,
    &::SSToCS::_AskPublicLuaStr_default_instance_._instance,
    &::SSToCS::_AskMapCfgList_default_instance_._instance,
    &::SSToCS::_AskNewSkillCfg_default_instance_._instance,
    &::SSToCS::_AskSkillEffectAccountCfg_default_instance_._instance,
    &::SSToCS::_AskSkillEffectLeadingCfg_default_instance_._instance,
    &::SSToCS::_AskSkillEffectRangeCfg_default_instance_._instance,
    &::SSToCS::_AskSkillEffectBufCfg_default_instance_._instance,
    &::SSToCS::_AskSkillEffectSummonCfg_default_instance_._instance,
    &::SSToCS::_AskSkillEffectMoveCfg_default_instance_._instance,
    &::SSToCS::_AskSkillEffectSwitchCfg_default_instance_._instance,
    &::SSToCS::_AskPassitiveSkillCfg_default_instance_._instance,
    &::SSToCS::_AskPassitiveEffectBloodSeekCfg_default_instance_._instance,
    &::SSToCS::_AskPassitiveEffectReboundCfg_default_instance_._instance,
    &::SSToCS::_AskPassitiveEffectReliveCfg_default_instance_._instance,
    &::SSToCS::_AskUpdateGuideStep_default_instance_._instance,
    &::SSToCS::_AskUserGoHall_default_instance_._instance,
    &::SSToCS::_SyncAllBattleInfo_default_instance_._instance,
    &::SSToCS::_CreateBattleResponse_default_instance_._instance,
    &::SSToCS::_FinishBattle_BattleUserData_default_instance_._instance,
    &::SSToCS::_FinishBattle_default_instance_._instance,
};
const char descriptor_table_protodef_SSToCS_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014SSToCS.proto\022\006SSToCS\"P\n\rGameLogSwitch\022"
    "\?\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgID:!eMsgToCSF"
    "romSS_AskSSGameLogSwitch\"\202\001\n\021UpGuideBatt"
    "leStep\022B\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgID:$eM"
    "sgToCSFromSS_UpdateGuideBattleStep\022\014\n\004gu"
    "id\030\002 \001(\003\022\016\n\006taskid\030\003 \001(\005\022\013\n\003num\030\004 \001(\005\"t\n"
    "\tBattleLog\0226\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgID"
    ":\030eMsgToCSFromSS_BattleLog\022\014\n\004guid\030\002 \001(\003"
    "\022\020\n\010log_type\030\003 \001(\005\022\017\n\007log_str\030\004 \001(\t\"M\n\007A"
    "skPing\0224\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgID:\026eM"
    "sgToCSFromSS_AskPing\022\014\n\004time\030\002 \001(\003\"u\n\020Re"
    "portGotSomeMsg\022=\n\005mgsid\030\001 \001(\0162\r.SSToCS.M"
    "sgID:\037eMsgToCSFromSS_ReportGotSomeMsg\022\020\n"
    "\010gotmsgid\030\002 \001(\005\022\020\n\010otherval\030\003 \001(\004\"\177\n\026Rep"
    "ortBattleShowResult\022C\n\005mgsid\030\001 \001(\0162\r.SST"
    "oCS.MsgID:%eMsgToCSFromSS_ReportBattleSh"
    "owResult\022\020\n\010battleid\030\002 \001(\004\022\016\n\006result\030\003 \001"
    "(\005\"z\n\025AskChangeFirstWinTime\022B\n\005mgsid\030\001 \001"
    "(\0162\r.SSToCS.MsgID:$eMsgToCSFromSS_AskCha"
    "ngeFirstWinTime\022\014\n\004guid\030\002 \001(\004\022\017\n\007curtime"
    "\030\003 \001(\003\"^\n\007AddGold\0227\n\005mgsid\030\001 \001(\0162\r.SSToC"
    "S.MsgID:\031eMsgToCSFromSS_AskAddGold\022\014\n\004gu"
    "id\030\002 \001(\004\022\014\n\004gold\030\003 \001(\003\"~\n\nAskRegiste\0227\n\005"
    "mgsid\030\001 \001(\0162\r.SSToCS.MsgID:\031eMsgToCSFrom"
    "SS_AskRegiste\022\014\n\004ssid\030\002 \001(\005\022\n\n\002ip\030\003 \001(\t\022"
    "\014\n\004port\030\004 \001(\005\022\017\n\007userpwd\030\005 \001(\t\"\210\001\n\024Repor"
    "tBattleFinished\022A\n\005mgsid\030\001 \001(\0162\r.SSToCS."
    "MsgID:#eMsgToCSFromSS_ReportBattleFinish"
    "ed\022\020\n\010battleid\030\002 \001(\003\022\016\n\006campid\030\003 \001(\005\022\013\n\003"
    "res\030\004 \001(\005\"\243\001\n\010userData\022\014\n\004guid\030\001 \001(\004\022\021\n\t"
    "deadtimes\030\002 \001(\r\022\021\n\therokills\030\003 \001(\r\022\017\n\007ga"
    "meinn\030\004 \001(\r\022\016\n\006wininn\030\005 \001(\r\022\013\n\003exp\030\006 \001(\r"
    "\022\014\n\004gold\030\007 \001(\003\022\027\n\017destorybuilding\030\010 \001(\005\022"
    "\016\n\006heroid\030\t \001(\005\"p\n\rAskUpdateData\022:\n\005mgsi"
    "d\030\001 \001(\0162\r.SSToCS.MsgID:\034eMsgToCSFromSS_A"
    "skUpdateData\022#\n\tuser_data\030\002 \003(\0132\020.SSToCS"
    ".userData\"+\n\013UserNetInfo\022\014\n\004gsid\030\001 \001(\005\022\016"
    "\n\006gcnsid\030\002 \001(\005\"\213\001\n\021ReportUserOffline\022>\n\005"
    "mgsid\030\001 \001(\0162\r.SSToCS.MsgID: eMsgToCSFrom"
    "SS_ReportUserOffline\022\014\n\004guid\030\002 \001(\004\022(\n\013us"
    "ernetinfo\030\003 \001(\0132\023.SSToCS.UserNetInfo\"K\n\r"
    "AskAllCfgList\022:\n\005mgsid\030\001 \001(\0162\r.SSToCS.Ms"
    "gID:\034eMsgToCSFromSS_AskAllCfgList\"M\n\016Ask"
    "HeroCfgList\022;\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgI"
    "D:\035eMsgToCSFromSS_AskHeroCfgList\"M\n\016AskG"
    "oodsfgList\022;\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgID"
    ":\035eMsgToCSFromSS_AskGoodsfgList\"K\n\rAskSh"
    "opfgList\022:\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgID:\034"
    "eMsgToCSFromSS_AskShopfgList\"O\n\017AskPubli"
    "cLuaStr\022<\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgID:\036e"
    "MsgToCSFromSS_AskPublicLuaStr\"Z\n\rAskMapC"
    "fgList\022:\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgID:\034eM"
    "sgToCSFromSS_AskMapCfgList\022\r\n\005mapid\030\002 \001("
    "\005\"M\n\016AskNewSkillCfg\022;\n\005mgsid\030\001 \001(\0162\r.SST"
    "oCS.MsgID:\035eMsgToCSFromSS_AskNewSkillCfg"
    "\"a\n\030AskSkillEffectAccountCfg\022E\n\005mgsid\030\001 "
    "\001(\0162\r.SSToCS.MsgID:\'eMsgToCSFromSS_AskSk"
    "illEffectAccountCfg\"a\n\030AskSkillEffectLea"
    "dingCfg\022E\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgID:\'e"
    "MsgToCSFromSS_AskSkillEffectLeadingCfg\"]"
    "\n\026AskSkillEffectRangeCfg\022C\n\005mgsid\030\001 \001(\0162"
    "\r.SSToCS.MsgID:%eMsgToCSFromSS_AskSkillE"
    "ffectRangeCfg\"Y\n\024AskSkillEffectBufCfg\022A\n"
    "\005mgsid\030\001 \001(\0162\r.SSToCS.MsgID:#eMsgToCSFro"
    "mSS_AskSkillEffectBufCfg\"_\n\027AskSkillEffe"
    "ctSummonCfg\022D\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgI"
    "D:&eMsgToCSFromSS_AskSkillEffectSummonCf"
    "g\"[\n\025AskSkillEffectMoveCfg\022B\n\005mgsid\030\001 \001("
    "\0162\r.SSToCS.MsgID:$eMsgToCSFromSS_AskSkil"
    "lEffectMoveCfg\"_\n\027AskSkillEffectSwitchCf"
    "g\022D\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgID:&eMsgToC"
    "SFromSS_AskSkillEffectSwitchCfg\"Y\n\024AskPa"
    "ssitiveSkillCfg\022A\n\005mgsid\030\001 \001(\0162\r.SSToCS."
    "MsgID:#eMsgToCSFromSS_AskPassitiveSkillC"
    "fg\"m\n\036AskPassitiveEffectBloodSeekCfg\022K\n\005"
    "mgsid\030\001 \001(\0162\r.SSToCS.MsgID:-eMsgToCSFrom"
    "SS_AskPassitiveEffectBloodSeekCfg\"i\n\034Ask"
    "PassitiveEffectReboundCfg\022I\n\005mgsid\030\001 \001(\016"
    "2\r.SSToCS.MsgID:+eMsgToCSFromSS_AskPassi"
    "tiveEffectReboundCfg\"g\n\033AskPassitiveEffe"
    "ctReliveCfg\022H\n\005mgsid\030\001 \001(\0162\r.SSToCS.MsgI"
    "D:*eMsgToCSFromSS_AskPassitiveEffectReli"
    "veCfg\"\202\001\n\022AskUpdateGuideStep\022\?\n\005mgsid\030\001 "
    "\001(\0162\r.SSToCS.MsgID:!eMsgToCSFromSS_AskUp"
    "dateGuideStep\022\014\n\004guid\030\002 \001(\004\022\r\n\005state\030\003 \001"
    "(\005\022\016\n\006stepid\030\004 \001(\005\"g\n\rAskUserGoHall\022:\n\005m"
    "gsid\030\001 \001(\0162\r.SSToCS.MsgID:\034eMsgToCSFromS"
    "S_AskUserGoHall\022\014\n\004guid\030\002 \001(\004\022\014\n\004type\030\003 "
    "\001(\005\"x\n\021SyncAllBattleInfo\022:\n\005mgsid\030\001 \001(\0162"
    "\r.SSToCS.MsgID:\034eMsgToCSFromSS_AllBattle"
    "Info\022\022\n\nplaybattle\030\002 \003(\004\022\023\n\013maxbattleid\030"
    "\003 \001(\004\"x\n\024CreateBattleResponse\022A\n\005mgsid\030\001"
    " \001(\0162\r.SSToCS.MsgID:#eMsgToCSFromSS_Crea"
    "teBattleResponse\022\020\n\010battleid\030\002 \001(\003\022\013\n\003rs"
    "t\030\003 \001(\010\"\352\003\n\014FinishBattle\0229\n\005mgsid\030\001 \001(\0162"
    "\r.SSToCS.MsgID:\033eMsgToCSFromSS_FinishBat"
    "tle\022\020\n\010battleid\030\002 \001(\003\022\020\n\010winGrpID\030\003 \001(\005\022"
    "\?\n\022battelUserDataList\030\004 \003(\0132#.SSToCS.Fin"
    "ishBattle.BattleUserData\032\271\002\n\016BattleUserD"
    "ata\022\014\n\004guid\030\001 \001(\004\022\020\n\010heroguid\030\002 \001(\004\022\024\n\014t"
    "imeinsecond\030\003 \001(\r\022\r\n\005ifEnd\030\004 \001(\010\022\016\n\006hero"
    "id\030\005 \001(\005\022\020\n\010runepage\030\006 \001(\005\022\021\n\tdeadtimes\030"
    "\007 \001(\r\022\021\n\therokills\030\010 \001(\r\022\027\n\017destorybuild"
    "ing\030\t \001(\005\022\023\n\013diamondused\030\n \001(\003\022\020\n\010goldus"
    "ed\030\013 \001(\003\022\022\n\nlasthitnum\030\014 \001(\005\022\022\n\nasskilln"
    "um\030\r \001(\005\022\016\n\006herolv\030\016 \001(\005\022\017\n\007totalcp\030\017 \001("
    "\005\022\021\n\tifAiRobot\030\020 \001(\010*\345\014\n\005MsgID\022\031\n\024eMsgTo"
    "CSFromSS_Begin\020\200@\022\033\n\026eMsgToCSFromSS_AskP"
    "ing\020\201@\022\036\n\031eMsgToCSFromSS_AskRegiste\020\202@\022("
    "\n#eMsgToCSFromSS_ReportBattleFinished\020\203@"
    "\022%\n eMsgToCSFromSS_ReportUserOffline\020\204@\022"
    "\"\n\035eMsgToCSFromSS_AskBuffCfgList\020\205@\022#\n\036e"
    "MsgToCSFromSS_AskSkillCfgList\020\206@\022!\n\034eMsg"
    "ToCSFromSS_AskAllCfgList\020\207@\022\"\n\035eMsgToCSF"
    "romSS_AskHeroCfgList\020\210@\022!\n\034eMsgToCSFromS"
    "S_AskShopfgList\020\211@\022\"\n\035eMsgToCSFromSS_Ask"
    "GoodsfgList\020\212@\022#\n\036eMsgToCSFromSS_AskPubl"
    "icLuaStr\020\213@\022!\n\034eMsgToCSFromSS_AskMapCfgL"
    "ist\020\214@\022!\n\034eMsgToCSFromSS_AskMapCfgData\020\215"
    "@\022!\n\034eMsgToCSFromSS_AskUpdateData\020\216@\022\036\n\031"
    "eMsgToCSFromSS_AskAddGold\020\217@\022)\n$eMsgToCS"
    "FromSS_AskChangeFirstWinTime\020\222@\022\"\n\035eMsgT"
    "oCSFromSS_AskNewSkillCfg\020\223@\022%\n eMsgToCSF"
    "romSS_AskSkillModelType\020\224@\022,\n\'eMsgToCSFr"
    "omSS_AskSkillEffectAccountCfg\020\225@\022)\n$eMsg"
    "ToCSFromSS_AskSkillEffectEmitCfg\020\226@\022*\n%e"
    "MsgToCSFromSS_AskSkillEffectRangeCfg\020\227@\022"
    ",\n\'eMsgToCSFromSS_AskSkillEffectLeadingC"
    "fg\020\230@\022(\n#eMsgToCSFromSS_AskSkillEffectBu"
    "fCfg\020\231@\022+\n&eMsgToCSFromSS_AskSkillEffect"
    "SummonCfg\020\232@\022)\n$eMsgToCSFromSS_AskSkillE"
    "ffectMoveCfg\020\233@\022+\n&eMsgToCSFromSS_AskSki"
    "llEffectSwitchCfg\020\234@\022(\n#eMsgToCSFromSS_A"
    "skPassitiveSkillCfg\020\235@\0222\n-eMsgToCSFromSS"
    "_AskPassitiveEffectBloodSeekCfg\020\236@\0220\n+eM"
    "sgToCSFromSS_AskPassitiveEffectReboundCf"
    "g\020\237@\022/\n*eMsgToCSFromSS_AskPassitiveEffec"
    "tReliveCfg\020\240@\022&\n!eMsgToCSFromSS_AskUpdat"
    "eGuideStep\020\241@\022!\n\034eMsgToCSFromSS_AskUserG"
    "oHall\020\242@\022*\n%eMsgToCSFromSS_ReportBattleS"
    "howResult\020\243@\022$\n\037eMsgToCSFromSS_ReportGot"
    "SomeMsg\020\244@\022!\n\034eMsgToCSFromSS_AllBattleIn"
    "fo\020\245@\022\035\n\030eMsgToCSFromSS_BattleLog\020\246@\022)\n$"
    "eMsgToCSFromSS_UpdateGuideBattleStep\020\247@\022"
    "&\n!eMsgToCSFromSS_AskSSGameLogSwitch\020\250@\022"
    "(\n#eMsgToCSFromSS_CreateBattleResponse\020\354"
    "@\022 \n\033eMsgToCSFromSS_FinishBattle\020\366@\022\027\n\022e"
    "MsgToCSFromSS_End\020\264B"
};
static ::absl::once_flag descriptor_table_SSToCS_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_SSToCS_2eproto = {
    false,
    false,
    5900,
    descriptor_table_protodef_SSToCS_2eproto,
    "SSToCS.proto",
    &descriptor_table_SSToCS_2eproto_once,
    nullptr,
    0,
    38,
    schemas,
    file_default_instances,
    TableStruct_SSToCS_2eproto::offsets,
    file_level_metadata_SSToCS_2eproto,
    file_level_enum_descriptors_SSToCS_2eproto,
    file_level_service_descriptors_SSToCS_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_SSToCS_2eproto_getter() {
  return &descriptor_table_SSToCS_2eproto;
}
namespace SSToCS {
const ::google::protobuf::EnumDescriptor* MsgID_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_SSToCS_2eproto);
  return file_level_enum_descriptors_SSToCS_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MsgID_internal_data_[] = {
    1056768u, 196640u, 33554428u, 8310u, 8300u, 8500u, };
bool MsgID_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, MsgID_internal_data_);
}
// ===================================================================

class GameLogSwitch::_Internal {
 public:
  using HasBits = decltype(std::declval<GameLogSwitch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GameLogSwitch, _impl_._has_bits_);
};

GameLogSwitch::GameLogSwitch(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.GameLogSwitch)
}
GameLogSwitch::GameLogSwitch(
    ::google::protobuf::Arena* arena, const GameLogSwitch& from)
    : GameLogSwitch(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GameLogSwitch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8232)} {}

inline void GameLogSwitch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GameLogSwitch::~GameLogSwitch() {
  // @@protoc_insertion_point(destructor:SSToCS.GameLogSwitch)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameLogSwitch::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GameLogSwitch::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GameLogSwitch, _impl_._cached_size_),
              false,
          },
          &GameLogSwitch::MergeImpl,
          &GameLogSwitch::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GameLogSwitch::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.GameLogSwitch)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8232;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GameLogSwitch::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GameLogSwitch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameLogSwitch, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GameLogSwitch_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::GameLogSwitch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSSGameLogSwitch];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GameLogSwitch, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSSGameLogSwitch];
    {PROTOBUF_FIELD_OFFSET(GameLogSwitch, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* GameLogSwitch::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.GameLogSwitch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSSGameLogSwitch];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.GameLogSwitch)
  return target;
}

::size_t GameLogSwitch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.GameLogSwitch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSSGameLogSwitch];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GameLogSwitch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameLogSwitch*>(&to_msg);
  auto& from = static_cast<const GameLogSwitch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.GameLogSwitch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameLogSwitch::CopyFrom(const GameLogSwitch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.GameLogSwitch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GameLogSwitch::IsInitialized() const {
  return true;
}

void GameLogSwitch::InternalSwap(GameLogSwitch* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata GameLogSwitch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[0]);
}
// ===================================================================

class UpGuideBattleStep::_Internal {
 public:
  using HasBits = decltype(std::declval<UpGuideBattleStep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_._has_bits_);
};

UpGuideBattleStep::UpGuideBattleStep(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.UpGuideBattleStep)
}
UpGuideBattleStep::UpGuideBattleStep(
    ::google::protobuf::Arena* arena, const UpGuideBattleStep& from)
    : UpGuideBattleStep(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UpGuideBattleStep::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8231)} {}

inline void UpGuideBattleStep::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           0,
           offsetof(Impl_, num_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::num_));
}
UpGuideBattleStep::~UpGuideBattleStep() {
  // @@protoc_insertion_point(destructor:SSToCS.UpGuideBattleStep)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpGuideBattleStep::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpGuideBattleStep::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_._cached_size_),
              false,
          },
          &UpGuideBattleStep::MergeImpl,
          &UpGuideBattleStep::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UpGuideBattleStep::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.UpGuideBattleStep)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.num_) -
        reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.num_));
    _impl_.mgsid_ = 8231;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpGuideBattleStep::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> UpGuideBattleStep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpGuideBattleStep_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::UpGuideBattleStep>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 num = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpGuideBattleStep, _impl_.num_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_.num_)}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_UpdateGuideBattleStep];
    {::_pbi::TcParser::FastEvS1,
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_.mgsid_)}},
    // optional int64 guid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UpGuideBattleStep, _impl_.guid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_.guid_)}},
    // optional int32 taskid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpGuideBattleStep, _impl_.taskid_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_.taskid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_UpdateGuideBattleStep];
    {PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_.mgsid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 guid = 2;
    {PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_.guid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 taskid = 3;
    {PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_.taskid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 num = 4;
    {PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_.num_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* UpGuideBattleStep::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.UpGuideBattleStep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_UpdateGuideBattleStep];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int64 guid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_guid(), target);
  }

  // optional int32 taskid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_taskid(), target);
  }

  // optional int32 num = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.UpGuideBattleStep)
  return target;
}

::size_t UpGuideBattleStep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.UpGuideBattleStep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int64 guid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_guid());
    }

    // optional int32 taskid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_taskid());
    }

    // optional int32 num = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_num());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_UpdateGuideBattleStep];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpGuideBattleStep::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpGuideBattleStep*>(&to_msg);
  auto& from = static_cast<const UpGuideBattleStep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.UpGuideBattleStep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.taskid_ = from._impl_.taskid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.num_ = from._impl_.num_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpGuideBattleStep::CopyFrom(const UpGuideBattleStep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.UpGuideBattleStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpGuideBattleStep::IsInitialized() const {
  return true;
}

void UpGuideBattleStep::InternalSwap(UpGuideBattleStep* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_.mgsid_)
      + sizeof(UpGuideBattleStep::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(UpGuideBattleStep, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata UpGuideBattleStep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[1]);
}
// ===================================================================

class BattleLog::_Internal {
 public:
  using HasBits = decltype(std::declval<BattleLog>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BattleLog, _impl_._has_bits_);
};

BattleLog::BattleLog(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.BattleLog)
}
inline PROTOBUF_NDEBUG_INLINE BattleLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        log_str_(arena, from.log_str_) {}

BattleLog::BattleLog(
    ::google::protobuf::Arena* arena,
    const BattleLog& from)
    : ::google::protobuf::Message(arena) {
  BattleLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, guid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:SSToCS.BattleLog)
}
inline PROTOBUF_NDEBUG_INLINE BattleLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        log_str_(arena),
        mgsid_{static_cast< ::SSToCS::MsgID >(8230)} {}

inline void BattleLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           0,
           offsetof(Impl_, log_type_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::log_type_));
}
BattleLog::~BattleLog() {
  // @@protoc_insertion_point(destructor:SSToCS.BattleLog)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BattleLog::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.log_str_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BattleLog::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(BattleLog, _impl_._cached_size_),
              false,
          },
          &BattleLog::MergeImpl,
          &BattleLog::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void BattleLog::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.BattleLog)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.log_str_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.log_type_) -
        reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.log_type_));
    _impl_.mgsid_ = 8230;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BattleLog::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 32, 2> BattleLog::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BattleLog, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BattleLog_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::BattleLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string log_str = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(BattleLog, _impl_.log_str_)}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_BattleLog];
    {::_pbi::TcParser::FastEvS1,
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(BattleLog, _impl_.mgsid_)}},
    // optional int64 guid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BattleLog, _impl_.guid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(BattleLog, _impl_.guid_)}},
    // optional int32 log_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BattleLog, _impl_.log_type_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(BattleLog, _impl_.log_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_BattleLog];
    {PROTOBUF_FIELD_OFFSET(BattleLog, _impl_.mgsid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 guid = 2;
    {PROTOBUF_FIELD_OFFSET(BattleLog, _impl_.guid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 log_type = 3;
    {PROTOBUF_FIELD_OFFSET(BattleLog, _impl_.log_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string log_str = 4;
    {PROTOBUF_FIELD_OFFSET(BattleLog, _impl_.log_str_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
    "\20\0\0\0\7\0\0\0"
    "SSToCS.BattleLog"
    "log_str"
  }},
};

::uint8_t* BattleLog::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.BattleLog)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_BattleLog];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int64 guid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_guid(), target);
  }

  // optional int32 log_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_log_type(), target);
  }

  // optional string log_str = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_log_str();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SSToCS.BattleLog.log_str");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.BattleLog)
  return target;
}

::size_t BattleLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.BattleLog)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string log_str = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_log_str());
    }

    // optional int64 guid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_guid());
    }

    // optional int32 log_type = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_log_type());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_BattleLog];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BattleLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BattleLog*>(&to_msg);
  auto& from = static_cast<const BattleLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.BattleLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_log_str(from._internal_log_str());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.log_type_ = from._impl_.log_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BattleLog::CopyFrom(const BattleLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.BattleLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BattleLog::IsInitialized() const {
  return true;
}

void BattleLog::InternalSwap(BattleLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_str_, &other->_impl_.log_str_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BattleLog, _impl_.mgsid_)
      + sizeof(BattleLog::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(BattleLog, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata BattleLog::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[2]);
}
// ===================================================================

class AskPing::_Internal {
 public:
  using HasBits = decltype(std::declval<AskPing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskPing, _impl_._has_bits_);
};

AskPing::AskPing(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskPing)
}
AskPing::AskPing(
    ::google::protobuf::Arena* arena, const AskPing& from)
    : AskPing(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskPing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8193)} {}

inline void AskPing::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
AskPing::~AskPing() {
  // @@protoc_insertion_point(destructor:SSToCS.AskPing)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskPing::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskPing::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskPing, _impl_._cached_size_),
              false,
          },
          &AskPing::MergeImpl,
          &AskPing::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskPing::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskPing)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.time_ = ::int64_t{0};
    _impl_.mgsid_ = 8193;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskPing::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AskPing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskPing, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskPing_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskPing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AskPing, _impl_.time_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AskPing, _impl_.time_)}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPing];
    {::_pbi::TcParser::FastEvS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(AskPing, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPing];
    {PROTOBUF_FIELD_OFFSET(AskPing, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 time = 2;
    {PROTOBUF_FIELD_OFFSET(AskPing, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskPing::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskPing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPing];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int64 time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskPing)
  return target;
}

::size_t AskPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskPing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 time = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_time());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPing];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskPing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskPing*>(&to_msg);
  auto& from = static_cast<const AskPing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskPing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.time_ = from._impl_.time_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskPing::CopyFrom(const AskPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskPing::IsInitialized() const {
  return true;
}

void AskPing::InternalSwap(AskPing* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskPing, _impl_.mgsid_)
      + sizeof(AskPing::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(AskPing, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata AskPing::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[3]);
}
// ===================================================================

class ReportGotSomeMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<ReportGotSomeMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ReportGotSomeMsg, _impl_._has_bits_);
};

ReportGotSomeMsg::ReportGotSomeMsg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.ReportGotSomeMsg)
}
ReportGotSomeMsg::ReportGotSomeMsg(
    ::google::protobuf::Arena* arena, const ReportGotSomeMsg& from)
    : ReportGotSomeMsg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReportGotSomeMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8228)} {}

inline void ReportGotSomeMsg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, otherval_),
           0,
           offsetof(Impl_, gotmsgid_) -
               offsetof(Impl_, otherval_) +
               sizeof(Impl_::gotmsgid_));
}
ReportGotSomeMsg::~ReportGotSomeMsg() {
  // @@protoc_insertion_point(destructor:SSToCS.ReportGotSomeMsg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReportGotSomeMsg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReportGotSomeMsg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReportGotSomeMsg, _impl_._cached_size_),
              false,
          },
          &ReportGotSomeMsg::MergeImpl,
          &ReportGotSomeMsg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ReportGotSomeMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.ReportGotSomeMsg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.otherval_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.gotmsgid_) -
        reinterpret_cast<char*>(&_impl_.otherval_)) + sizeof(_impl_.gotmsgid_));
    _impl_.mgsid_ = 8228;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReportGotSomeMsg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> ReportGotSomeMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReportGotSomeMsg, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ReportGotSomeMsg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::ReportGotSomeMsg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportGotSomeMsg];
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ReportGotSomeMsg, _impl_.mgsid_)}},
    // optional int32 gotmsgid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReportGotSomeMsg, _impl_.gotmsgid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ReportGotSomeMsg, _impl_.gotmsgid_)}},
    // optional uint64 otherval = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReportGotSomeMsg, _impl_.otherval_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(ReportGotSomeMsg, _impl_.otherval_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportGotSomeMsg];
    {PROTOBUF_FIELD_OFFSET(ReportGotSomeMsg, _impl_.mgsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 gotmsgid = 2;
    {PROTOBUF_FIELD_OFFSET(ReportGotSomeMsg, _impl_.gotmsgid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint64 otherval = 3;
    {PROTOBUF_FIELD_OFFSET(ReportGotSomeMsg, _impl_.otherval_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* ReportGotSomeMsg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.ReportGotSomeMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportGotSomeMsg];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int32 gotmsgid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_gotmsgid(), target);
  }

  // optional uint64 otherval = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_otherval(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.ReportGotSomeMsg)
  return target;
}

::size_t ReportGotSomeMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.ReportGotSomeMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 otherval = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_otherval());
    }

    // optional int32 gotmsgid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gotmsgid());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportGotSomeMsg];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReportGotSomeMsg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReportGotSomeMsg*>(&to_msg);
  auto& from = static_cast<const ReportGotSomeMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.ReportGotSomeMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.otherval_ = from._impl_.otherval_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.gotmsgid_ = from._impl_.gotmsgid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReportGotSomeMsg::CopyFrom(const ReportGotSomeMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.ReportGotSomeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReportGotSomeMsg::IsInitialized() const {
  return true;
}

void ReportGotSomeMsg::InternalSwap(ReportGotSomeMsg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReportGotSomeMsg, _impl_.mgsid_)
      + sizeof(ReportGotSomeMsg::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(ReportGotSomeMsg, _impl_.otherval_)>(
          reinterpret_cast<char*>(&_impl_.otherval_),
          reinterpret_cast<char*>(&other->_impl_.otherval_));
}

::google::protobuf::Metadata ReportGotSomeMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[4]);
}
// ===================================================================

class ReportBattleShowResult::_Internal {
 public:
  using HasBits = decltype(std::declval<ReportBattleShowResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ReportBattleShowResult, _impl_._has_bits_);
};

ReportBattleShowResult::ReportBattleShowResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.ReportBattleShowResult)
}
ReportBattleShowResult::ReportBattleShowResult(
    ::google::protobuf::Arena* arena, const ReportBattleShowResult& from)
    : ReportBattleShowResult(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReportBattleShowResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8227)} {}

inline void ReportBattleShowResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, battleid_),
           0,
           offsetof(Impl_, result_) -
               offsetof(Impl_, battleid_) +
               sizeof(Impl_::result_));
}
ReportBattleShowResult::~ReportBattleShowResult() {
  // @@protoc_insertion_point(destructor:SSToCS.ReportBattleShowResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReportBattleShowResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReportBattleShowResult::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReportBattleShowResult, _impl_._cached_size_),
              false,
          },
          &ReportBattleShowResult::MergeImpl,
          &ReportBattleShowResult::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ReportBattleShowResult::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.ReportBattleShowResult)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.battleid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.result_) -
        reinterpret_cast<char*>(&_impl_.battleid_)) + sizeof(_impl_.result_));
    _impl_.mgsid_ = 8227;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReportBattleShowResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> ReportBattleShowResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReportBattleShowResult, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ReportBattleShowResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::ReportBattleShowResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleShowResult];
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ReportBattleShowResult, _impl_.mgsid_)}},
    // optional uint64 battleid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReportBattleShowResult, _impl_.battleid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(ReportBattleShowResult, _impl_.battleid_)}},
    // optional int32 result = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReportBattleShowResult, _impl_.result_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ReportBattleShowResult, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleShowResult];
    {PROTOBUF_FIELD_OFFSET(ReportBattleShowResult, _impl_.mgsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional uint64 battleid = 2;
    {PROTOBUF_FIELD_OFFSET(ReportBattleShowResult, _impl_.battleid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 result = 3;
    {PROTOBUF_FIELD_OFFSET(ReportBattleShowResult, _impl_.result_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* ReportBattleShowResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.ReportBattleShowResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleShowResult];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional uint64 battleid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_battleid(), target);
  }

  // optional int32 result = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.ReportBattleShowResult)
  return target;
}

::size_t ReportBattleShowResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.ReportBattleShowResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 battleid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_battleid());
    }

    // optional int32 result = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_result());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleShowResult];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReportBattleShowResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReportBattleShowResult*>(&to_msg);
  auto& from = static_cast<const ReportBattleShowResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.ReportBattleShowResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.battleid_ = from._impl_.battleid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.result_ = from._impl_.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReportBattleShowResult::CopyFrom(const ReportBattleShowResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.ReportBattleShowResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReportBattleShowResult::IsInitialized() const {
  return true;
}

void ReportBattleShowResult::InternalSwap(ReportBattleShowResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReportBattleShowResult, _impl_.mgsid_)
      + sizeof(ReportBattleShowResult::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(ReportBattleShowResult, _impl_.battleid_)>(
          reinterpret_cast<char*>(&_impl_.battleid_),
          reinterpret_cast<char*>(&other->_impl_.battleid_));
}

::google::protobuf::Metadata ReportBattleShowResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[5]);
}
// ===================================================================

class AskChangeFirstWinTime::_Internal {
 public:
  using HasBits = decltype(std::declval<AskChangeFirstWinTime>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskChangeFirstWinTime, _impl_._has_bits_);
};

AskChangeFirstWinTime::AskChangeFirstWinTime(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskChangeFirstWinTime)
}
AskChangeFirstWinTime::AskChangeFirstWinTime(
    ::google::protobuf::Arena* arena, const AskChangeFirstWinTime& from)
    : AskChangeFirstWinTime(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskChangeFirstWinTime::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8210)} {}

inline void AskChangeFirstWinTime::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           0,
           offsetof(Impl_, curtime_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::curtime_));
}
AskChangeFirstWinTime::~AskChangeFirstWinTime() {
  // @@protoc_insertion_point(destructor:SSToCS.AskChangeFirstWinTime)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskChangeFirstWinTime::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskChangeFirstWinTime::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskChangeFirstWinTime, _impl_._cached_size_),
              false,
          },
          &AskChangeFirstWinTime::MergeImpl,
          &AskChangeFirstWinTime::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskChangeFirstWinTime::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskChangeFirstWinTime)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.curtime_) -
        reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.curtime_));
    _impl_.mgsid_ = 8210;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskChangeFirstWinTime::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> AskChangeFirstWinTime::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskChangeFirstWinTime, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskChangeFirstWinTime_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskChangeFirstWinTime>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskChangeFirstWinTime];
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(AskChangeFirstWinTime, _impl_.mgsid_)}},
    // optional uint64 guid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AskChangeFirstWinTime, _impl_.guid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AskChangeFirstWinTime, _impl_.guid_)}},
    // optional int64 curtime = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AskChangeFirstWinTime, _impl_.curtime_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(AskChangeFirstWinTime, _impl_.curtime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskChangeFirstWinTime];
    {PROTOBUF_FIELD_OFFSET(AskChangeFirstWinTime, _impl_.mgsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional uint64 guid = 2;
    {PROTOBUF_FIELD_OFFSET(AskChangeFirstWinTime, _impl_.guid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int64 curtime = 3;
    {PROTOBUF_FIELD_OFFSET(AskChangeFirstWinTime, _impl_.curtime_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskChangeFirstWinTime::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskChangeFirstWinTime)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskChangeFirstWinTime];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional uint64 guid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_guid(), target);
  }

  // optional int64 curtime = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_curtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskChangeFirstWinTime)
  return target;
}

::size_t AskChangeFirstWinTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskChangeFirstWinTime)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 guid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_guid());
    }

    // optional int64 curtime = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_curtime());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskChangeFirstWinTime];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskChangeFirstWinTime::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskChangeFirstWinTime*>(&to_msg);
  auto& from = static_cast<const AskChangeFirstWinTime&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskChangeFirstWinTime)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.curtime_ = from._impl_.curtime_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskChangeFirstWinTime::CopyFrom(const AskChangeFirstWinTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskChangeFirstWinTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskChangeFirstWinTime::IsInitialized() const {
  return true;
}

void AskChangeFirstWinTime::InternalSwap(AskChangeFirstWinTime* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskChangeFirstWinTime, _impl_.mgsid_)
      + sizeof(AskChangeFirstWinTime::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(AskChangeFirstWinTime, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata AskChangeFirstWinTime::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[6]);
}
// ===================================================================

class AddGold::_Internal {
 public:
  using HasBits = decltype(std::declval<AddGold>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AddGold, _impl_._has_bits_);
};

AddGold::AddGold(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AddGold)
}
AddGold::AddGold(
    ::google::protobuf::Arena* arena, const AddGold& from)
    : AddGold(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AddGold::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8207)} {}

inline void AddGold::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           0,
           offsetof(Impl_, gold_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::gold_));
}
AddGold::~AddGold() {
  // @@protoc_insertion_point(destructor:SSToCS.AddGold)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AddGold::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AddGold::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AddGold, _impl_._cached_size_),
              false,
          },
          &AddGold::MergeImpl,
          &AddGold::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AddGold::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AddGold)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.gold_) -
        reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.gold_));
    _impl_.mgsid_ = 8207;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AddGold::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> AddGold::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AddGold, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AddGold_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AddGold>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAddGold];
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(AddGold, _impl_.mgsid_)}},
    // optional uint64 guid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AddGold, _impl_.guid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AddGold, _impl_.guid_)}},
    // optional int64 gold = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AddGold, _impl_.gold_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(AddGold, _impl_.gold_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAddGold];
    {PROTOBUF_FIELD_OFFSET(AddGold, _impl_.mgsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional uint64 guid = 2;
    {PROTOBUF_FIELD_OFFSET(AddGold, _impl_.guid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int64 gold = 3;
    {PROTOBUF_FIELD_OFFSET(AddGold, _impl_.gold_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AddGold::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AddGold)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAddGold];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional uint64 guid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_guid(), target);
  }

  // optional int64 gold = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_gold(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AddGold)
  return target;
}

::size_t AddGold::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AddGold)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 guid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_guid());
    }

    // optional int64 gold = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_gold());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAddGold];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AddGold::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddGold*>(&to_msg);
  auto& from = static_cast<const AddGold&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AddGold)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.gold_ = from._impl_.gold_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddGold::CopyFrom(const AddGold& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AddGold)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AddGold::IsInitialized() const {
  return true;
}

void AddGold::InternalSwap(AddGold* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddGold, _impl_.mgsid_)
      + sizeof(AddGold::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(AddGold, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata AddGold::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[7]);
}
// ===================================================================

class AskRegiste::_Internal {
 public:
  using HasBits = decltype(std::declval<AskRegiste>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_._has_bits_);
};

AskRegiste::AskRegiste(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskRegiste)
}
inline PROTOBUF_NDEBUG_INLINE AskRegiste::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ip_(arena, from.ip_),
        userpwd_(arena, from.userpwd_) {}

AskRegiste::AskRegiste(
    ::google::protobuf::Arena* arena,
    const AskRegiste& from)
    : ::google::protobuf::Message(arena) {
  AskRegiste* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ssid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ssid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, ssid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:SSToCS.AskRegiste)
}
inline PROTOBUF_NDEBUG_INLINE AskRegiste::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ip_(arena),
        userpwd_(arena),
        mgsid_{static_cast< ::SSToCS::MsgID >(8194)} {}

inline void AskRegiste::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ssid_),
           0,
           offsetof(Impl_, port_) -
               offsetof(Impl_, ssid_) +
               sizeof(Impl_::port_));
}
AskRegiste::~AskRegiste() {
  // @@protoc_insertion_point(destructor:SSToCS.AskRegiste)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskRegiste::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.userpwd_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskRegiste::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_._cached_size_),
              false,
          },
          &AskRegiste::MergeImpl,
          &AskRegiste::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskRegiste::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskRegiste)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.ip_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.userpwd_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.ssid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.port_) -
        reinterpret_cast<char*>(&_impl_.ssid_)) + sizeof(_impl_.port_));
    _impl_.mgsid_ = 8194;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskRegiste::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 35, 2> AskRegiste::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskRegiste_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskRegiste>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskRegiste];
    {::_pbi::TcParser::FastEvS1,
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.mgsid_)}},
    // optional int32 ssid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskRegiste, _impl_.ssid_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.ssid_)}},
    // optional string ip = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.ip_)}},
    // optional int32 port = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskRegiste, _impl_.port_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.port_)}},
    // optional string userpwd = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.userpwd_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskRegiste];
    {PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.mgsid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 ssid = 2;
    {PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.ssid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string ip = 3;
    {PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.ip_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 port = 4;
    {PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.port_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string userpwd = 5;
    {PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.userpwd_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
    "\21\0\0\2\0\7\0\0"
    "SSToCS.AskRegiste"
    "ip"
    "userpwd"
  }},
};

::uint8_t* AskRegiste::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskRegiste)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskRegiste];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int32 ssid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_ssid(), target);
  }

  // optional string ip = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SSToCS.AskRegiste.ip");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional int32 port = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_port(), target);
  }

  // optional string userpwd = 5;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_userpwd();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "SSToCS.AskRegiste.userpwd");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskRegiste)
  return target;
}

::size_t AskRegiste::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskRegiste)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string ip = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ip());
    }

    // optional string userpwd = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_userpwd());
    }

    // optional int32 ssid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ssid());
    }

    // optional int32 port = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_port());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskRegiste];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskRegiste::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskRegiste*>(&to_msg);
  auto& from = static_cast<const AskRegiste&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskRegiste)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_ip(from._internal_ip());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_userpwd(from._internal_userpwd());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ssid_ = from._impl_.ssid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.port_ = from._impl_.port_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskRegiste::CopyFrom(const AskRegiste& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskRegiste)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskRegiste::IsInitialized() const {
  return true;
}

void AskRegiste::InternalSwap(AskRegiste* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userpwd_, &other->_impl_.userpwd_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.mgsid_)
      + sizeof(AskRegiste::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.ssid_)>(
          reinterpret_cast<char*>(&_impl_.ssid_),
          reinterpret_cast<char*>(&other->_impl_.ssid_));
}

::google::protobuf::Metadata AskRegiste::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[8]);
}
// ===================================================================

class ReportBattleFinished::_Internal {
 public:
  using HasBits = decltype(std::declval<ReportBattleFinished>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_._has_bits_);
};

ReportBattleFinished::ReportBattleFinished(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.ReportBattleFinished)
}
ReportBattleFinished::ReportBattleFinished(
    ::google::protobuf::Arena* arena, const ReportBattleFinished& from)
    : ReportBattleFinished(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReportBattleFinished::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8195)} {}

inline void ReportBattleFinished::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, battleid_),
           0,
           offsetof(Impl_, res_) -
               offsetof(Impl_, battleid_) +
               sizeof(Impl_::res_));
}
ReportBattleFinished::~ReportBattleFinished() {
  // @@protoc_insertion_point(destructor:SSToCS.ReportBattleFinished)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReportBattleFinished::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReportBattleFinished::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_._cached_size_),
              false,
          },
          &ReportBattleFinished::MergeImpl,
          &ReportBattleFinished::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ReportBattleFinished::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.ReportBattleFinished)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.battleid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.res_) -
        reinterpret_cast<char*>(&_impl_.battleid_)) + sizeof(_impl_.res_));
    _impl_.mgsid_ = 8195;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReportBattleFinished::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> ReportBattleFinished::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ReportBattleFinished_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::ReportBattleFinished>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 res = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReportBattleFinished, _impl_.res_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_.res_)}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleFinished];
    {::_pbi::TcParser::FastEvS1,
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_.mgsid_)}},
    // optional int64 battleid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReportBattleFinished, _impl_.battleid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_.battleid_)}},
    // optional int32 campid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReportBattleFinished, _impl_.campid_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_.campid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleFinished];
    {PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_.mgsid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 battleid = 2;
    {PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_.battleid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 campid = 3;
    {PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_.campid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 res = 4;
    {PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_.res_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* ReportBattleFinished::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.ReportBattleFinished)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleFinished];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int64 battleid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_battleid(), target);
  }

  // optional int32 campid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_campid(), target);
  }

  // optional int32 res = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.ReportBattleFinished)
  return target;
}

::size_t ReportBattleFinished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.ReportBattleFinished)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int64 battleid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_battleid());
    }

    // optional int32 campid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_campid());
    }

    // optional int32 res = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_res());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportBattleFinished];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReportBattleFinished::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReportBattleFinished*>(&to_msg);
  auto& from = static_cast<const ReportBattleFinished&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.ReportBattleFinished)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.battleid_ = from._impl_.battleid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.campid_ = from._impl_.campid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.res_ = from._impl_.res_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReportBattleFinished::CopyFrom(const ReportBattleFinished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.ReportBattleFinished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReportBattleFinished::IsInitialized() const {
  return true;
}

void ReportBattleFinished::InternalSwap(ReportBattleFinished* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_.mgsid_)
      + sizeof(ReportBattleFinished::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(ReportBattleFinished, _impl_.battleid_)>(
          reinterpret_cast<char*>(&_impl_.battleid_),
          reinterpret_cast<char*>(&other->_impl_.battleid_));
}

::google::protobuf::Metadata ReportBattleFinished::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[9]);
}
// ===================================================================

class userData::_Internal {
 public:
  using HasBits = decltype(std::declval<userData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(userData, _impl_._has_bits_);
};

userData::userData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.userData)
}
userData::userData(
    ::google::protobuf::Arena* arena, const userData& from)
    : userData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE userData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void userData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           0,
           offsetof(Impl_, heroid_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::heroid_));
}
userData::~userData() {
  // @@protoc_insertion_point(destructor:SSToCS.userData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void userData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
userData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(userData, _impl_._cached_size_),
              false,
          },
          &userData::MergeImpl,
          &userData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void userData::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.userData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.destorybuilding_) -
        reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.destorybuilding_));
  }
  _impl_.heroid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* userData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> userData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(userData, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_userData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::userData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 guid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(userData, _impl_.guid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(userData, _impl_.guid_)}},
    // optional uint32 deadtimes = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(userData, _impl_.deadtimes_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(userData, _impl_.deadtimes_)}},
    // optional uint32 herokills = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(userData, _impl_.herokills_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(userData, _impl_.herokills_)}},
    // optional uint32 gameinn = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(userData, _impl_.gameinn_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(userData, _impl_.gameinn_)}},
    // optional uint32 wininn = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(userData, _impl_.wininn_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(userData, _impl_.wininn_)}},
    // optional uint32 exp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(userData, _impl_.exp_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(userData, _impl_.exp_)}},
    // optional int64 gold = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(userData, _impl_.gold_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(userData, _impl_.gold_)}},
    // optional int32 destorybuilding = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(userData, _impl_.destorybuilding_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(userData, _impl_.destorybuilding_)}},
    // optional int32 heroid = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(userData, _impl_.heroid_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(userData, _impl_.heroid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 guid = 1;
    {PROTOBUF_FIELD_OFFSET(userData, _impl_.guid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 deadtimes = 2;
    {PROTOBUF_FIELD_OFFSET(userData, _impl_.deadtimes_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 herokills = 3;
    {PROTOBUF_FIELD_OFFSET(userData, _impl_.herokills_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 gameinn = 4;
    {PROTOBUF_FIELD_OFFSET(userData, _impl_.gameinn_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 wininn = 5;
    {PROTOBUF_FIELD_OFFSET(userData, _impl_.wininn_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 exp = 6;
    {PROTOBUF_FIELD_OFFSET(userData, _impl_.exp_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int64 gold = 7;
    {PROTOBUF_FIELD_OFFSET(userData, _impl_.gold_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 destorybuilding = 8;
    {PROTOBUF_FIELD_OFFSET(userData, _impl_.destorybuilding_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 heroid = 9;
    {PROTOBUF_FIELD_OFFSET(userData, _impl_.heroid_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* userData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.userData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_guid(), target);
  }

  // optional uint32 deadtimes = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_deadtimes(), target);
  }

  // optional uint32 herokills = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_herokills(), target);
  }

  // optional uint32 gameinn = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_gameinn(), target);
  }

  // optional uint32 wininn = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_wininn(), target);
  }

  // optional uint32 exp = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_exp(), target);
  }

  // optional int64 gold = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_gold(), target);
  }

  // optional int32 destorybuilding = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_destorybuilding(), target);
  }

  // optional int32 heroid = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_heroid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.userData)
  return target;
}

::size_t userData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.userData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint64 guid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_guid());
    }

    // optional uint32 deadtimes = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_deadtimes());
    }

    // optional uint32 herokills = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_herokills());
    }

    // optional uint32 gameinn = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_gameinn());
    }

    // optional uint32 wininn = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_wininn());
    }

    // optional int64 gold = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_gold());
    }

    // optional uint32 exp = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_exp());
    }

    // optional int32 destorybuilding = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_destorybuilding());
    }

  }
  // optional int32 heroid = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_heroid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void userData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<userData*>(&to_msg);
  auto& from = static_cast<const userData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.userData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.deadtimes_ = from._impl_.deadtimes_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.herokills_ = from._impl_.herokills_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.gameinn_ = from._impl_.gameinn_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.wininn_ = from._impl_.wininn_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.gold_ = from._impl_.gold_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.exp_ = from._impl_.exp_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.destorybuilding_ = from._impl_.destorybuilding_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.heroid_ = from._impl_.heroid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void userData::CopyFrom(const userData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.userData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool userData::IsInitialized() const {
  return true;
}

void userData::InternalSwap(userData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(userData, _impl_.heroid_)
      + sizeof(userData::_impl_.heroid_)
      - PROTOBUF_FIELD_OFFSET(userData, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata userData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[10]);
}
// ===================================================================

class AskUpdateData::_Internal {
 public:
  using HasBits = decltype(std::declval<AskUpdateData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskUpdateData, _impl_._has_bits_);
};

AskUpdateData::AskUpdateData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskUpdateData)
}
inline PROTOBUF_NDEBUG_INLINE AskUpdateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        user_data_{visibility, arena, from.user_data_} {}

AskUpdateData::AskUpdateData(
    ::google::protobuf::Arena* arena,
    const AskUpdateData& from)
    : ::google::protobuf::Message(arena) {
  AskUpdateData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.mgsid_ = from._impl_.mgsid_;

  // @@protoc_insertion_point(copy_constructor:SSToCS.AskUpdateData)
}
inline PROTOBUF_NDEBUG_INLINE AskUpdateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        user_data_{visibility, arena},
        mgsid_{static_cast< ::SSToCS::MsgID >(8206)} {}

inline void AskUpdateData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskUpdateData::~AskUpdateData() {
  // @@protoc_insertion_point(destructor:SSToCS.AskUpdateData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskUpdateData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskUpdateData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskUpdateData, _impl_._cached_size_),
              false,
          },
          &AskUpdateData::MergeImpl,
          &AskUpdateData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskUpdateData::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskUpdateData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_data_.Clear();
  _impl_.mgsid_ = 8206;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskUpdateData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> AskUpdateData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskUpdateData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskUpdateData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskUpdateData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SSToCS.userData user_data = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(AskUpdateData, _impl_.user_data_)}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateData];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskUpdateData, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateData];
    {PROTOBUF_FIELD_OFFSET(AskUpdateData, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // repeated .SSToCS.userData user_data = 2;
    {PROTOBUF_FIELD_OFFSET(AskUpdateData, _impl_.user_data_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
    {::_pbi::TcParser::GetTable<::SSToCS::userData>()},
  }}, {{
  }},
};

::uint8_t* AskUpdateData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskUpdateData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateData];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // repeated .SSToCS.userData user_data = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_user_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_user_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskUpdateData)
  return target;
}

::size_t AskUpdateData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskUpdateData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SSToCS.userData user_data = 2;
  total_size += 1UL * this->_internal_user_data_size();
  for (const auto& msg : this->_internal_user_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateData];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskUpdateData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskUpdateData*>(&to_msg);
  auto& from = static_cast<const AskUpdateData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskUpdateData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_user_data()->MergeFrom(
      from._internal_user_data());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskUpdateData::CopyFrom(const AskUpdateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskUpdateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskUpdateData::IsInitialized() const {
  return true;
}

void AskUpdateData::InternalSwap(AskUpdateData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.user_data_.InternalSwap(&other->_impl_.user_data_);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskUpdateData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[11]);
}
// ===================================================================

class UserNetInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<UserNetInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserNetInfo, _impl_._has_bits_);
};

UserNetInfo::UserNetInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.UserNetInfo)
}
UserNetInfo::UserNetInfo(
    ::google::protobuf::Arena* arena, const UserNetInfo& from)
    : UserNetInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UserNetInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UserNetInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           0,
           offsetof(Impl_, gcnsid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::gcnsid_));
}
UserNetInfo::~UserNetInfo() {
  // @@protoc_insertion_point(destructor:SSToCS.UserNetInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserNetInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserNetInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserNetInfo, _impl_._cached_size_),
              false,
          },
          &UserNetInfo::MergeImpl,
          &UserNetInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UserNetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.UserNetInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.gsid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.gcnsid_) -
        reinterpret_cast<char*>(&_impl_.gsid_)) + sizeof(_impl_.gcnsid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserNetInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> UserNetInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserNetInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserNetInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::UserNetInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 gcnsid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserNetInfo, _impl_.gcnsid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UserNetInfo, _impl_.gcnsid_)}},
    // optional int32 gsid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserNetInfo, _impl_.gsid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(UserNetInfo, _impl_.gsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 gsid = 1;
    {PROTOBUF_FIELD_OFFSET(UserNetInfo, _impl_.gsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 gcnsid = 2;
    {PROTOBUF_FIELD_OFFSET(UserNetInfo, _impl_.gcnsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* UserNetInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.UserNetInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 gsid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_gsid(), target);
  }

  // optional int32 gcnsid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_gcnsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.UserNetInfo)
  return target;
}

::size_t UserNetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.UserNetInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 gsid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gsid());
    }

    // optional int32 gcnsid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gcnsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserNetInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserNetInfo*>(&to_msg);
  auto& from = static_cast<const UserNetInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.UserNetInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.gsid_ = from._impl_.gsid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.gcnsid_ = from._impl_.gcnsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserNetInfo::CopyFrom(const UserNetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.UserNetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserNetInfo::IsInitialized() const {
  return true;
}

void UserNetInfo::InternalSwap(UserNetInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserNetInfo, _impl_.gcnsid_)
      + sizeof(UserNetInfo::_impl_.gcnsid_)
      - PROTOBUF_FIELD_OFFSET(UserNetInfo, _impl_.gsid_)>(
          reinterpret_cast<char*>(&_impl_.gsid_),
          reinterpret_cast<char*>(&other->_impl_.gsid_));
}

::google::protobuf::Metadata UserNetInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[12]);
}
// ===================================================================

class ReportUserOffline::_Internal {
 public:
  using HasBits = decltype(std::declval<ReportUserOffline>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ReportUserOffline, _impl_._has_bits_);
};

ReportUserOffline::ReportUserOffline(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.ReportUserOffline)
}
inline PROTOBUF_NDEBUG_INLINE ReportUserOffline::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ReportUserOffline::ReportUserOffline(
    ::google::protobuf::Arena* arena,
    const ReportUserOffline& from)
    : ::google::protobuf::Message(arena) {
  ReportUserOffline* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.usernetinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::SSToCS::UserNetInfo>(
                              arena, *from._impl_.usernetinfo_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, guid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:SSToCS.ReportUserOffline)
}
inline PROTOBUF_NDEBUG_INLINE ReportUserOffline::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8196)} {}

inline void ReportUserOffline::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, usernetinfo_),
           0,
           offsetof(Impl_, guid_) -
               offsetof(Impl_, usernetinfo_) +
               sizeof(Impl_::guid_));
}
ReportUserOffline::~ReportUserOffline() {
  // @@protoc_insertion_point(destructor:SSToCS.ReportUserOffline)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReportUserOffline::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.usernetinfo_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReportUserOffline::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReportUserOffline, _impl_._cached_size_),
              false,
          },
          &ReportUserOffline::MergeImpl,
          &ReportUserOffline::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ReportUserOffline::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.ReportUserOffline)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.usernetinfo_ != nullptr);
    _impl_.usernetinfo_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    _impl_.guid_ = ::uint64_t{0u};
    _impl_.mgsid_ = 8196;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReportUserOffline::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> ReportUserOffline::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReportUserOffline, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ReportUserOffline_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::ReportUserOffline>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportUserOffline];
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ReportUserOffline, _impl_.mgsid_)}},
    // optional uint64 guid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReportUserOffline, _impl_.guid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ReportUserOffline, _impl_.guid_)}},
    // optional .SSToCS.UserNetInfo usernetinfo = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(ReportUserOffline, _impl_.usernetinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportUserOffline];
    {PROTOBUF_FIELD_OFFSET(ReportUserOffline, _impl_.mgsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional uint64 guid = 2;
    {PROTOBUF_FIELD_OFFSET(ReportUserOffline, _impl_.guid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional .SSToCS.UserNetInfo usernetinfo = 3;
    {PROTOBUF_FIELD_OFFSET(ReportUserOffline, _impl_.usernetinfo_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
    {::_pbi::TcParser::GetTable<::SSToCS::UserNetInfo>()},
  }}, {{
  }},
};

::uint8_t* ReportUserOffline::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.ReportUserOffline)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportUserOffline];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional uint64 guid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_guid(), target);
  }

  // optional .SSToCS.UserNetInfo usernetinfo = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.usernetinfo_, _impl_.usernetinfo_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.ReportUserOffline)
  return target;
}

::size_t ReportUserOffline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.ReportUserOffline)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .SSToCS.UserNetInfo usernetinfo = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.usernetinfo_);
    }

    // optional uint64 guid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_guid());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_ReportUserOffline];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReportUserOffline::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReportUserOffline*>(&to_msg);
  auto& from = static_cast<const ReportUserOffline&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.ReportUserOffline)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.usernetinfo_ != nullptr);
      if (_this->_impl_.usernetinfo_ == nullptr) {
        _this->_impl_.usernetinfo_ =
            ::google::protobuf::Message::CopyConstruct<::SSToCS::UserNetInfo>(arena, *from._impl_.usernetinfo_);
      } else {
        _this->_impl_.usernetinfo_->MergeFrom(*from._impl_.usernetinfo_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReportUserOffline::CopyFrom(const ReportUserOffline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.ReportUserOffline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReportUserOffline::IsInitialized() const {
  return true;
}

void ReportUserOffline::InternalSwap(ReportUserOffline* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReportUserOffline, _impl_.mgsid_)
      + sizeof(ReportUserOffline::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(ReportUserOffline, _impl_.usernetinfo_)>(
          reinterpret_cast<char*>(&_impl_.usernetinfo_),
          reinterpret_cast<char*>(&other->_impl_.usernetinfo_));
}

::google::protobuf::Metadata ReportUserOffline::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[13]);
}
// ===================================================================

class AskAllCfgList::_Internal {
 public:
  using HasBits = decltype(std::declval<AskAllCfgList>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskAllCfgList, _impl_._has_bits_);
};

AskAllCfgList::AskAllCfgList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskAllCfgList)
}
AskAllCfgList::AskAllCfgList(
    ::google::protobuf::Arena* arena, const AskAllCfgList& from)
    : AskAllCfgList(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskAllCfgList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8199)} {}

inline void AskAllCfgList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskAllCfgList::~AskAllCfgList() {
  // @@protoc_insertion_point(destructor:SSToCS.AskAllCfgList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskAllCfgList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskAllCfgList::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskAllCfgList, _impl_._cached_size_),
              false,
          },
          &AskAllCfgList::MergeImpl,
          &AskAllCfgList::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskAllCfgList::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskAllCfgList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8199;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskAllCfgList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskAllCfgList::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskAllCfgList, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskAllCfgList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskAllCfgList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAllCfgList];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskAllCfgList, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAllCfgList];
    {PROTOBUF_FIELD_OFFSET(AskAllCfgList, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskAllCfgList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskAllCfgList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAllCfgList];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskAllCfgList)
  return target;
}

::size_t AskAllCfgList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskAllCfgList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskAllCfgList];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskAllCfgList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskAllCfgList*>(&to_msg);
  auto& from = static_cast<const AskAllCfgList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskAllCfgList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskAllCfgList::CopyFrom(const AskAllCfgList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskAllCfgList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskAllCfgList::IsInitialized() const {
  return true;
}

void AskAllCfgList::InternalSwap(AskAllCfgList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskAllCfgList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[14]);
}
// ===================================================================

class AskHeroCfgList::_Internal {
 public:
  using HasBits = decltype(std::declval<AskHeroCfgList>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskHeroCfgList, _impl_._has_bits_);
};

AskHeroCfgList::AskHeroCfgList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskHeroCfgList)
}
AskHeroCfgList::AskHeroCfgList(
    ::google::protobuf::Arena* arena, const AskHeroCfgList& from)
    : AskHeroCfgList(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskHeroCfgList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8200)} {}

inline void AskHeroCfgList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskHeroCfgList::~AskHeroCfgList() {
  // @@protoc_insertion_point(destructor:SSToCS.AskHeroCfgList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskHeroCfgList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskHeroCfgList::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskHeroCfgList, _impl_._cached_size_),
              false,
          },
          &AskHeroCfgList::MergeImpl,
          &AskHeroCfgList::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskHeroCfgList::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskHeroCfgList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8200;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskHeroCfgList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskHeroCfgList::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskHeroCfgList, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskHeroCfgList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskHeroCfgList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskHeroCfgList];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskHeroCfgList, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskHeroCfgList];
    {PROTOBUF_FIELD_OFFSET(AskHeroCfgList, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskHeroCfgList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskHeroCfgList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskHeroCfgList];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskHeroCfgList)
  return target;
}

::size_t AskHeroCfgList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskHeroCfgList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskHeroCfgList];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskHeroCfgList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskHeroCfgList*>(&to_msg);
  auto& from = static_cast<const AskHeroCfgList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskHeroCfgList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskHeroCfgList::CopyFrom(const AskHeroCfgList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskHeroCfgList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskHeroCfgList::IsInitialized() const {
  return true;
}

void AskHeroCfgList::InternalSwap(AskHeroCfgList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskHeroCfgList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[15]);
}
// ===================================================================

class AskGoodsfgList::_Internal {
 public:
  using HasBits = decltype(std::declval<AskGoodsfgList>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskGoodsfgList, _impl_._has_bits_);
};

AskGoodsfgList::AskGoodsfgList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskGoodsfgList)
}
AskGoodsfgList::AskGoodsfgList(
    ::google::protobuf::Arena* arena, const AskGoodsfgList& from)
    : AskGoodsfgList(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskGoodsfgList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8202)} {}

inline void AskGoodsfgList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskGoodsfgList::~AskGoodsfgList() {
  // @@protoc_insertion_point(destructor:SSToCS.AskGoodsfgList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskGoodsfgList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskGoodsfgList::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskGoodsfgList, _impl_._cached_size_),
              false,
          },
          &AskGoodsfgList::MergeImpl,
          &AskGoodsfgList::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskGoodsfgList::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskGoodsfgList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8202;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskGoodsfgList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskGoodsfgList::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskGoodsfgList, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskGoodsfgList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskGoodsfgList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskGoodsfgList];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskGoodsfgList, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskGoodsfgList];
    {PROTOBUF_FIELD_OFFSET(AskGoodsfgList, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskGoodsfgList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskGoodsfgList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskGoodsfgList];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskGoodsfgList)
  return target;
}

::size_t AskGoodsfgList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskGoodsfgList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskGoodsfgList];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskGoodsfgList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskGoodsfgList*>(&to_msg);
  auto& from = static_cast<const AskGoodsfgList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskGoodsfgList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskGoodsfgList::CopyFrom(const AskGoodsfgList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskGoodsfgList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskGoodsfgList::IsInitialized() const {
  return true;
}

void AskGoodsfgList::InternalSwap(AskGoodsfgList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskGoodsfgList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[16]);
}
// ===================================================================

class AskShopfgList::_Internal {
 public:
  using HasBits = decltype(std::declval<AskShopfgList>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskShopfgList, _impl_._has_bits_);
};

AskShopfgList::AskShopfgList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskShopfgList)
}
AskShopfgList::AskShopfgList(
    ::google::protobuf::Arena* arena, const AskShopfgList& from)
    : AskShopfgList(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskShopfgList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8201)} {}

inline void AskShopfgList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskShopfgList::~AskShopfgList() {
  // @@protoc_insertion_point(destructor:SSToCS.AskShopfgList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskShopfgList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskShopfgList::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskShopfgList, _impl_._cached_size_),
              false,
          },
          &AskShopfgList::MergeImpl,
          &AskShopfgList::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskShopfgList::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskShopfgList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8201;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskShopfgList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskShopfgList::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskShopfgList, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskShopfgList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskShopfgList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskShopfgList];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskShopfgList, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskShopfgList];
    {PROTOBUF_FIELD_OFFSET(AskShopfgList, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskShopfgList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskShopfgList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskShopfgList];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskShopfgList)
  return target;
}

::size_t AskShopfgList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskShopfgList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskShopfgList];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskShopfgList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskShopfgList*>(&to_msg);
  auto& from = static_cast<const AskShopfgList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskShopfgList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskShopfgList::CopyFrom(const AskShopfgList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskShopfgList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskShopfgList::IsInitialized() const {
  return true;
}

void AskShopfgList::InternalSwap(AskShopfgList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskShopfgList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[17]);
}
// ===================================================================

class AskPublicLuaStr::_Internal {
 public:
  using HasBits = decltype(std::declval<AskPublicLuaStr>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskPublicLuaStr, _impl_._has_bits_);
};

AskPublicLuaStr::AskPublicLuaStr(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskPublicLuaStr)
}
AskPublicLuaStr::AskPublicLuaStr(
    ::google::protobuf::Arena* arena, const AskPublicLuaStr& from)
    : AskPublicLuaStr(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskPublicLuaStr::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8203)} {}

inline void AskPublicLuaStr::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskPublicLuaStr::~AskPublicLuaStr() {
  // @@protoc_insertion_point(destructor:SSToCS.AskPublicLuaStr)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskPublicLuaStr::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskPublicLuaStr::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskPublicLuaStr, _impl_._cached_size_),
              false,
          },
          &AskPublicLuaStr::MergeImpl,
          &AskPublicLuaStr::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskPublicLuaStr::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskPublicLuaStr)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8203;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskPublicLuaStr::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskPublicLuaStr::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskPublicLuaStr, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskPublicLuaStr_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskPublicLuaStr>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPublicLuaStr];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskPublicLuaStr, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPublicLuaStr];
    {PROTOBUF_FIELD_OFFSET(AskPublicLuaStr, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskPublicLuaStr::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskPublicLuaStr)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPublicLuaStr];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskPublicLuaStr)
  return target;
}

::size_t AskPublicLuaStr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskPublicLuaStr)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPublicLuaStr];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskPublicLuaStr::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskPublicLuaStr*>(&to_msg);
  auto& from = static_cast<const AskPublicLuaStr&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskPublicLuaStr)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskPublicLuaStr::CopyFrom(const AskPublicLuaStr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskPublicLuaStr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskPublicLuaStr::IsInitialized() const {
  return true;
}

void AskPublicLuaStr::InternalSwap(AskPublicLuaStr* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskPublicLuaStr::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[18]);
}
// ===================================================================

class AskMapCfgList::_Internal {
 public:
  using HasBits = decltype(std::declval<AskMapCfgList>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskMapCfgList, _impl_._has_bits_);
};

AskMapCfgList::AskMapCfgList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskMapCfgList)
}
AskMapCfgList::AskMapCfgList(
    ::google::protobuf::Arena* arena, const AskMapCfgList& from)
    : AskMapCfgList(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskMapCfgList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8204)} {}

inline void AskMapCfgList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mapid_ = {};
}
AskMapCfgList::~AskMapCfgList() {
  // @@protoc_insertion_point(destructor:SSToCS.AskMapCfgList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskMapCfgList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskMapCfgList::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskMapCfgList, _impl_._cached_size_),
              false,
          },
          &AskMapCfgList::MergeImpl,
          &AskMapCfgList::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskMapCfgList::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskMapCfgList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.mapid_ = 0;
    _impl_.mgsid_ = 8204;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskMapCfgList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AskMapCfgList::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskMapCfgList, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskMapCfgList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskMapCfgList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 mapid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskMapCfgList, _impl_.mapid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AskMapCfgList, _impl_.mapid_)}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskMapCfgList];
    {::_pbi::TcParser::FastEvS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(AskMapCfgList, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskMapCfgList];
    {PROTOBUF_FIELD_OFFSET(AskMapCfgList, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 mapid = 2;
    {PROTOBUF_FIELD_OFFSET(AskMapCfgList, _impl_.mapid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskMapCfgList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskMapCfgList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskMapCfgList];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int32 mapid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_mapid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskMapCfgList)
  return target;
}

::size_t AskMapCfgList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskMapCfgList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 mapid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_mapid());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskMapCfgList];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskMapCfgList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskMapCfgList*>(&to_msg);
  auto& from = static_cast<const AskMapCfgList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskMapCfgList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.mapid_ = from._impl_.mapid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskMapCfgList::CopyFrom(const AskMapCfgList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskMapCfgList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskMapCfgList::IsInitialized() const {
  return true;
}

void AskMapCfgList::InternalSwap(AskMapCfgList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskMapCfgList, _impl_.mgsid_)
      + sizeof(AskMapCfgList::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(AskMapCfgList, _impl_.mapid_)>(
          reinterpret_cast<char*>(&_impl_.mapid_),
          reinterpret_cast<char*>(&other->_impl_.mapid_));
}

::google::protobuf::Metadata AskMapCfgList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[19]);
}
// ===================================================================

class AskNewSkillCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskNewSkillCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskNewSkillCfg, _impl_._has_bits_);
};

AskNewSkillCfg::AskNewSkillCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskNewSkillCfg)
}
AskNewSkillCfg::AskNewSkillCfg(
    ::google::protobuf::Arena* arena, const AskNewSkillCfg& from)
    : AskNewSkillCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskNewSkillCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8211)} {}

inline void AskNewSkillCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskNewSkillCfg::~AskNewSkillCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskNewSkillCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskNewSkillCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskNewSkillCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskNewSkillCfg, _impl_._cached_size_),
              false,
          },
          &AskNewSkillCfg::MergeImpl,
          &AskNewSkillCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskNewSkillCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskNewSkillCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8211;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskNewSkillCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskNewSkillCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskNewSkillCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskNewSkillCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskNewSkillCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskNewSkillCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskNewSkillCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskNewSkillCfg];
    {PROTOBUF_FIELD_OFFSET(AskNewSkillCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskNewSkillCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskNewSkillCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskNewSkillCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskNewSkillCfg)
  return target;
}

::size_t AskNewSkillCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskNewSkillCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskNewSkillCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskNewSkillCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskNewSkillCfg*>(&to_msg);
  auto& from = static_cast<const AskNewSkillCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskNewSkillCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskNewSkillCfg::CopyFrom(const AskNewSkillCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskNewSkillCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskNewSkillCfg::IsInitialized() const {
  return true;
}

void AskNewSkillCfg::InternalSwap(AskNewSkillCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskNewSkillCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[20]);
}
// ===================================================================

class AskSkillEffectAccountCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskSkillEffectAccountCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskSkillEffectAccountCfg, _impl_._has_bits_);
};

AskSkillEffectAccountCfg::AskSkillEffectAccountCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskSkillEffectAccountCfg)
}
AskSkillEffectAccountCfg::AskSkillEffectAccountCfg(
    ::google::protobuf::Arena* arena, const AskSkillEffectAccountCfg& from)
    : AskSkillEffectAccountCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskSkillEffectAccountCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8213)} {}

inline void AskSkillEffectAccountCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskSkillEffectAccountCfg::~AskSkillEffectAccountCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskSkillEffectAccountCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskSkillEffectAccountCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskSkillEffectAccountCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskSkillEffectAccountCfg, _impl_._cached_size_),
              false,
          },
          &AskSkillEffectAccountCfg::MergeImpl,
          &AskSkillEffectAccountCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskSkillEffectAccountCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskSkillEffectAccountCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8213;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskSkillEffectAccountCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskSkillEffectAccountCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskSkillEffectAccountCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskSkillEffectAccountCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskSkillEffectAccountCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectAccountCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskSkillEffectAccountCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectAccountCfg];
    {PROTOBUF_FIELD_OFFSET(AskSkillEffectAccountCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskSkillEffectAccountCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskSkillEffectAccountCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectAccountCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskSkillEffectAccountCfg)
  return target;
}

::size_t AskSkillEffectAccountCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskSkillEffectAccountCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectAccountCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskSkillEffectAccountCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskSkillEffectAccountCfg*>(&to_msg);
  auto& from = static_cast<const AskSkillEffectAccountCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskSkillEffectAccountCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskSkillEffectAccountCfg::CopyFrom(const AskSkillEffectAccountCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskSkillEffectAccountCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskSkillEffectAccountCfg::IsInitialized() const {
  return true;
}

void AskSkillEffectAccountCfg::InternalSwap(AskSkillEffectAccountCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskSkillEffectAccountCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[21]);
}
// ===================================================================

class AskSkillEffectLeadingCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskSkillEffectLeadingCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskSkillEffectLeadingCfg, _impl_._has_bits_);
};

AskSkillEffectLeadingCfg::AskSkillEffectLeadingCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskSkillEffectLeadingCfg)
}
AskSkillEffectLeadingCfg::AskSkillEffectLeadingCfg(
    ::google::protobuf::Arena* arena, const AskSkillEffectLeadingCfg& from)
    : AskSkillEffectLeadingCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskSkillEffectLeadingCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8216)} {}

inline void AskSkillEffectLeadingCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskSkillEffectLeadingCfg::~AskSkillEffectLeadingCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskSkillEffectLeadingCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskSkillEffectLeadingCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskSkillEffectLeadingCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskSkillEffectLeadingCfg, _impl_._cached_size_),
              false,
          },
          &AskSkillEffectLeadingCfg::MergeImpl,
          &AskSkillEffectLeadingCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskSkillEffectLeadingCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskSkillEffectLeadingCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8216;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskSkillEffectLeadingCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskSkillEffectLeadingCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskSkillEffectLeadingCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskSkillEffectLeadingCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskSkillEffectLeadingCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectLeadingCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskSkillEffectLeadingCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectLeadingCfg];
    {PROTOBUF_FIELD_OFFSET(AskSkillEffectLeadingCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskSkillEffectLeadingCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskSkillEffectLeadingCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectLeadingCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskSkillEffectLeadingCfg)
  return target;
}

::size_t AskSkillEffectLeadingCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskSkillEffectLeadingCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectLeadingCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskSkillEffectLeadingCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskSkillEffectLeadingCfg*>(&to_msg);
  auto& from = static_cast<const AskSkillEffectLeadingCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskSkillEffectLeadingCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskSkillEffectLeadingCfg::CopyFrom(const AskSkillEffectLeadingCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskSkillEffectLeadingCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskSkillEffectLeadingCfg::IsInitialized() const {
  return true;
}

void AskSkillEffectLeadingCfg::InternalSwap(AskSkillEffectLeadingCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskSkillEffectLeadingCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[22]);
}
// ===================================================================

class AskSkillEffectRangeCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskSkillEffectRangeCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskSkillEffectRangeCfg, _impl_._has_bits_);
};

AskSkillEffectRangeCfg::AskSkillEffectRangeCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskSkillEffectRangeCfg)
}
AskSkillEffectRangeCfg::AskSkillEffectRangeCfg(
    ::google::protobuf::Arena* arena, const AskSkillEffectRangeCfg& from)
    : AskSkillEffectRangeCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskSkillEffectRangeCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8215)} {}

inline void AskSkillEffectRangeCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskSkillEffectRangeCfg::~AskSkillEffectRangeCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskSkillEffectRangeCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskSkillEffectRangeCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskSkillEffectRangeCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskSkillEffectRangeCfg, _impl_._cached_size_),
              false,
          },
          &AskSkillEffectRangeCfg::MergeImpl,
          &AskSkillEffectRangeCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskSkillEffectRangeCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskSkillEffectRangeCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8215;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskSkillEffectRangeCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskSkillEffectRangeCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskSkillEffectRangeCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskSkillEffectRangeCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskSkillEffectRangeCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectRangeCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskSkillEffectRangeCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectRangeCfg];
    {PROTOBUF_FIELD_OFFSET(AskSkillEffectRangeCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskSkillEffectRangeCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskSkillEffectRangeCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectRangeCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskSkillEffectRangeCfg)
  return target;
}

::size_t AskSkillEffectRangeCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskSkillEffectRangeCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectRangeCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskSkillEffectRangeCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskSkillEffectRangeCfg*>(&to_msg);
  auto& from = static_cast<const AskSkillEffectRangeCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskSkillEffectRangeCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskSkillEffectRangeCfg::CopyFrom(const AskSkillEffectRangeCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskSkillEffectRangeCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskSkillEffectRangeCfg::IsInitialized() const {
  return true;
}

void AskSkillEffectRangeCfg::InternalSwap(AskSkillEffectRangeCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskSkillEffectRangeCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[23]);
}
// ===================================================================

class AskSkillEffectBufCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskSkillEffectBufCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskSkillEffectBufCfg, _impl_._has_bits_);
};

AskSkillEffectBufCfg::AskSkillEffectBufCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskSkillEffectBufCfg)
}
AskSkillEffectBufCfg::AskSkillEffectBufCfg(
    ::google::protobuf::Arena* arena, const AskSkillEffectBufCfg& from)
    : AskSkillEffectBufCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskSkillEffectBufCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8217)} {}

inline void AskSkillEffectBufCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskSkillEffectBufCfg::~AskSkillEffectBufCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskSkillEffectBufCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskSkillEffectBufCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskSkillEffectBufCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskSkillEffectBufCfg, _impl_._cached_size_),
              false,
          },
          &AskSkillEffectBufCfg::MergeImpl,
          &AskSkillEffectBufCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskSkillEffectBufCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskSkillEffectBufCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8217;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskSkillEffectBufCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskSkillEffectBufCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskSkillEffectBufCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskSkillEffectBufCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskSkillEffectBufCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectBufCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskSkillEffectBufCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectBufCfg];
    {PROTOBUF_FIELD_OFFSET(AskSkillEffectBufCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskSkillEffectBufCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskSkillEffectBufCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectBufCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskSkillEffectBufCfg)
  return target;
}

::size_t AskSkillEffectBufCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskSkillEffectBufCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectBufCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskSkillEffectBufCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskSkillEffectBufCfg*>(&to_msg);
  auto& from = static_cast<const AskSkillEffectBufCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskSkillEffectBufCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskSkillEffectBufCfg::CopyFrom(const AskSkillEffectBufCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskSkillEffectBufCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskSkillEffectBufCfg::IsInitialized() const {
  return true;
}

void AskSkillEffectBufCfg::InternalSwap(AskSkillEffectBufCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskSkillEffectBufCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[24]);
}
// ===================================================================

class AskSkillEffectSummonCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskSkillEffectSummonCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskSkillEffectSummonCfg, _impl_._has_bits_);
};

AskSkillEffectSummonCfg::AskSkillEffectSummonCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskSkillEffectSummonCfg)
}
AskSkillEffectSummonCfg::AskSkillEffectSummonCfg(
    ::google::protobuf::Arena* arena, const AskSkillEffectSummonCfg& from)
    : AskSkillEffectSummonCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskSkillEffectSummonCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8218)} {}

inline void AskSkillEffectSummonCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskSkillEffectSummonCfg::~AskSkillEffectSummonCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskSkillEffectSummonCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskSkillEffectSummonCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskSkillEffectSummonCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskSkillEffectSummonCfg, _impl_._cached_size_),
              false,
          },
          &AskSkillEffectSummonCfg::MergeImpl,
          &AskSkillEffectSummonCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskSkillEffectSummonCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskSkillEffectSummonCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8218;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskSkillEffectSummonCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskSkillEffectSummonCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskSkillEffectSummonCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskSkillEffectSummonCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskSkillEffectSummonCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSummonCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskSkillEffectSummonCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSummonCfg];
    {PROTOBUF_FIELD_OFFSET(AskSkillEffectSummonCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskSkillEffectSummonCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskSkillEffectSummonCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSummonCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskSkillEffectSummonCfg)
  return target;
}

::size_t AskSkillEffectSummonCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskSkillEffectSummonCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSummonCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskSkillEffectSummonCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskSkillEffectSummonCfg*>(&to_msg);
  auto& from = static_cast<const AskSkillEffectSummonCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskSkillEffectSummonCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskSkillEffectSummonCfg::CopyFrom(const AskSkillEffectSummonCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskSkillEffectSummonCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskSkillEffectSummonCfg::IsInitialized() const {
  return true;
}

void AskSkillEffectSummonCfg::InternalSwap(AskSkillEffectSummonCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskSkillEffectSummonCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[25]);
}
// ===================================================================

class AskSkillEffectMoveCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskSkillEffectMoveCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskSkillEffectMoveCfg, _impl_._has_bits_);
};

AskSkillEffectMoveCfg::AskSkillEffectMoveCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskSkillEffectMoveCfg)
}
AskSkillEffectMoveCfg::AskSkillEffectMoveCfg(
    ::google::protobuf::Arena* arena, const AskSkillEffectMoveCfg& from)
    : AskSkillEffectMoveCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskSkillEffectMoveCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8219)} {}

inline void AskSkillEffectMoveCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskSkillEffectMoveCfg::~AskSkillEffectMoveCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskSkillEffectMoveCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskSkillEffectMoveCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskSkillEffectMoveCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskSkillEffectMoveCfg, _impl_._cached_size_),
              false,
          },
          &AskSkillEffectMoveCfg::MergeImpl,
          &AskSkillEffectMoveCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskSkillEffectMoveCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskSkillEffectMoveCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8219;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskSkillEffectMoveCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskSkillEffectMoveCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskSkillEffectMoveCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskSkillEffectMoveCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskSkillEffectMoveCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectMoveCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskSkillEffectMoveCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectMoveCfg];
    {PROTOBUF_FIELD_OFFSET(AskSkillEffectMoveCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskSkillEffectMoveCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskSkillEffectMoveCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectMoveCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskSkillEffectMoveCfg)
  return target;
}

::size_t AskSkillEffectMoveCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskSkillEffectMoveCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectMoveCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskSkillEffectMoveCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskSkillEffectMoveCfg*>(&to_msg);
  auto& from = static_cast<const AskSkillEffectMoveCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskSkillEffectMoveCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskSkillEffectMoveCfg::CopyFrom(const AskSkillEffectMoveCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskSkillEffectMoveCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskSkillEffectMoveCfg::IsInitialized() const {
  return true;
}

void AskSkillEffectMoveCfg::InternalSwap(AskSkillEffectMoveCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskSkillEffectMoveCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[26]);
}
// ===================================================================

class AskSkillEffectSwitchCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskSkillEffectSwitchCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskSkillEffectSwitchCfg, _impl_._has_bits_);
};

AskSkillEffectSwitchCfg::AskSkillEffectSwitchCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskSkillEffectSwitchCfg)
}
AskSkillEffectSwitchCfg::AskSkillEffectSwitchCfg(
    ::google::protobuf::Arena* arena, const AskSkillEffectSwitchCfg& from)
    : AskSkillEffectSwitchCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskSkillEffectSwitchCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8220)} {}

inline void AskSkillEffectSwitchCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskSkillEffectSwitchCfg::~AskSkillEffectSwitchCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskSkillEffectSwitchCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskSkillEffectSwitchCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskSkillEffectSwitchCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskSkillEffectSwitchCfg, _impl_._cached_size_),
              false,
          },
          &AskSkillEffectSwitchCfg::MergeImpl,
          &AskSkillEffectSwitchCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskSkillEffectSwitchCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskSkillEffectSwitchCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8220;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskSkillEffectSwitchCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskSkillEffectSwitchCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskSkillEffectSwitchCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskSkillEffectSwitchCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskSkillEffectSwitchCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSwitchCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskSkillEffectSwitchCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSwitchCfg];
    {PROTOBUF_FIELD_OFFSET(AskSkillEffectSwitchCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskSkillEffectSwitchCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskSkillEffectSwitchCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSwitchCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskSkillEffectSwitchCfg)
  return target;
}

::size_t AskSkillEffectSwitchCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskSkillEffectSwitchCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskSkillEffectSwitchCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskSkillEffectSwitchCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskSkillEffectSwitchCfg*>(&to_msg);
  auto& from = static_cast<const AskSkillEffectSwitchCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskSkillEffectSwitchCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskSkillEffectSwitchCfg::CopyFrom(const AskSkillEffectSwitchCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskSkillEffectSwitchCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskSkillEffectSwitchCfg::IsInitialized() const {
  return true;
}

void AskSkillEffectSwitchCfg::InternalSwap(AskSkillEffectSwitchCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskSkillEffectSwitchCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[27]);
}
// ===================================================================

class AskPassitiveSkillCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskPassitiveSkillCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskPassitiveSkillCfg, _impl_._has_bits_);
};

AskPassitiveSkillCfg::AskPassitiveSkillCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskPassitiveSkillCfg)
}
AskPassitiveSkillCfg::AskPassitiveSkillCfg(
    ::google::protobuf::Arena* arena, const AskPassitiveSkillCfg& from)
    : AskPassitiveSkillCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskPassitiveSkillCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8221)} {}

inline void AskPassitiveSkillCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskPassitiveSkillCfg::~AskPassitiveSkillCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskPassitiveSkillCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskPassitiveSkillCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskPassitiveSkillCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskPassitiveSkillCfg, _impl_._cached_size_),
              false,
          },
          &AskPassitiveSkillCfg::MergeImpl,
          &AskPassitiveSkillCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskPassitiveSkillCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskPassitiveSkillCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8221;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskPassitiveSkillCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskPassitiveSkillCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskPassitiveSkillCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskPassitiveSkillCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskPassitiveSkillCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveSkillCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskPassitiveSkillCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveSkillCfg];
    {PROTOBUF_FIELD_OFFSET(AskPassitiveSkillCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskPassitiveSkillCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskPassitiveSkillCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveSkillCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskPassitiveSkillCfg)
  return target;
}

::size_t AskPassitiveSkillCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskPassitiveSkillCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveSkillCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskPassitiveSkillCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskPassitiveSkillCfg*>(&to_msg);
  auto& from = static_cast<const AskPassitiveSkillCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskPassitiveSkillCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskPassitiveSkillCfg::CopyFrom(const AskPassitiveSkillCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskPassitiveSkillCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskPassitiveSkillCfg::IsInitialized() const {
  return true;
}

void AskPassitiveSkillCfg::InternalSwap(AskPassitiveSkillCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskPassitiveSkillCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[28]);
}
// ===================================================================

class AskPassitiveEffectBloodSeekCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskPassitiveEffectBloodSeekCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskPassitiveEffectBloodSeekCfg, _impl_._has_bits_);
};

AskPassitiveEffectBloodSeekCfg::AskPassitiveEffectBloodSeekCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskPassitiveEffectBloodSeekCfg)
}
AskPassitiveEffectBloodSeekCfg::AskPassitiveEffectBloodSeekCfg(
    ::google::protobuf::Arena* arena, const AskPassitiveEffectBloodSeekCfg& from)
    : AskPassitiveEffectBloodSeekCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskPassitiveEffectBloodSeekCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8222)} {}

inline void AskPassitiveEffectBloodSeekCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskPassitiveEffectBloodSeekCfg::~AskPassitiveEffectBloodSeekCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskPassitiveEffectBloodSeekCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskPassitiveEffectBloodSeekCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskPassitiveEffectBloodSeekCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskPassitiveEffectBloodSeekCfg, _impl_._cached_size_),
              false,
          },
          &AskPassitiveEffectBloodSeekCfg::MergeImpl,
          &AskPassitiveEffectBloodSeekCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskPassitiveEffectBloodSeekCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskPassitiveEffectBloodSeekCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8222;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskPassitiveEffectBloodSeekCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskPassitiveEffectBloodSeekCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskPassitiveEffectBloodSeekCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskPassitiveEffectBloodSeekCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskPassitiveEffectBloodSeekCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectBloodSeekCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskPassitiveEffectBloodSeekCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectBloodSeekCfg];
    {PROTOBUF_FIELD_OFFSET(AskPassitiveEffectBloodSeekCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskPassitiveEffectBloodSeekCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskPassitiveEffectBloodSeekCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectBloodSeekCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskPassitiveEffectBloodSeekCfg)
  return target;
}

::size_t AskPassitiveEffectBloodSeekCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskPassitiveEffectBloodSeekCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectBloodSeekCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskPassitiveEffectBloodSeekCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskPassitiveEffectBloodSeekCfg*>(&to_msg);
  auto& from = static_cast<const AskPassitiveEffectBloodSeekCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskPassitiveEffectBloodSeekCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskPassitiveEffectBloodSeekCfg::CopyFrom(const AskPassitiveEffectBloodSeekCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskPassitiveEffectBloodSeekCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskPassitiveEffectBloodSeekCfg::IsInitialized() const {
  return true;
}

void AskPassitiveEffectBloodSeekCfg::InternalSwap(AskPassitiveEffectBloodSeekCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskPassitiveEffectBloodSeekCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[29]);
}
// ===================================================================

class AskPassitiveEffectReboundCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskPassitiveEffectReboundCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskPassitiveEffectReboundCfg, _impl_._has_bits_);
};

AskPassitiveEffectReboundCfg::AskPassitiveEffectReboundCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskPassitiveEffectReboundCfg)
}
AskPassitiveEffectReboundCfg::AskPassitiveEffectReboundCfg(
    ::google::protobuf::Arena* arena, const AskPassitiveEffectReboundCfg& from)
    : AskPassitiveEffectReboundCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskPassitiveEffectReboundCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8223)} {}

inline void AskPassitiveEffectReboundCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskPassitiveEffectReboundCfg::~AskPassitiveEffectReboundCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskPassitiveEffectReboundCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskPassitiveEffectReboundCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskPassitiveEffectReboundCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskPassitiveEffectReboundCfg, _impl_._cached_size_),
              false,
          },
          &AskPassitiveEffectReboundCfg::MergeImpl,
          &AskPassitiveEffectReboundCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskPassitiveEffectReboundCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskPassitiveEffectReboundCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8223;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskPassitiveEffectReboundCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskPassitiveEffectReboundCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskPassitiveEffectReboundCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskPassitiveEffectReboundCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskPassitiveEffectReboundCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReboundCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskPassitiveEffectReboundCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReboundCfg];
    {PROTOBUF_FIELD_OFFSET(AskPassitiveEffectReboundCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskPassitiveEffectReboundCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskPassitiveEffectReboundCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReboundCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskPassitiveEffectReboundCfg)
  return target;
}

::size_t AskPassitiveEffectReboundCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskPassitiveEffectReboundCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReboundCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskPassitiveEffectReboundCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskPassitiveEffectReboundCfg*>(&to_msg);
  auto& from = static_cast<const AskPassitiveEffectReboundCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskPassitiveEffectReboundCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskPassitiveEffectReboundCfg::CopyFrom(const AskPassitiveEffectReboundCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskPassitiveEffectReboundCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskPassitiveEffectReboundCfg::IsInitialized() const {
  return true;
}

void AskPassitiveEffectReboundCfg::InternalSwap(AskPassitiveEffectReboundCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskPassitiveEffectReboundCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[30]);
}
// ===================================================================

class AskPassitiveEffectReliveCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<AskPassitiveEffectReliveCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskPassitiveEffectReliveCfg, _impl_._has_bits_);
};

AskPassitiveEffectReliveCfg::AskPassitiveEffectReliveCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskPassitiveEffectReliveCfg)
}
AskPassitiveEffectReliveCfg::AskPassitiveEffectReliveCfg(
    ::google::protobuf::Arena* arena, const AskPassitiveEffectReliveCfg& from)
    : AskPassitiveEffectReliveCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskPassitiveEffectReliveCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8224)} {}

inline void AskPassitiveEffectReliveCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskPassitiveEffectReliveCfg::~AskPassitiveEffectReliveCfg() {
  // @@protoc_insertion_point(destructor:SSToCS.AskPassitiveEffectReliveCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskPassitiveEffectReliveCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskPassitiveEffectReliveCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskPassitiveEffectReliveCfg, _impl_._cached_size_),
              false,
          },
          &AskPassitiveEffectReliveCfg::MergeImpl,
          &AskPassitiveEffectReliveCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskPassitiveEffectReliveCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskPassitiveEffectReliveCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mgsid_ = 8224;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskPassitiveEffectReliveCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskPassitiveEffectReliveCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskPassitiveEffectReliveCfg, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskPassitiveEffectReliveCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskPassitiveEffectReliveCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReliveCfg];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskPassitiveEffectReliveCfg, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReliveCfg];
    {PROTOBUF_FIELD_OFFSET(AskPassitiveEffectReliveCfg, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskPassitiveEffectReliveCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskPassitiveEffectReliveCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReliveCfg];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskPassitiveEffectReliveCfg)
  return target;
}

::size_t AskPassitiveEffectReliveCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskPassitiveEffectReliveCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskPassitiveEffectReliveCfg];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskPassitiveEffectReliveCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskPassitiveEffectReliveCfg*>(&to_msg);
  auto& from = static_cast<const AskPassitiveEffectReliveCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskPassitiveEffectReliveCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskPassitiveEffectReliveCfg::CopyFrom(const AskPassitiveEffectReliveCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskPassitiveEffectReliveCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskPassitiveEffectReliveCfg::IsInitialized() const {
  return true;
}

void AskPassitiveEffectReliveCfg::InternalSwap(AskPassitiveEffectReliveCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AskPassitiveEffectReliveCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[31]);
}
// ===================================================================

class AskUpdateGuideStep::_Internal {
 public:
  using HasBits = decltype(std::declval<AskUpdateGuideStep>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_._has_bits_);
};

AskUpdateGuideStep::AskUpdateGuideStep(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskUpdateGuideStep)
}
AskUpdateGuideStep::AskUpdateGuideStep(
    ::google::protobuf::Arena* arena, const AskUpdateGuideStep& from)
    : AskUpdateGuideStep(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskUpdateGuideStep::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8225)} {}

inline void AskUpdateGuideStep::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           0,
           offsetof(Impl_, stepid_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::stepid_));
}
AskUpdateGuideStep::~AskUpdateGuideStep() {
  // @@protoc_insertion_point(destructor:SSToCS.AskUpdateGuideStep)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskUpdateGuideStep::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskUpdateGuideStep::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_._cached_size_),
              false,
          },
          &AskUpdateGuideStep::MergeImpl,
          &AskUpdateGuideStep::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskUpdateGuideStep::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskUpdateGuideStep)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.stepid_) -
        reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.stepid_));
    _impl_.mgsid_ = 8225;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskUpdateGuideStep::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> AskUpdateGuideStep::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskUpdateGuideStep_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskUpdateGuideStep>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 stepid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskUpdateGuideStep, _impl_.stepid_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_.stepid_)}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateGuideStep];
    {::_pbi::TcParser::FastEvS1,
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_.mgsid_)}},
    // optional uint64 guid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AskUpdateGuideStep, _impl_.guid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_.guid_)}},
    // optional int32 state = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskUpdateGuideStep, _impl_.state_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateGuideStep];
    {PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_.mgsid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional uint64 guid = 2;
    {PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_.guid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 state = 3;
    {PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_.state_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 stepid = 4;
    {PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_.stepid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskUpdateGuideStep::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskUpdateGuideStep)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateGuideStep];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional uint64 guid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_guid(), target);
  }

  // optional int32 state = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_state(), target);
  }

  // optional int32 stepid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_stepid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskUpdateGuideStep)
  return target;
}

::size_t AskUpdateGuideStep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskUpdateGuideStep)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint64 guid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_guid());
    }

    // optional int32 state = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_state());
    }

    // optional int32 stepid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_stepid());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUpdateGuideStep];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskUpdateGuideStep::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskUpdateGuideStep*>(&to_msg);
  auto& from = static_cast<const AskUpdateGuideStep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskUpdateGuideStep)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.state_ = from._impl_.state_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.stepid_ = from._impl_.stepid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskUpdateGuideStep::CopyFrom(const AskUpdateGuideStep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskUpdateGuideStep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskUpdateGuideStep::IsInitialized() const {
  return true;
}

void AskUpdateGuideStep::InternalSwap(AskUpdateGuideStep* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_.mgsid_)
      + sizeof(AskUpdateGuideStep::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(AskUpdateGuideStep, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata AskUpdateGuideStep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[32]);
}
// ===================================================================

class AskUserGoHall::_Internal {
 public:
  using HasBits = decltype(std::declval<AskUserGoHall>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskUserGoHall, _impl_._has_bits_);
};

AskUserGoHall::AskUserGoHall(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.AskUserGoHall)
}
AskUserGoHall::AskUserGoHall(
    ::google::protobuf::Arena* arena, const AskUserGoHall& from)
    : AskUserGoHall(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskUserGoHall::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8226)} {}

inline void AskUserGoHall::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::type_));
}
AskUserGoHall::~AskUserGoHall() {
  // @@protoc_insertion_point(destructor:SSToCS.AskUserGoHall)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskUserGoHall::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskUserGoHall::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskUserGoHall, _impl_._cached_size_),
              false,
          },
          &AskUserGoHall::MergeImpl,
          &AskUserGoHall::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskUserGoHall::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.AskUserGoHall)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.type_));
    _impl_.mgsid_ = 8226;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskUserGoHall::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> AskUserGoHall::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskUserGoHall, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskUserGoHall_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::AskUserGoHall>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUserGoHall];
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(AskUserGoHall, _impl_.mgsid_)}},
    // optional uint64 guid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AskUserGoHall, _impl_.guid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AskUserGoHall, _impl_.guid_)}},
    // optional int32 type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskUserGoHall, _impl_.type_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(AskUserGoHall, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUserGoHall];
    {PROTOBUF_FIELD_OFFSET(AskUserGoHall, _impl_.mgsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional uint64 guid = 2;
    {PROTOBUF_FIELD_OFFSET(AskUserGoHall, _impl_.guid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 type = 3;
    {PROTOBUF_FIELD_OFFSET(AskUserGoHall, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskUserGoHall::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.AskUserGoHall)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUserGoHall];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional uint64 guid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_guid(), target);
  }

  // optional int32 type = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.AskUserGoHall)
  return target;
}

::size_t AskUserGoHall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.AskUserGoHall)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 guid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_guid());
    }

    // optional int32 type = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_type());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AskUserGoHall];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskUserGoHall::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskUserGoHall*>(&to_msg);
  auto& from = static_cast<const AskUserGoHall&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.AskUserGoHall)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskUserGoHall::CopyFrom(const AskUserGoHall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.AskUserGoHall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskUserGoHall::IsInitialized() const {
  return true;
}

void AskUserGoHall::InternalSwap(AskUserGoHall* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskUserGoHall, _impl_.mgsid_)
      + sizeof(AskUserGoHall::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(AskUserGoHall, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata AskUserGoHall::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[33]);
}
// ===================================================================

class SyncAllBattleInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<SyncAllBattleInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SyncAllBattleInfo, _impl_._has_bits_);
};

SyncAllBattleInfo::SyncAllBattleInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.SyncAllBattleInfo)
}
inline PROTOBUF_NDEBUG_INLINE SyncAllBattleInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        playbattle_{visibility, arena, from.playbattle_} {}

SyncAllBattleInfo::SyncAllBattleInfo(
    ::google::protobuf::Arena* arena,
    const SyncAllBattleInfo& from)
    : ::google::protobuf::Message(arena) {
  SyncAllBattleInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, maxbattleid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, maxbattleid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, maxbattleid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:SSToCS.SyncAllBattleInfo)
}
inline PROTOBUF_NDEBUG_INLINE SyncAllBattleInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        playbattle_{visibility, arena},
        mgsid_{static_cast< ::SSToCS::MsgID >(8229)} {}

inline void SyncAllBattleInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.maxbattleid_ = {};
}
SyncAllBattleInfo::~SyncAllBattleInfo() {
  // @@protoc_insertion_point(destructor:SSToCS.SyncAllBattleInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SyncAllBattleInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SyncAllBattleInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(SyncAllBattleInfo, _impl_._cached_size_),
              false,
          },
          &SyncAllBattleInfo::MergeImpl,
          &SyncAllBattleInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void SyncAllBattleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.SyncAllBattleInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playbattle_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.maxbattleid_ = ::uint64_t{0u};
    _impl_.mgsid_ = 8229;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SyncAllBattleInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> SyncAllBattleInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SyncAllBattleInfo, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SyncAllBattleInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::SyncAllBattleInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AllBattleInfo];
    {::_pbi::TcParser::FastEvS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SyncAllBattleInfo, _impl_.mgsid_)}},
    // repeated uint64 playbattle = 2;
    {::_pbi::TcParser::FastV64R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SyncAllBattleInfo, _impl_.playbattle_)}},
    // optional uint64 maxbattleid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SyncAllBattleInfo, _impl_.maxbattleid_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(SyncAllBattleInfo, _impl_.maxbattleid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AllBattleInfo];
    {PROTOBUF_FIELD_OFFSET(SyncAllBattleInfo, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // repeated uint64 playbattle = 2;
    {PROTOBUF_FIELD_OFFSET(SyncAllBattleInfo, _impl_.playbattle_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt64)},
    // optional uint64 maxbattleid = 3;
    {PROTOBUF_FIELD_OFFSET(SyncAllBattleInfo, _impl_.maxbattleid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* SyncAllBattleInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.SyncAllBattleInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AllBattleInfo];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // repeated uint64 playbattle = 2;
  for (int i = 0, n = this->_internal_playbattle_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_playbattle().Get(i), target);
  }

  // optional uint64 maxbattleid = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_maxbattleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.SyncAllBattleInfo)
  return target;
}

::size_t SyncAllBattleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.SyncAllBattleInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 playbattle = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_playbattle())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_playbattle_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 maxbattleid = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_maxbattleid());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_AllBattleInfo];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SyncAllBattleInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SyncAllBattleInfo*>(&to_msg);
  auto& from = static_cast<const SyncAllBattleInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.SyncAllBattleInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_playbattle()->MergeFrom(from._internal_playbattle());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.maxbattleid_ = from._impl_.maxbattleid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SyncAllBattleInfo::CopyFrom(const SyncAllBattleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.SyncAllBattleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SyncAllBattleInfo::IsInitialized() const {
  return true;
}

void SyncAllBattleInfo::InternalSwap(SyncAllBattleInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.playbattle_.InternalSwap(&other->_impl_.playbattle_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SyncAllBattleInfo, _impl_.mgsid_)
      + sizeof(SyncAllBattleInfo::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(SyncAllBattleInfo, _impl_.maxbattleid_)>(
          reinterpret_cast<char*>(&_impl_.maxbattleid_),
          reinterpret_cast<char*>(&other->_impl_.maxbattleid_));
}

::google::protobuf::Metadata SyncAllBattleInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[34]);
}
// ===================================================================

class CreateBattleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateBattleResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CreateBattleResponse, _impl_._has_bits_);
};

CreateBattleResponse::CreateBattleResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.CreateBattleResponse)
}
CreateBattleResponse::CreateBattleResponse(
    ::google::protobuf::Arena* arena, const CreateBattleResponse& from)
    : CreateBattleResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CreateBattleResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::SSToCS::MsgID >(8300)} {}

inline void CreateBattleResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, battleid_),
           0,
           offsetof(Impl_, rst_) -
               offsetof(Impl_, battleid_) +
               sizeof(Impl_::rst_));
}
CreateBattleResponse::~CreateBattleResponse() {
  // @@protoc_insertion_point(destructor:SSToCS.CreateBattleResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateBattleResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CreateBattleResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CreateBattleResponse, _impl_._cached_size_),
              false,
          },
          &CreateBattleResponse::MergeImpl,
          &CreateBattleResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CreateBattleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.CreateBattleResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.battleid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rst_) -
        reinterpret_cast<char*>(&_impl_.battleid_)) + sizeof(_impl_.rst_));
    _impl_.mgsid_ = 8300;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateBattleResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> CreateBattleResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateBattleResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateBattleResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::CreateBattleResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_CreateBattleResponse];
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(CreateBattleResponse, _impl_.mgsid_)}},
    // optional int64 battleid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CreateBattleResponse, _impl_.battleid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CreateBattleResponse, _impl_.battleid_)}},
    // optional bool rst = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CreateBattleResponse, _impl_.rst_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CreateBattleResponse, _impl_.rst_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_CreateBattleResponse];
    {PROTOBUF_FIELD_OFFSET(CreateBattleResponse, _impl_.mgsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 battleid = 2;
    {PROTOBUF_FIELD_OFFSET(CreateBattleResponse, _impl_.battleid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional bool rst = 3;
    {PROTOBUF_FIELD_OFFSET(CreateBattleResponse, _impl_.rst_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* CreateBattleResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.CreateBattleResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_CreateBattleResponse];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int64 battleid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_battleid(), target);
  }

  // optional bool rst = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_rst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.CreateBattleResponse)
  return target;
}

::size_t CreateBattleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.CreateBattleResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 battleid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_battleid());
    }

    // optional bool rst = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_CreateBattleResponse];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CreateBattleResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateBattleResponse*>(&to_msg);
  auto& from = static_cast<const CreateBattleResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.CreateBattleResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.battleid_ = from._impl_.battleid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.rst_ = from._impl_.rst_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateBattleResponse::CopyFrom(const CreateBattleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.CreateBattleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateBattleResponse::IsInitialized() const {
  return true;
}

void CreateBattleResponse::InternalSwap(CreateBattleResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateBattleResponse, _impl_.mgsid_)
      + sizeof(CreateBattleResponse::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(CreateBattleResponse, _impl_.battleid_)>(
          reinterpret_cast<char*>(&_impl_.battleid_),
          reinterpret_cast<char*>(&other->_impl_.battleid_));
}

::google::protobuf::Metadata CreateBattleResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[35]);
}
// ===================================================================

class FinishBattle_BattleUserData::_Internal {
 public:
  using HasBits = decltype(std::declval<FinishBattle_BattleUserData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_._has_bits_);
};

FinishBattle_BattleUserData::FinishBattle_BattleUserData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.FinishBattle.BattleUserData)
}
FinishBattle_BattleUserData::FinishBattle_BattleUserData(
    ::google::protobuf::Arena* arena, const FinishBattle_BattleUserData& from)
    : FinishBattle_BattleUserData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE FinishBattle_BattleUserData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FinishBattle_BattleUserData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           0,
           offsetof(Impl_, totalcp_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::totalcp_));
}
FinishBattle_BattleUserData::~FinishBattle_BattleUserData() {
  // @@protoc_insertion_point(destructor:SSToCS.FinishBattle.BattleUserData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FinishBattle_BattleUserData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FinishBattle_BattleUserData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_._cached_size_),
              false,
          },
          &FinishBattle_BattleUserData::MergeImpl,
          &FinishBattle_BattleUserData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void FinishBattle_BattleUserData::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.FinishBattle.BattleUserData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.destorybuilding_) -
        reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.destorybuilding_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.diamondused_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.totalcp_) -
        reinterpret_cast<char*>(&_impl_.diamondused_)) + sizeof(_impl_.totalcp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FinishBattle_BattleUserData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 16, 0, 0, 2> FinishBattle_BattleUserData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_._has_bits_),
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901760,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FinishBattle_BattleUserData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::FinishBattle_BattleUserData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool ifAiRobot = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 10, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.ifairobot_)}},
    // optional uint64 guid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FinishBattle_BattleUserData, _impl_.guid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.guid_)}},
    // optional uint64 heroguid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FinishBattle_BattleUserData, _impl_.heroguid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.heroguid_)}},
    // optional uint32 timeinsecond = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FinishBattle_BattleUserData, _impl_.timeinsecond_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.timeinsecond_)}},
    // optional bool ifEnd = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FinishBattle_BattleUserData, _impl_.ifend_), 9>(),
     {32, 9, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.ifend_)}},
    // optional int32 heroid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FinishBattle_BattleUserData, _impl_.heroid_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.heroid_)}},
    // optional int32 runepage = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FinishBattle_BattleUserData, _impl_.runepage_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.runepage_)}},
    // optional uint32 deadtimes = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FinishBattle_BattleUserData, _impl_.deadtimes_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.deadtimes_)}},
    // optional uint32 herokills = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FinishBattle_BattleUserData, _impl_.herokills_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.herokills_)}},
    // optional int32 destorybuilding = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FinishBattle_BattleUserData, _impl_.destorybuilding_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.destorybuilding_)}},
    // optional int64 diamondused = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FinishBattle_BattleUserData, _impl_.diamondused_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.diamondused_)}},
    // optional int64 goldused = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FinishBattle_BattleUserData, _impl_.goldused_), 12>(),
     {88, 12, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.goldused_)}},
    // optional int32 lasthitnum = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FinishBattle_BattleUserData, _impl_.lasthitnum_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.lasthitnum_)}},
    // optional int32 asskillnum = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FinishBattle_BattleUserData, _impl_.asskillnum_), 13>(),
     {104, 13, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.asskillnum_)}},
    // optional int32 herolv = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FinishBattle_BattleUserData, _impl_.herolv_), 14>(),
     {112, 14, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.herolv_)}},
    // optional int32 totalcp = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FinishBattle_BattleUserData, _impl_.totalcp_), 15>(),
     {120, 15, 0, PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.totalcp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 guid = 1;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.guid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 heroguid = 2;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.heroguid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 timeinsecond = 3;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.timeinsecond_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool ifEnd = 4;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.ifend_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 heroid = 5;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.heroid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 runepage = 6;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.runepage_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 deadtimes = 7;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.deadtimes_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 herokills = 8;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.herokills_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 destorybuilding = 9;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.destorybuilding_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 diamondused = 10;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.diamondused_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 goldused = 11;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.goldused_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 lasthitnum = 12;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.lasthitnum_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 asskillnum = 13;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.asskillnum_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 herolv = 14;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.herolv_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 totalcp = 15;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.totalcp_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool ifAiRobot = 16;
    {PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.ifairobot_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FinishBattle_BattleUserData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.FinishBattle.BattleUserData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 guid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_guid(), target);
  }

  // optional uint64 heroguid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_heroguid(), target);
  }

  // optional uint32 timeinsecond = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_timeinsecond(), target);
  }

  // optional bool ifEnd = 4;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_ifend(), target);
  }

  // optional int32 heroid = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_heroid(), target);
  }

  // optional int32 runepage = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_runepage(), target);
  }

  // optional uint32 deadtimes = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_deadtimes(), target);
  }

  // optional uint32 herokills = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_herokills(), target);
  }

  // optional int32 destorybuilding = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_destorybuilding(), target);
  }

  // optional int64 diamondused = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<10>(
            stream, this->_internal_diamondused(), target);
  }

  // optional int64 goldused = 11;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<11>(
            stream, this->_internal_goldused(), target);
  }

  // optional int32 lasthitnum = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<12>(
            stream, this->_internal_lasthitnum(), target);
  }

  // optional int32 asskillnum = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_asskillnum(), target);
  }

  // optional int32 herolv = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<14>(
            stream, this->_internal_herolv(), target);
  }

  // optional int32 totalcp = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<15>(
            stream, this->_internal_totalcp(), target);
  }

  // optional bool ifAiRobot = 16;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        16, this->_internal_ifairobot(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.FinishBattle.BattleUserData)
  return target;
}

::size_t FinishBattle_BattleUserData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.FinishBattle.BattleUserData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint64 guid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_guid());
    }

    // optional uint64 heroguid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_heroguid());
    }

    // optional uint32 timeinsecond = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_timeinsecond());
    }

    // optional int32 heroid = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_heroid());
    }

    // optional int32 runepage = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_runepage());
    }

    // optional uint32 deadtimes = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_deadtimes());
    }

    // optional uint32 herokills = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_herokills());
    }

    // optional int32 destorybuilding = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_destorybuilding());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int64 diamondused = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_diamondused());
    }

    // optional bool ifEnd = 4;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2;
    }

    // optional bool ifAiRobot = 16;
    if (cached_has_bits & 0x00000400u) {
      total_size += 3;
    }

    // optional int32 lasthitnum = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_lasthitnum());
    }

    // optional int64 goldused = 11;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_goldused());
    }

    // optional int32 asskillnum = 13;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_asskillnum());
    }

    // optional int32 herolv = 14;
    if (cached_has_bits & 0x00004000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_herolv());
    }

    // optional int32 totalcp = 15;
    if (cached_has_bits & 0x00008000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_totalcp());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FinishBattle_BattleUserData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FinishBattle_BattleUserData*>(&to_msg);
  auto& from = static_cast<const FinishBattle_BattleUserData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.FinishBattle.BattleUserData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.heroguid_ = from._impl_.heroguid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.timeinsecond_ = from._impl_.timeinsecond_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.heroid_ = from._impl_.heroid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.runepage_ = from._impl_.runepage_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.deadtimes_ = from._impl_.deadtimes_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.herokills_ = from._impl_.herokills_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.destorybuilding_ = from._impl_.destorybuilding_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.diamondused_ = from._impl_.diamondused_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.ifend_ = from._impl_.ifend_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.ifairobot_ = from._impl_.ifairobot_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.lasthitnum_ = from._impl_.lasthitnum_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.goldused_ = from._impl_.goldused_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.asskillnum_ = from._impl_.asskillnum_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.herolv_ = from._impl_.herolv_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.totalcp_ = from._impl_.totalcp_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FinishBattle_BattleUserData::CopyFrom(const FinishBattle_BattleUserData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.FinishBattle.BattleUserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FinishBattle_BattleUserData::IsInitialized() const {
  return true;
}

void FinishBattle_BattleUserData::InternalSwap(FinishBattle_BattleUserData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.totalcp_)
      + sizeof(FinishBattle_BattleUserData::_impl_.totalcp_)
      - PROTOBUF_FIELD_OFFSET(FinishBattle_BattleUserData, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata FinishBattle_BattleUserData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[36]);
}
// ===================================================================

class FinishBattle::_Internal {
 public:
  using HasBits = decltype(std::declval<FinishBattle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_._has_bits_);
};

FinishBattle::FinishBattle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SSToCS.FinishBattle)
}
inline PROTOBUF_NDEBUG_INLINE FinishBattle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        batteluserdatalist_{visibility, arena, from.batteluserdatalist_} {}

FinishBattle::FinishBattle(
    ::google::protobuf::Arena* arena,
    const FinishBattle& from)
    : ::google::protobuf::Message(arena) {
  FinishBattle* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, battleid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, battleid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, battleid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:SSToCS.FinishBattle)
}
inline PROTOBUF_NDEBUG_INLINE FinishBattle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        batteluserdatalist_{visibility, arena},
        mgsid_{static_cast< ::SSToCS::MsgID >(8310)} {}

inline void FinishBattle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, battleid_),
           0,
           offsetof(Impl_, wingrpid_) -
               offsetof(Impl_, battleid_) +
               sizeof(Impl_::wingrpid_));
}
FinishBattle::~FinishBattle() {
  // @@protoc_insertion_point(destructor:SSToCS.FinishBattle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FinishBattle::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
FinishBattle::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_._cached_size_),
              false,
          },
          &FinishBattle::MergeImpl,
          &FinishBattle::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void FinishBattle::Clear() {
// @@protoc_insertion_point(message_clear_start:SSToCS.FinishBattle)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.batteluserdatalist_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.battleid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.wingrpid_) -
        reinterpret_cast<char*>(&_impl_.battleid_)) + sizeof(_impl_.wingrpid_));
    _impl_.mgsid_ = 8310;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FinishBattle::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> FinishBattle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FinishBattle_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SSToCS::FinishBattle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .SSToCS.FinishBattle.BattleUserData battelUserDataList = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_.batteluserdatalist_)}},
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_FinishBattle];
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_.mgsid_)}},
    // optional int64 battleid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FinishBattle, _impl_.battleid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_.battleid_)}},
    // optional int32 winGrpID = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FinishBattle, _impl_.wingrpid_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_.wingrpid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_FinishBattle];
    {PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_.mgsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 battleid = 2;
    {PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_.battleid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 winGrpID = 3;
    {PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_.wingrpid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .SSToCS.FinishBattle.BattleUserData battelUserDataList = 4;
    {PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_.batteluserdatalist_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::SSToCS::MsgID_internal_data_},
    {::_pbi::TcParser::GetTable<::SSToCS::FinishBattle_BattleUserData>()},
  }}, {{
  }},
};

::uint8_t* FinishBattle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SSToCS.FinishBattle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_FinishBattle];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int64 battleid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_battleid(), target);
  }

  // optional int32 winGrpID = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_wingrpid(), target);
  }

  // repeated .SSToCS.FinishBattle.BattleUserData battelUserDataList = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_batteluserdatalist_size()); i < n; i++) {
    const auto& repfield = this->_internal_batteluserdatalist().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SSToCS.FinishBattle)
  return target;
}

::size_t FinishBattle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SSToCS.FinishBattle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SSToCS.FinishBattle.BattleUserData battelUserDataList = 4;
  total_size += 1UL * this->_internal_batteluserdatalist_size();
  for (const auto& msg : this->_internal_batteluserdatalist()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 battleid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_battleid());
    }

    // optional int32 winGrpID = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_wingrpid());
    }

    // optional .SSToCS.MsgID mgsid = 1 [default = eMsgToCSFromSS_FinishBattle];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void FinishBattle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FinishBattle*>(&to_msg);
  auto& from = static_cast<const FinishBattle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SSToCS.FinishBattle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_batteluserdatalist()->MergeFrom(
      from._internal_batteluserdatalist());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.battleid_ = from._impl_.battleid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.wingrpid_ = from._impl_.wingrpid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FinishBattle::CopyFrom(const FinishBattle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SSToCS.FinishBattle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FinishBattle::IsInitialized() const {
  return true;
}

void FinishBattle::InternalSwap(FinishBattle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.batteluserdatalist_.InternalSwap(&other->_impl_.batteluserdatalist_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_.mgsid_)
      + sizeof(FinishBattle::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(FinishBattle, _impl_.battleid_)>(
          reinterpret_cast<char*>(&_impl_.battleid_),
          reinterpret_cast<char*>(&other->_impl_.battleid_));
}

::google::protobuf::Metadata FinishBattle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_SSToCS_2eproto_getter,
                                   &descriptor_table_SSToCS_2eproto_once,
                                   file_level_metadata_SSToCS_2eproto[37]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace SSToCS
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_SSToCS_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
