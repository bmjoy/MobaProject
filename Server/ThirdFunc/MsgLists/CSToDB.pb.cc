// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSToDB.proto
// Protobuf C++ Version: 4.26.0-dev

#include "CSToDB.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace CSToDB {

inline constexpr UpdateUserMail::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        objid_{::int64_t{0}},
        mailid_{0},
        cstate_{0},
        msgid_{static_cast< ::CSToDB::MsgID >(117)} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateUserMail::UpdateUserMail(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateUserMailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateUserMailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateUserMailDefaultTypeInternal() {}
  union {
    UpdateUserMail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateUserMailDefaultTypeInternal _UpdateUserMail_default_instance_;

inline constexpr UpdateUser::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sqlstr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        guid_{::int64_t{0}},
        mgsid_{static_cast< ::CSToDB::MsgID >(103)} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateUser::UpdateUser(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateUserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateUserDefaultTypeInternal() {}
  union {
    UpdateUser _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateUserDefaultTypeInternal _UpdateUser_default_instance_;

inline constexpr UpdateCDKeyInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sql_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msgid_{static_cast< ::CSToDB::MsgID >(120)} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateCDKeyInfo::UpdateCDKeyInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateCDKeyInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateCDKeyInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateCDKeyInfoDefaultTypeInternal() {}
  union {
    UpdateCDKeyInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateCDKeyInfoDefaultTypeInternal _UpdateCDKeyInfo_default_instance_;

inline constexpr StoreUserdata_UserMailDBData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mailid_{0},
        mstate_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StoreUserdata_UserMailDBData::StoreUserdata_UserMailDBData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StoreUserdata_UserMailDBDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreUserdata_UserMailDBDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreUserdata_UserMailDBDataDefaultTypeInternal() {}
  union {
    StoreUserdata_UserMailDBData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreUserdata_UserMailDBDataDefaultTypeInternal _StoreUserdata_UserMailDBData_default_instance_;

inline constexpr StoreUserdata_SUserRelationshipInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        guididx_{::int64_t{0}},
        nheadid_{0},
        erelationship_{0},
        tmilsec_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR StoreUserdata_SUserRelationshipInfo::StoreUserdata_SUserRelationshipInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StoreUserdata_SUserRelationshipInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreUserdata_SUserRelationshipInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreUserdata_SUserRelationshipInfoDefaultTypeInternal() {}
  union {
    StoreUserdata_SUserRelationshipInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreUserdata_SUserRelationshipInfoDefaultTypeInternal _StoreUserdata_SUserRelationshipInfo_default_instance_;

inline constexpr StoreUserdata_SUserItemInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_id_{0},
        ifusing_{false},
        buy_time_{::int64_t{0}},
        item_num_{0},
        n32effectvalue_{0},
        end_time_{::int64_t{0}},
        n32effectid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StoreUserdata_SUserItemInfo::StoreUserdata_SUserItemInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StoreUserdata_SUserItemInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreUserdata_SUserItemInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreUserdata_SUserItemInfoDefaultTypeInternal() {}
  union {
    StoreUserdata_SUserItemInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreUserdata_SUserItemInfoDefaultTypeInternal _StoreUserdata_SUserItemInfo_default_instance_;

inline constexpr StoreUserdata_SUserHeroDBData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        endtime_{::int64_t{0}},
        buytime_{::int64_t{0}},
        un32heroid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StoreUserdata_SUserHeroDBData::StoreUserdata_SUserHeroDBData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StoreUserdata_SUserHeroDBDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreUserdata_SUserHeroDBDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreUserdata_SUserHeroDBDataDefaultTypeInternal() {}
  union {
    StoreUserdata_SUserHeroDBData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreUserdata_SUserHeroDBDataDefaultTypeInternal _StoreUserdata_SUserHeroDBData_default_instance_;

inline constexpr QueryUserReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        logininfo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gsid_{0},
        gcnetid_{0},
        objid_{::int64_t{0}},
        csid_{0},
        msgid_{static_cast< ::CSToDB::MsgID >(101)} {}

template <typename>
PROTOBUF_CONSTEXPR QueryUserReq::QueryUserReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryUserReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUserReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUserReqDefaultTypeInternal() {}
  union {
    QueryUserReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUserReqDefaultTypeInternal _QueryUserReq_default_instance_;

inline constexpr QueryObjIdxReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        logininfo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gsid_{0},
        gcnetid_{0},
        csid_{0},
        msgid_{static_cast< ::CSToDB::MsgID >(108)} {}

template <typename>
PROTOBUF_CONSTEXPR QueryObjIdxReq::QueryObjIdxReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryObjIdxReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryObjIdxReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryObjIdxReqDefaultTypeInternal() {}
  union {
    QueryObjIdxReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryObjIdxReqDefaultTypeInternal _QueryObjIdxReq_default_instance_;

inline constexpr QueryNotice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        msgid_{static_cast< ::CSToDB::MsgID >(115)} {}

template <typename>
PROTOBUF_CONSTEXPR QueryNotice::QueryNotice(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryNoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryNoticeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryNoticeDefaultTypeInternal() {}
  union {
    QueryNotice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryNoticeDefaultTypeInternal _QueryNotice_default_instance_;

inline constexpr NicknameConflict::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        newnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cdk_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        oldnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gsid_{0},
        gcnetid_{0},
        guid_{::uint64_t{0u}},
        sdkid_{0},
        csid_{0},
        mgsid_{static_cast< ::CSToDB::MsgID >(107)} {}

template <typename>
PROTOBUF_CONSTEXPR NicknameConflict::NicknameConflict(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NicknameConflictDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NicknameConflictDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NicknameConflictDefaultTypeInternal() {}
  union {
    NicknameConflict _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NicknameConflictDefaultTypeInternal _NicknameConflict_default_instance_;

inline constexpr InsertUser::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sqlstr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        guid_{::int64_t{0}},
        mgsid_{static_cast< ::CSToDB::MsgID >(104)} {}

template <typename>
PROTOBUF_CONSTEXPR InsertUser::InsertUser(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InsertUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InsertUserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InsertUserDefaultTypeInternal() {}
  union {
    InsertUser _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InsertUserDefaultTypeInternal _InsertUser_default_instance_;

inline constexpr InsertNotice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sql_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mgsid_{static_cast< ::CSToDB::MsgID >(110)} {}

template <typename>
PROTOBUF_CONSTEXPR InsertNotice::InsertNotice(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InsertNoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InsertNoticeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InsertNoticeDefaultTypeInternal() {}
  union {
    InsertNotice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InsertNoticeDefaultTypeInternal _InsertNotice_default_instance_;

inline constexpr InsertCDKeyInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sql_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msgid_{static_cast< ::CSToDB::MsgID >(119)} {}

template <typename>
PROTOBUF_CONSTEXPR InsertCDKeyInfo::InsertCDKeyInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InsertCDKeyInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InsertCDKeyInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InsertCDKeyInfoDefaultTypeInternal() {}
  union {
    InsertCDKeyInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InsertCDKeyInfoDefaultTypeInternal _InsertCDKeyInfo_default_instance_;

inline constexpr GameMailInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        giftstr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        createtime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        overtime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::CSToDB::MailType >(0)},
        mailid_{0},
        userid_{::int64_t{0}},
        curtstate_{static_cast< ::CSToDB::EMailCurtState >(0)},
        sdkidx_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameMailInfo::GameMailInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameMailInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameMailInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameMailInfoDefaultTypeInternal() {}
  union {
    GameMailInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameMailInfoDefaultTypeInternal _GameMailInfo_default_instance_;

inline constexpr ExeSQL_Call::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sql_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msgid_{static_cast< ::CSToDB::MsgID >(114)} {}

template <typename>
PROTOBUF_CONSTEXPR ExeSQL_Call::ExeSQL_Call(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ExeSQL_CallDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExeSQL_CallDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExeSQL_CallDefaultTypeInternal() {}
  union {
    ExeSQL_Call _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExeSQL_CallDefaultTypeInternal _ExeSQL_Call_default_instance_;

inline constexpr DeleteNotice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{0u},
        mgsid_{static_cast< ::CSToDB::MsgID >(111)} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteNotice::DeleteNotice(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeleteNoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteNoticeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteNoticeDefaultTypeInternal() {}
  union {
    DeleteNotice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteNoticeDefaultTypeInternal _DeleteNotice_default_instance_;

inline constexpr CheckNameReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cdk_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        completeinfo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gsid_{0},
        gcnetid_{0},
        gsnetid_{0},
        sdkid_{0},
        csid_{0},
        mgsid_{static_cast< ::CSToDB::MsgID >(100)} {}

template <typename>
PROTOBUF_CONSTEXPR CheckNameReq::CheckNameReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CheckNameReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckNameReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckNameReqDefaultTypeInternal() {}
  union {
    CheckNameReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckNameReqDefaultTypeInternal _CheckNameReq_default_instance_;

inline constexpr ChangeNickName::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        guid_{::int64_t{0}},
        msgid_{static_cast< ::CSToDB::MsgID >(113)} {}

template <typename>
PROTOBUF_CONSTEXPR ChangeNickName::ChangeNickName(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChangeNickNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeNickNameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeNickNameDefaultTypeInternal() {}
  union {
    ChangeNickName _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeNickNameDefaultTypeInternal _ChangeNickName_default_instance_;

inline constexpr CDKeyEvents::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sql_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msgid_{static_cast< ::CSToDB::MsgID >(118)} {}

template <typename>
PROTOBUF_CONSTEXPR CDKeyEvents::CDKeyEvents(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CDKeyEventsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDKeyEventsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDKeyEventsDefaultTypeInternal() {}
  union {
    CDKeyEvents _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDKeyEventsDefaultTypeInternal _CDKeyEvents_default_instance_;

inline constexpr BuyGoods::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        buygoodsmag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mgsid_{static_cast< ::CSToDB::MsgID >(106)} {}

template <typename>
PROTOBUF_CONSTEXPR BuyGoods::BuyGoods(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BuyGoodsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuyGoodsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuyGoodsDefaultTypeInternal() {}
  union {
    BuyGoods _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuyGoodsDefaultTypeInternal _BuyGoods_default_instance_;

inline constexpr AlterSNSList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_id_{::uint64_t{0u}},
        related_id_{::uint64_t{0u}},
        related_{0u},
        opration_{0u},
        mgsid_{static_cast< ::CSToDB::MsgID >(109)} {}

template <typename>
PROTOBUF_CONSTEXPR AlterSNSList::AlterSNSList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AlterSNSListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlterSNSListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlterSNSListDefaultTypeInternal() {}
  union {
    AlterSNSList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlterSNSListDefaultTypeInternal _AlterSNSList_default_instance_;

inline constexpr AlterItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sql_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mgsid_{static_cast< ::CSToDB::MsgID >(112)} {}

template <typename>
PROTOBUF_CONSTEXPR AlterItem::AlterItem(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AlterItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AlterItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AlterItemDefaultTypeInternal() {}
  union {
    AlterItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AlterItemDefaultTypeInternal _AlterItem_default_instance_;

inline constexpr UpdateGameMail::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        maillist_{},
        mgsid_{static_cast< ::CSToDB::MsgID >(105)} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateGameMail::UpdateGameMail(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateGameMailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateGameMailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateGameMailDefaultTypeInternal() {}
  union {
    UpdateGameMail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateGameMailDefaultTypeInternal _UpdateGameMail_default_instance_;

inline constexpr StoreUserdata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ssuserherodbdata_{},
        friendlist_{},
        blacklist_{},
        itemlist_{},
        maillist_{},
        tlastgetloginreward_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mguidesteps_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pwd_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        runestr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        slotstr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        un64objidx_{::int64_t{0}},
        euserplatform_{0},
        un32headerid_{0},
        n64diamond_{::int64_t{0}},
        n64gold_{::int64_t{0}},
        tregisteutcmillisec_{::int64_t{0}},
        n8sex_{0},
        un32totalgameinns_{0},
        tlastloginutcmillisec_{::int64_t{0}},
        tlastlogoututctime_{::int64_t{0}},
        n64score_{::int64_t{0}},
        un32totalwininns_{0},
        un32totalherokills_{0},
        un32totaldestorybuildings_{0},
        un32totaldeadtimes_{0},
        un32totalassist_{0},
        un16userlv_{0},
        tlastfirstwintime_{::int64_t{0}},
        un32usercurlvexp_{0},
        un16cldays_{0},
        un16viplv_{0},
        vipscore_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StoreUserdata::StoreUserdata(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StoreUserdataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreUserdataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreUserdataDefaultTypeInternal() {}
  union {
    StoreUserdata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreUserdataDefaultTypeInternal _StoreUserdata_default_instance_;
}  // namespace CSToDB
static ::_pb::Metadata file_level_metadata_CSToDB_2eproto[25];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_CSToDB_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_CSToDB_2eproto = nullptr;
const ::uint32_t
    TableStruct_CSToDB_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateCDKeyInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateCDKeyInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateCDKeyInfo, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateCDKeyInfo, _impl_.sql_str_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertCDKeyInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertCDKeyInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertCDKeyInfo, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertCDKeyInfo, _impl_.sql_str_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToDB::CDKeyEvents, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::CDKeyEvents, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::CDKeyEvents, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::CDKeyEvents, _impl_.sql_str_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateUserMail, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateUserMail, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateUserMail, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateUserMail, _impl_.objid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateUserMail, _impl_.mailid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateUserMail, _impl_.cstate_),
        3,
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserHeroDBData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserHeroDBData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserHeroDBData, _impl_.un32heroid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserHeroDBData, _impl_.endtime_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserHeroDBData, _impl_.buytime_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserRelationshipInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserRelationshipInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserRelationshipInfo, _impl_.stnickname_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserRelationshipInfo, _impl_.nheadid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserRelationshipInfo, _impl_.guididx_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserRelationshipInfo, _impl_.erelationship_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserRelationshipInfo, _impl_.tmilsec_),
        0,
        2,
        1,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserItemInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserItemInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserItemInfo, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserItemInfo, _impl_.ifusing_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserItemInfo, _impl_.item_num_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserItemInfo, _impl_.buy_time_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserItemInfo, _impl_.end_time_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserItemInfo, _impl_.n32effectvalue_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_SUserItemInfo, _impl_.n32effectid_),
        0,
        1,
        3,
        2,
        5,
        4,
        6,
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_UserMailDBData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_UserMailDBData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_UserMailDBData, _impl_.mailid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata_UserMailDBData, _impl_.mstate_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un64objidx_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.euserplatform_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un32headerid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.n8sex_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.n64diamond_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.n64gold_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.tregisteutcmillisec_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.tlastloginutcmillisec_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.tlastlogoututctime_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.n64score_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un32totalgameinns_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un32totalwininns_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un32totalherokills_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un32totaldestorybuildings_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un32totaldeadtimes_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un32totalassist_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un16userlv_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un32usercurlvexp_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.tlastfirstwintime_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un16cldays_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.tlastgetloginreward_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.un16viplv_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.vipscore_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.mguidesteps_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.ssuserherodbdata_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.friendlist_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.blacklist_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.itemlist_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.maillist_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.pwd_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.runestr_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::StoreUserdata, _impl_.slotstr_),
        7,
        8,
        9,
        13,
        10,
        11,
        12,
        15,
        16,
        17,
        14,
        18,
        19,
        20,
        21,
        22,
        23,
        25,
        24,
        26,
        0,
        27,
        28,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        3,
        4,
        5,
        6,
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryNotice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryNotice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryNotice, _impl_.msgid_),
        0,
        PROTOBUF_FIELD_OFFSET(::CSToDB::ExeSQL_Call, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::ExeSQL_Call, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::ExeSQL_Call, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::ExeSQL_Call, _impl_.sql_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToDB::ChangeNickName, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::ChangeNickName, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::ChangeNickName, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::ChangeNickName, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::ChangeNickName, _impl_.guid_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CSToDB::AlterItem, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::AlterItem, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::AlterItem, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::AlterItem, _impl_.sql_str_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToDB::DeleteNotice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::DeleteNotice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::DeleteNotice, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::DeleteNotice, _impl_.id_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertNotice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertNotice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertNotice, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertNotice, _impl_.sql_str_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToDB::AlterSNSList, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::AlterSNSList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::AlterSNSList, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::AlterSNSList, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::AlterSNSList, _impl_.related_id_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::AlterSNSList, _impl_.related_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::AlterSNSList, _impl_.opration_),
        4,
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryObjIdxReq, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryObjIdxReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryObjIdxReq, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryObjIdxReq, _impl_.logininfo_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryObjIdxReq, _impl_.gsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryObjIdxReq, _impl_.gcnetid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryObjIdxReq, _impl_.csid_),
        4,
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CSToDB::NicknameConflict, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::NicknameConflict, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::NicknameConflict, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::NicknameConflict, _impl_.newnickname_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::NicknameConflict, _impl_.gsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::NicknameConflict, _impl_.gcnetid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::NicknameConflict, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::NicknameConflict, _impl_.sdkid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::NicknameConflict, _impl_.csid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::NicknameConflict, _impl_.cdk_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::NicknameConflict, _impl_.oldnickname_),
        8,
        0,
        3,
        4,
        5,
        6,
        7,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CSToDB::BuyGoods, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::BuyGoods, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::BuyGoods, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::BuyGoods, _impl_.buygoodsmag_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_.mailid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_.userid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_.curtstate_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_.sdkidx_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_.giftstr_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_.createtime_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_.overtime_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::GameMailInfo, _impl_.sender_),
        6,
        7,
        8,
        9,
        10,
        0,
        1,
        2,
        3,
        4,
        5,
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateGameMail, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateGameMail, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateGameMail, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateGameMail, _impl_.maillist_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertUser, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertUser, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertUser, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertUser, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::InsertUser, _impl_.sqlstr_),
        2,
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateUser, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateUser, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateUser, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateUser, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::UpdateUser, _impl_.sqlstr_),
        2,
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToDB::CheckNameReq, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::CheckNameReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::CheckNameReq, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::CheckNameReq, _impl_.gsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::CheckNameReq, _impl_.gcnetid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::CheckNameReq, _impl_.gsnetid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::CheckNameReq, _impl_.sdkid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::CheckNameReq, _impl_.csid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::CheckNameReq, _impl_.cdk_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::CheckNameReq, _impl_.completeinfo_),
        7,
        2,
        3,
        4,
        5,
        6,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryUserReq, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryUserReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryUserReq, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryUserReq, _impl_.logininfo_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryUserReq, _impl_.gsid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryUserReq, _impl_.gcnetid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryUserReq, _impl_.csid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryUserReq, _impl_.objid_),
        PROTOBUF_FIELD_OFFSET(::CSToDB::QueryUserReq, _impl_.uname_),
        6,
        0,
        2,
        3,
        5,
        4,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::CSToDB::UpdateCDKeyInfo)},
        {12, 22, -1, sizeof(::CSToDB::InsertCDKeyInfo)},
        {24, 34, -1, sizeof(::CSToDB::CDKeyEvents)},
        {36, 48, -1, sizeof(::CSToDB::UpdateUserMail)},
        {52, 63, -1, sizeof(::CSToDB::StoreUserdata_SUserHeroDBData)},
        {66, 79, -1, sizeof(::CSToDB::StoreUserdata_SUserRelationshipInfo)},
        {84, 99, -1, sizeof(::CSToDB::StoreUserdata_SUserItemInfo)},
        {106, 116, -1, sizeof(::CSToDB::StoreUserdata_UserMailDBData)},
        {118, 160, -1, sizeof(::CSToDB::StoreUserdata)},
        {194, 203, -1, sizeof(::CSToDB::QueryNotice)},
        {204, 214, -1, sizeof(::CSToDB::ExeSQL_Call)},
        {216, 227, -1, sizeof(::CSToDB::ChangeNickName)},
        {230, 240, -1, sizeof(::CSToDB::AlterItem)},
        {242, 252, -1, sizeof(::CSToDB::DeleteNotice)},
        {254, 264, -1, sizeof(::CSToDB::InsertNotice)},
        {266, 279, -1, sizeof(::CSToDB::AlterSNSList)},
        {284, 297, -1, sizeof(::CSToDB::QueryObjIdxReq)},
        {302, 319, -1, sizeof(::CSToDB::NicknameConflict)},
        {328, 338, -1, sizeof(::CSToDB::BuyGoods)},
        {340, 359, -1, sizeof(::CSToDB::GameMailInfo)},
        {370, 380, -1, sizeof(::CSToDB::UpdateGameMail)},
        {382, 393, -1, sizeof(::CSToDB::InsertUser)},
        {396, 407, -1, sizeof(::CSToDB::UpdateUser)},
        {410, 426, -1, sizeof(::CSToDB::CheckNameReq)},
        {434, 449, -1, sizeof(::CSToDB::QueryUserReq)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::CSToDB::_UpdateCDKeyInfo_default_instance_._instance,
    &::CSToDB::_InsertCDKeyInfo_default_instance_._instance,
    &::CSToDB::_CDKeyEvents_default_instance_._instance,
    &::CSToDB::_UpdateUserMail_default_instance_._instance,
    &::CSToDB::_StoreUserdata_SUserHeroDBData_default_instance_._instance,
    &::CSToDB::_StoreUserdata_SUserRelationshipInfo_default_instance_._instance,
    &::CSToDB::_StoreUserdata_SUserItemInfo_default_instance_._instance,
    &::CSToDB::_StoreUserdata_UserMailDBData_default_instance_._instance,
    &::CSToDB::_StoreUserdata_default_instance_._instance,
    &::CSToDB::_QueryNotice_default_instance_._instance,
    &::CSToDB::_ExeSQL_Call_default_instance_._instance,
    &::CSToDB::_ChangeNickName_default_instance_._instance,
    &::CSToDB::_AlterItem_default_instance_._instance,
    &::CSToDB::_DeleteNotice_default_instance_._instance,
    &::CSToDB::_InsertNotice_default_instance_._instance,
    &::CSToDB::_AlterSNSList_default_instance_._instance,
    &::CSToDB::_QueryObjIdxReq_default_instance_._instance,
    &::CSToDB::_NicknameConflict_default_instance_._instance,
    &::CSToDB::_BuyGoods_default_instance_._instance,
    &::CSToDB::_GameMailInfo_default_instance_._instance,
    &::CSToDB::_UpdateGameMail_default_instance_._instance,
    &::CSToDB::_InsertUser_default_instance_._instance,
    &::CSToDB::_UpdateUser_default_instance_._instance,
    &::CSToDB::_CheckNameReq_default_instance_._instance,
    &::CSToDB::_QueryUserReq_default_instance_._instance,
};
const char descriptor_table_protodef_CSToDB_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014CSToDB.proto\022\006CSToDB\"R\n\017UpdateCDKeyInf"
    "o\022.\n\005msgid\030\001 \001(\0162\r.CSToDB.MsgID:\020eUpdate"
    "CDKeyInfo\022\017\n\007sql_str\030\002 \001(\t\"R\n\017InsertCDKe"
    "yInfo\022.\n\005msgid\030\001 \001(\0162\r.CSToDB.MsgID:\020eIn"
    "sertCDKeyInfo\022\017\n\007sql_str\030\002 \001(\t\"P\n\013CDKeyE"
    "vents\0220\n\005msgid\030\001 \001(\0162\r.CSToDB.MsgID:\022eIn"
    "sertCDKeyEvents\022\017\n\007sql_str\030\002 \001(\t\"}\n\016Upda"
    "teUserMail\022<\n\005msgid\030\001 \001(\0162\r.CSToDB.MsgID"
    ":\036eUpdateUserGameMail_DBCallBack\022\r\n\005obji"
    "d\030\002 \001(\003\022\016\n\006mailid\030\003 \001(\005\022\016\n\006cstate\030\004 \001(\005\""
    "\330\n\n\rStoreUserdata\022\022\n\nun64ObjIdx\030\001 \001(\003\022\025\n"
    "\reUserPlatform\030\002 \001(\005\022\024\n\014un32HeaderID\030\003 \001"
    "(\005\022\r\n\005n8Sex\030\004 \001(\005\022\022\n\nn64Diamond\030\005 \001(\003\022\017\n"
    "\007n64Gold\030\006 \001(\003\022\033\n\023tRegisteUTCMillisec\030\007 "
    "\001(\003\022\035\n\025tLastLoginUTCMillisec\030\010 \001(\003\022\032\n\022tL"
    "astLogOutUTCTime\030\t \001(\003\022\020\n\010n64Score\030\n \001(\003"
    "\022\031\n\021un32TotalGameInns\030\013 \001(\005\022\030\n\020un32Total"
    "WinInns\030\014 \001(\005\022\032\n\022un32TotalHeroKills\030\r \001("
    "\005\022!\n\031un32TotalDestoryBuildings\030\016 \001(\005\022\032\n\022"
    "un32TotalDeadTimes\030\017 \001(\005\022\027\n\017un32TotalAss"
    "ist\030\020 \001(\005\022\022\n\nun16UserLv\030\021 \001(\005\022\030\n\020un32Use"
    "rCurLvExp\030\022 \001(\005\022\031\n\021tLastFirstWinTime\030\023 \001"
    "(\003\022\022\n\nun16Cldays\030\024 \001(\005\022\033\n\023tLastGetLoginR"
    "eward\030\025 \001(\t\022\021\n\tun16VipLv\030\026 \001(\005\022\020\n\010vipSco"
    "re\030\027 \001(\005\022\023\n\013mGuideSteps\030\030 \001(\t\022\?\n\020sSUserH"
    "eroDBData\030\031 \003(\0132%.CSToDB.StoreUserdata.S"
    "UserHeroDBData\022\?\n\nfriendList\030\032 \003(\0132+.CST"
    "oDB.StoreUserdata.SUserRelationshipInfo\022"
    ">\n\tblackList\030\033 \003(\0132+.CSToDB.StoreUserdat"
    "a.SUserRelationshipInfo\0225\n\010itemlist\030\034 \003("
    "\0132#.CSToDB.StoreUserdata.SUserItemInfo\0226"
    "\n\010mailList\030\035 \003(\0132$.CSToDB.StoreUserdata."
    "UserMailDBData\022\020\n\010nickname\030\036 \001(\t\022\020\n\010user"
    "name\030\037 \001(\t\022\013\n\003pwd\030  \001(\t\022\017\n\007runestr\030! \001(\t"
    "\022\017\n\007slotstr\030\" \001(\t\032G\n\017SUserHeroDBData\022\022\n\n"
    "un32HeroID\030\001 \001(\005\022\017\n\007endTime\030\002 \001(\003\022\017\n\007buy"
    "Time\030\003 \001(\003\032u\n\025SUserRelationshipInfo\022\022\n\ns"
    "tNickName\030\001 \001(\t\022\017\n\007nHeadId\030\002 \001(\005\022\017\n\007guid"
    "idx\030\003 \001(\003\022\025\n\reRelationShip\030\004 \001(\005\022\017\n\007tMil"
    "Sec\030\005 \001(\003\032\224\001\n\rSUserItemInfo\022\017\n\007item_id\030\001"
    " \001(\005\022\017\n\007ifusing\030\002 \001(\010\022\020\n\010item_num\030\003 \001(\005\022"
    "\020\n\010buy_time\030\004 \001(\003\022\020\n\010end_time\030\006 \001(\003\022\026\n\016n"
    "32EffectValue\030\007 \001(\005\022\023\n\013n32EffectID\030\010 \001(\005"
    "\0320\n\016UserMailDBData\022\016\n\006mailId\030\001 \001(\005\022\016\n\006mS"
    "tate\030\002 \001(\005\"@\n\013QueryNotice\0221\n\005msgid\030\001 \001(\016"
    "2\r.CSToDB.MsgID:\023eQueryNotice_DBCall\"F\n\013"
    "ExeSQL_Call\022*\n\005msgid\030\001 \001(\0162\r.CSToDB.MsgI"
    "D:\014eExeSQL_Call\022\013\n\003sql\030\002 \001(\t\"f\n\016ChangeNi"
    "ckName\0224\n\005msgid\030\001 \001(\0162\r.CSToDB.MsgID:\026eC"
    "hangeNickName_DBCall\022\020\n\010nickname\030\002 \001(\t\022\014"
    "\n\004guid\030\003 \001(\003\"M\n\tAlterItem\022/\n\005mgsid\030\001 \001(\016"
    "2\r.CSToDB.MsgID:\021eAlterItem_DBCall\022\017\n\007sq"
    "l_str\030\002 \001(\t\"N\n\014DeleteNotice\0222\n\005mgsid\030\001 \001"
    "(\0162\r.CSToDB.MsgID:\024eDeleteNotice_DBCall\022"
    "\n\n\002id\030\002 \001(\r\"S\n\014InsertNotice\0222\n\005mgsid\030\001 \001"
    "(\0162\r.CSToDB.MsgID:\024eInsertNotice_DBCall\022"
    "\017\n\007sql_str\030\002 \001(\t\"\212\001\n\014AlterSNSList\0222\n\005mgs"
    "id\030\001 \001(\0162\r.CSToDB.MsgID:\024eAlterSNSList_D"
    "BCall\022\017\n\007user_id\030\002 \001(\004\022\022\n\nrelated_id\030\003 \001"
    "(\004\022\017\n\007related\030\004 \001(\r\022\020\n\010opration\030\005 \001(\r\"\206\001"
    "\n\016QueryObjIdxReq\0224\n\005msgid\030\001 \001(\0162\r.CSToDB"
    ".MsgID:\026eQueryObjId_DBCallBack\022\021\n\tLogini"
    "nfo\030\002 \001(\t\022\014\n\004gsid\030\003 \001(\005\022\017\n\007gcnetid\030\004 \001(\005"
    "\022\014\n\004csid\030\005 \001(\005\"\317\001\n\020NicknameConflict\022:\n\005m"
    "gsid\030\001 \001(\0162\r.CSToDB.MsgID:\034eNicknameConf"
    "lict_DBCallBack\022\023\n\013newnickname\030\002 \001(\t\022\014\n\004"
    "gsid\030\003 \001(\005\022\017\n\007gcnetid\030\004 \001(\005\022\014\n\004guid\030\005 \001("
    "\004\022\r\n\005sdkid\030\006 \001(\005\022\014\n\004csid\030\007 \001(\005\022\013\n\003cdk\030\010 "
    "\001(\t\022\023\n\013oldnickname\030\t \001(\t\"S\n\010BuyGoods\0222\n\005"
    "mgsid\030\001 \001(\0162\r.CSToDB.MsgID:\024eBuyGoods_DB"
    "CallBack\022\023\n\013buygoodsmag\030\002 \001(\t\"\360\001\n\014GameMa"
    "ilInfo\022\036\n\004type\030\001 \001(\0162\020.CSToDB.MailType\022\016"
    "\n\006mailId\030\002 \001(\005\022\016\n\006userid\030\003 \001(\003\022)\n\tcurtst"
    "ate\030\004 \001(\0162\026.CSToDB.EMailCurtState\022\016\n\006sdk"
    "idx\030\005 \001(\005\022\r\n\005title\030\006 \001(\t\022\017\n\007content\030\007 \001("
    "\t\022\017\n\007giftstr\030\010 \001(\t\022\022\n\ncreatetime\030\t \001(\t\022\020"
    "\n\010overtime\030\n \001(\t\022\016\n\006sender\030\013 \001(\t\"r\n\016Upda"
    "teGameMail\0228\n\005mgsid\030\001 \001(\0162\r.CSToDB.MsgID"
    ":\032eUpdateGameMail_DBCallBack\022&\n\010maillist"
    "\030\002 \003(\0132\024.CSToDB.GameMailInfo\"`\n\nInsertUs"
    "er\0224\n\005mgsid\030\001 \001(\0162\r.CSToDB.MsgID:\026eInser"
    "tUser_DBCallBack\022\014\n\004guid\030\002 \001(\003\022\016\n\006sqlstr"
    "\030\003 \001(\t\"`\n\nUpdateUser\0224\n\005mgsid\030\001 \001(\0162\r.CS"
    "ToDB.MsgID:\026eUpdateUser_DBCallBack\022\014\n\004gu"
    "id\030\002 \001(\003\022\016\n\006sqlstr\030\003 \001(\t\"\266\001\n\014CheckNameRe"
    "q\0226\n\005mgsid\030\001 \001(\0162\r.CSToDB.MsgID:\030eCheckN"
    "ickNameDBCallBack\022\014\n\004gsid\030\002 \001(\005\022\017\n\007gcnet"
    "id\030\003 \001(\005\022\017\n\007gsnetid\030\004 \001(\005\022\r\n\005sdkid\030\005 \001(\005"
    "\022\014\n\004csid\030\006 \001(\005\022\013\n\003cdk\030\007 \001(\t\022\024\n\014completeI"
    "nfo\030\010 \001(\t\"\241\001\n\014QueryUserReq\0223\n\005msgid\030\001 \001("
    "\0162\r.CSToDB.MsgID:\025eQueryUser_DBCallBack\022"
    "\021\n\tLogininfo\030\002 \001(\t\022\014\n\004gsid\030\003 \001(\005\022\017\n\007gcne"
    "tid\030\004 \001(\005\022\014\n\004csid\030\005 \001(\005\022\r\n\005objid\030\006 \001(\003\022\r"
    "\n\005uname\030\007 \001(\t*\262\004\n\005MsgID\022\034\n\030eCheckNickNam"
    "eDBCallBack\020d\022\031\n\025eQueryUser_DBCallBack\020e"
    "\022\030\n\024eLogStore_DBCallBack\020f\022\032\n\026eUpdateUse"
    "r_DBCallBack\020g\022\032\n\026eInsertUser_DBCallBack"
    "\020h\022\036\n\032eUpdateGameMail_DBCallBack\020i\022\030\n\024eB"
    "uyGoods_DBCallBack\020j\022 \n\034eNicknameConflic"
    "t_DBCallBack\020k\022\032\n\026eQueryObjId_DBCallBack"
    "\020l\022\030\n\024eAlterSNSList_DBCall\020m\022\030\n\024eInsertN"
    "otice_DBCall\020n\022\030\n\024eDeleteNotice_DBCall\020o"
    "\022\025\n\021eAlterItem_DBCall\020p\022\032\n\026eChangeNickNa"
    "me_DBCall\020q\022\020\n\014eExeSQL_Call\020r\022\027\n\023eQueryN"
    "otice_DBCall\020s\022\022\n\016eStoreUserData\020t\022\"\n\036eU"
    "pdateUserGameMail_DBCallBack\020u\022\026\n\022eInser"
    "tCDKeyEvents\020v\022\024\n\020eInsertCDKeyInfo\020w\022\024\n\020"
    "eUpdateCDKeyInfo\020x*]\n\010MailType\022\021\n\rmailTy"
    "pe_None\020\000\022\016\n\nmailType_1\020\001\022\016\n\nmailType_2\020"
    "\002\022\016\n\nmailType_3\020\003\022\016\n\nmailType_4\020\004*\206\001\n\016EM"
    "ailCurtState\022\023\n\017eMailState_None\020\000\022\022\n\016eMa"
    "ilState_New\020\001\022\"\n\036eMailState_LookedButNot"
    "GotGift\020\002\022\023\n\017eMailState_Look\020\003\022\022\n\016eMailS"
    "tate_Del\020\004"
};
static ::absl::once_flag descriptor_table_CSToDB_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_CSToDB_2eproto = {
    false,
    false,
    4530,
    descriptor_table_protodef_CSToDB_2eproto,
    "CSToDB.proto",
    &descriptor_table_CSToDB_2eproto_once,
    nullptr,
    0,
    25,
    schemas,
    file_default_instances,
    TableStruct_CSToDB_2eproto::offsets,
    file_level_metadata_CSToDB_2eproto,
    file_level_enum_descriptors_CSToDB_2eproto,
    file_level_service_descriptors_CSToDB_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_CSToDB_2eproto_getter() {
  return &descriptor_table_CSToDB_2eproto;
}
namespace CSToDB {
const ::google::protobuf::EnumDescriptor* MsgID_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_CSToDB_2eproto);
  return file_level_enum_descriptors_CSToDB_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MsgID_internal_data_[] = {
    1376356u, 0u, };
bool MsgID_IsValid(int value) {
  return 100 <= value && value <= 120;
}
const ::google::protobuf::EnumDescriptor* MailType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_CSToDB_2eproto);
  return file_level_enum_descriptors_CSToDB_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MailType_internal_data_[] = {
    327680u, 0u, };
bool MailType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* EMailCurtState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_CSToDB_2eproto);
  return file_level_enum_descriptors_CSToDB_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t EMailCurtState_internal_data_[] = {
    327680u, 0u, };
bool EMailCurtState_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

class UpdateCDKeyInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateCDKeyInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateCDKeyInfo, _impl_._has_bits_);
};

UpdateCDKeyInfo::UpdateCDKeyInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.UpdateCDKeyInfo)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCDKeyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sql_str_(arena, from.sql_str_) {}

UpdateCDKeyInfo::UpdateCDKeyInfo(
    ::google::protobuf::Arena* arena,
    const UpdateCDKeyInfo& from)
    : ::google::protobuf::Message(arena) {
  UpdateCDKeyInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.msgid_ = from._impl_.msgid_;

  // @@protoc_insertion_point(copy_constructor:CSToDB.UpdateCDKeyInfo)
}
inline PROTOBUF_NDEBUG_INLINE UpdateCDKeyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sql_str_(arena),
        msgid_{static_cast< ::CSToDB::MsgID >(120)} {}

inline void UpdateCDKeyInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateCDKeyInfo::~UpdateCDKeyInfo() {
  // @@protoc_insertion_point(destructor:CSToDB.UpdateCDKeyInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateCDKeyInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sql_str_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateCDKeyInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UpdateCDKeyInfo, _impl_._cached_size_),
              false,
          },
          &UpdateCDKeyInfo::MergeImpl,
          &UpdateCDKeyInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UpdateCDKeyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.UpdateCDKeyInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.sql_str_.ClearNonDefaultToEmpty();
    }
    _impl_.msgid_ = 120;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateCDKeyInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 38, 2> UpdateCDKeyInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateCDKeyInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateCDKeyInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::UpdateCDKeyInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string sql_str = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateCDKeyInfo, _impl_.sql_str_)}},
    // optional .CSToDB.MsgID msgid = 1 [default = eUpdateCDKeyInfo];
    {::_pbi::TcParser::FastErS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateCDKeyInfo, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID msgid = 1 [default = eUpdateCDKeyInfo];
    {PROTOBUF_FIELD_OFFSET(UpdateCDKeyInfo, _impl_.msgid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string sql_str = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateCDKeyInfo, _impl_.sql_str_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\26\0\7\0\0\0\0\0"
    "CSToDB.UpdateCDKeyInfo"
    "sql_str"
  }},
};

::uint8_t* UpdateCDKeyInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.UpdateCDKeyInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID msgid = 1 [default = eUpdateCDKeyInfo];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional string sql_str = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_sql_str();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.UpdateCDKeyInfo.sql_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.UpdateCDKeyInfo)
  return target;
}

::size_t UpdateCDKeyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.UpdateCDKeyInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string sql_str = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sql_str());
    }

    // optional .CSToDB.MsgID msgid = 1 [default = eUpdateCDKeyInfo];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpdateCDKeyInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateCDKeyInfo*>(&to_msg);
  auto& from = static_cast<const UpdateCDKeyInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.UpdateCDKeyInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_sql_str(from._internal_sql_str());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateCDKeyInfo::CopyFrom(const UpdateCDKeyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.UpdateCDKeyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateCDKeyInfo::IsInitialized() const {
  return true;
}

void UpdateCDKeyInfo::InternalSwap(UpdateCDKeyInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sql_str_, &other->_impl_.sql_str_, arena);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata UpdateCDKeyInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[0]);
}
// ===================================================================

class InsertCDKeyInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<InsertCDKeyInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InsertCDKeyInfo, _impl_._has_bits_);
};

InsertCDKeyInfo::InsertCDKeyInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.InsertCDKeyInfo)
}
inline PROTOBUF_NDEBUG_INLINE InsertCDKeyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sql_str_(arena, from.sql_str_) {}

InsertCDKeyInfo::InsertCDKeyInfo(
    ::google::protobuf::Arena* arena,
    const InsertCDKeyInfo& from)
    : ::google::protobuf::Message(arena) {
  InsertCDKeyInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.msgid_ = from._impl_.msgid_;

  // @@protoc_insertion_point(copy_constructor:CSToDB.InsertCDKeyInfo)
}
inline PROTOBUF_NDEBUG_INLINE InsertCDKeyInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sql_str_(arena),
        msgid_{static_cast< ::CSToDB::MsgID >(119)} {}

inline void InsertCDKeyInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InsertCDKeyInfo::~InsertCDKeyInfo() {
  // @@protoc_insertion_point(destructor:CSToDB.InsertCDKeyInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InsertCDKeyInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sql_str_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
InsertCDKeyInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(InsertCDKeyInfo, _impl_._cached_size_),
              false,
          },
          &InsertCDKeyInfo::MergeImpl,
          &InsertCDKeyInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void InsertCDKeyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.InsertCDKeyInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.sql_str_.ClearNonDefaultToEmpty();
    }
    _impl_.msgid_ = 119;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InsertCDKeyInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 38, 2> InsertCDKeyInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InsertCDKeyInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InsertCDKeyInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::InsertCDKeyInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string sql_str = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(InsertCDKeyInfo, _impl_.sql_str_)}},
    // optional .CSToDB.MsgID msgid = 1 [default = eInsertCDKeyInfo];
    {::_pbi::TcParser::FastErS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(InsertCDKeyInfo, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID msgid = 1 [default = eInsertCDKeyInfo];
    {PROTOBUF_FIELD_OFFSET(InsertCDKeyInfo, _impl_.msgid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string sql_str = 2;
    {PROTOBUF_FIELD_OFFSET(InsertCDKeyInfo, _impl_.sql_str_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\26\0\7\0\0\0\0\0"
    "CSToDB.InsertCDKeyInfo"
    "sql_str"
  }},
};

::uint8_t* InsertCDKeyInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.InsertCDKeyInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID msgid = 1 [default = eInsertCDKeyInfo];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional string sql_str = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_sql_str();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.InsertCDKeyInfo.sql_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.InsertCDKeyInfo)
  return target;
}

::size_t InsertCDKeyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.InsertCDKeyInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string sql_str = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sql_str());
    }

    // optional .CSToDB.MsgID msgid = 1 [default = eInsertCDKeyInfo];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void InsertCDKeyInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InsertCDKeyInfo*>(&to_msg);
  auto& from = static_cast<const InsertCDKeyInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.InsertCDKeyInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_sql_str(from._internal_sql_str());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InsertCDKeyInfo::CopyFrom(const InsertCDKeyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.InsertCDKeyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InsertCDKeyInfo::IsInitialized() const {
  return true;
}

void InsertCDKeyInfo::InternalSwap(InsertCDKeyInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sql_str_, &other->_impl_.sql_str_, arena);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata InsertCDKeyInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[1]);
}
// ===================================================================

class CDKeyEvents::_Internal {
 public:
  using HasBits = decltype(std::declval<CDKeyEvents>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_._has_bits_);
};

CDKeyEvents::CDKeyEvents(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.CDKeyEvents)
}
inline PROTOBUF_NDEBUG_INLINE CDKeyEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sql_str_(arena, from.sql_str_) {}

CDKeyEvents::CDKeyEvents(
    ::google::protobuf::Arena* arena,
    const CDKeyEvents& from)
    : ::google::protobuf::Message(arena) {
  CDKeyEvents* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.msgid_ = from._impl_.msgid_;

  // @@protoc_insertion_point(copy_constructor:CSToDB.CDKeyEvents)
}
inline PROTOBUF_NDEBUG_INLINE CDKeyEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sql_str_(arena),
        msgid_{static_cast< ::CSToDB::MsgID >(118)} {}

inline void CDKeyEvents::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CDKeyEvents::~CDKeyEvents() {
  // @@protoc_insertion_point(destructor:CSToDB.CDKeyEvents)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDKeyEvents::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sql_str_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CDKeyEvents::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_._cached_size_),
              false,
          },
          &CDKeyEvents::MergeImpl,
          &CDKeyEvents::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CDKeyEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.CDKeyEvents)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.sql_str_.ClearNonDefaultToEmpty();
    }
    _impl_.msgid_ = 118;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDKeyEvents::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 34, 2> CDKeyEvents::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CDKeyEvents_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::CDKeyEvents>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string sql_str = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.sql_str_)}},
    // optional .CSToDB.MsgID msgid = 1 [default = eInsertCDKeyEvents];
    {::_pbi::TcParser::FastErS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID msgid = 1 [default = eInsertCDKeyEvents];
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.msgid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string sql_str = 2;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.sql_str_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\22\0\7\0\0\0\0\0"
    "CSToDB.CDKeyEvents"
    "sql_str"
  }},
};

::uint8_t* CDKeyEvents::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.CDKeyEvents)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID msgid = 1 [default = eInsertCDKeyEvents];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional string sql_str = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_sql_str();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.CDKeyEvents.sql_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.CDKeyEvents)
  return target;
}

::size_t CDKeyEvents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.CDKeyEvents)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string sql_str = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sql_str());
    }

    // optional .CSToDB.MsgID msgid = 1 [default = eInsertCDKeyEvents];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CDKeyEvents::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CDKeyEvents*>(&to_msg);
  auto& from = static_cast<const CDKeyEvents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.CDKeyEvents)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_sql_str(from._internal_sql_str());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDKeyEvents::CopyFrom(const CDKeyEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.CDKeyEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDKeyEvents::IsInitialized() const {
  return true;
}

void CDKeyEvents::InternalSwap(CDKeyEvents* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sql_str_, &other->_impl_.sql_str_, arena);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata CDKeyEvents::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[2]);
}
// ===================================================================

class UpdateUserMail::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateUserMail>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_._has_bits_);
};

UpdateUserMail::UpdateUserMail(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.UpdateUserMail)
}
UpdateUserMail::UpdateUserMail(
    ::google::protobuf::Arena* arena, const UpdateUserMail& from)
    : UpdateUserMail(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UpdateUserMail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msgid_{static_cast< ::CSToDB::MsgID >(117)} {}

inline void UpdateUserMail::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, objid_),
           0,
           offsetof(Impl_, cstate_) -
               offsetof(Impl_, objid_) +
               sizeof(Impl_::cstate_));
}
UpdateUserMail::~UpdateUserMail() {
  // @@protoc_insertion_point(destructor:CSToDB.UpdateUserMail)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateUserMail::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateUserMail::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_._cached_size_),
              false,
          },
          &UpdateUserMail::MergeImpl,
          &UpdateUserMail::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UpdateUserMail::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.UpdateUserMail)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.objid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cstate_) -
        reinterpret_cast<char*>(&_impl_.objid_)) + sizeof(_impl_.cstate_));
    _impl_.msgid_ = 117;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateUserMail::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> UpdateUserMail::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateUserMail_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::UpdateUserMail>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 cstate = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateUserMail, _impl_.cstate_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_.cstate_)}},
    // optional .CSToDB.MsgID msgid = 1 [default = eUpdateUserGameMail_DBCallBack];
    {::_pbi::TcParser::FastErS1,
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_.msgid_)}},
    // optional int64 objid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UpdateUserMail, _impl_.objid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_.objid_)}},
    // optional int32 mailid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateUserMail, _impl_.mailid_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_.mailid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID msgid = 1 [default = eUpdateUserGameMail_DBCallBack];
    {PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_.msgid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int64 objid = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_.objid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 mailid = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_.mailid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 cstate = 4;
    {PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_.cstate_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {100, 21},
  }}, {{
  }},
};

::uint8_t* UpdateUserMail::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.UpdateUserMail)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID msgid = 1 [default = eUpdateUserGameMail_DBCallBack];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional int64 objid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_objid(), target);
  }

  // optional int32 mailid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_mailid(), target);
  }

  // optional int32 cstate = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_cstate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.UpdateUserMail)
  return target;
}

::size_t UpdateUserMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.UpdateUserMail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int64 objid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_objid());
    }

    // optional int32 mailid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_mailid());
    }

    // optional int32 cstate = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_cstate());
    }

    // optional .CSToDB.MsgID msgid = 1 [default = eUpdateUserGameMail_DBCallBack];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpdateUserMail::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateUserMail*>(&to_msg);
  auto& from = static_cast<const UpdateUserMail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.UpdateUserMail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.objid_ = from._impl_.objid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mailid_ = from._impl_.mailid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.cstate_ = from._impl_.cstate_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateUserMail::CopyFrom(const UpdateUserMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.UpdateUserMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateUserMail::IsInitialized() const {
  return true;
}

void UpdateUserMail::InternalSwap(UpdateUserMail* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_.msgid_)
      + sizeof(UpdateUserMail::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(UpdateUserMail, _impl_.objid_)>(
          reinterpret_cast<char*>(&_impl_.objid_),
          reinterpret_cast<char*>(&other->_impl_.objid_));
}

::google::protobuf::Metadata UpdateUserMail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[3]);
}
// ===================================================================

class StoreUserdata_SUserHeroDBData::_Internal {
 public:
  using HasBits = decltype(std::declval<StoreUserdata_SUserHeroDBData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserHeroDBData, _impl_._has_bits_);
};

StoreUserdata_SUserHeroDBData::StoreUserdata_SUserHeroDBData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.StoreUserdata.SUserHeroDBData)
}
StoreUserdata_SUserHeroDBData::StoreUserdata_SUserHeroDBData(
    ::google::protobuf::Arena* arena, const StoreUserdata_SUserHeroDBData& from)
    : StoreUserdata_SUserHeroDBData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StoreUserdata_SUserHeroDBData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StoreUserdata_SUserHeroDBData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, endtime_),
           0,
           offsetof(Impl_, un32heroid_) -
               offsetof(Impl_, endtime_) +
               sizeof(Impl_::un32heroid_));
}
StoreUserdata_SUserHeroDBData::~StoreUserdata_SUserHeroDBData() {
  // @@protoc_insertion_point(destructor:CSToDB.StoreUserdata.SUserHeroDBData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StoreUserdata_SUserHeroDBData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StoreUserdata_SUserHeroDBData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserHeroDBData, _impl_._cached_size_),
              false,
          },
          &StoreUserdata_SUserHeroDBData::MergeImpl,
          &StoreUserdata_SUserHeroDBData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void StoreUserdata_SUserHeroDBData::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.StoreUserdata.SUserHeroDBData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.endtime_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.un32heroid_) -
        reinterpret_cast<char*>(&_impl_.endtime_)) + sizeof(_impl_.un32heroid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StoreUserdata_SUserHeroDBData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> StoreUserdata_SUserHeroDBData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserHeroDBData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StoreUserdata_SUserHeroDBData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::StoreUserdata_SUserHeroDBData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 un32HeroID = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata_SUserHeroDBData, _impl_.un32heroid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserHeroDBData, _impl_.un32heroid_)}},
    // optional int64 endTime = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata_SUserHeroDBData, _impl_.endtime_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserHeroDBData, _impl_.endtime_)}},
    // optional int64 buyTime = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata_SUserHeroDBData, _impl_.buytime_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserHeroDBData, _impl_.buytime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 un32HeroID = 1;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserHeroDBData, _impl_.un32heroid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 endTime = 2;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserHeroDBData, _impl_.endtime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 buyTime = 3;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserHeroDBData, _impl_.buytime_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StoreUserdata_SUserHeroDBData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.StoreUserdata.SUserHeroDBData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 un32HeroID = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_un32heroid(), target);
  }

  // optional int64 endTime = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_endtime(), target);
  }

  // optional int64 buyTime = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_buytime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.StoreUserdata.SUserHeroDBData)
  return target;
}

::size_t StoreUserdata_SUserHeroDBData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.StoreUserdata.SUserHeroDBData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 endTime = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_endtime());
    }

    // optional int64 buyTime = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_buytime());
    }

    // optional int32 un32HeroID = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_un32heroid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StoreUserdata_SUserHeroDBData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StoreUserdata_SUserHeroDBData*>(&to_msg);
  auto& from = static_cast<const StoreUserdata_SUserHeroDBData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.StoreUserdata.SUserHeroDBData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.endtime_ = from._impl_.endtime_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.buytime_ = from._impl_.buytime_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.un32heroid_ = from._impl_.un32heroid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StoreUserdata_SUserHeroDBData::CopyFrom(const StoreUserdata_SUserHeroDBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.StoreUserdata.SUserHeroDBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StoreUserdata_SUserHeroDBData::IsInitialized() const {
  return true;
}

void StoreUserdata_SUserHeroDBData::InternalSwap(StoreUserdata_SUserHeroDBData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserHeroDBData, _impl_.un32heroid_)
      + sizeof(StoreUserdata_SUserHeroDBData::_impl_.un32heroid_)
      - PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserHeroDBData, _impl_.endtime_)>(
          reinterpret_cast<char*>(&_impl_.endtime_),
          reinterpret_cast<char*>(&other->_impl_.endtime_));
}

::google::protobuf::Metadata StoreUserdata_SUserHeroDBData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[4]);
}
// ===================================================================

class StoreUserdata_SUserRelationshipInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<StoreUserdata_SUserRelationshipInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_._has_bits_);
};

StoreUserdata_SUserRelationshipInfo::StoreUserdata_SUserRelationshipInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.StoreUserdata.SUserRelationshipInfo)
}
inline PROTOBUF_NDEBUG_INLINE StoreUserdata_SUserRelationshipInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        stnickname_(arena, from.stnickname_) {}

StoreUserdata_SUserRelationshipInfo::StoreUserdata_SUserRelationshipInfo(
    ::google::protobuf::Arena* arena,
    const StoreUserdata_SUserRelationshipInfo& from)
    : ::google::protobuf::Message(arena) {
  StoreUserdata_SUserRelationshipInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guididx_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, guididx_),
           offsetof(Impl_, tmilsec_) -
               offsetof(Impl_, guididx_) +
               sizeof(Impl_::tmilsec_));

  // @@protoc_insertion_point(copy_constructor:CSToDB.StoreUserdata.SUserRelationshipInfo)
}
inline PROTOBUF_NDEBUG_INLINE StoreUserdata_SUserRelationshipInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        stnickname_(arena) {}

inline void StoreUserdata_SUserRelationshipInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guididx_),
           0,
           offsetof(Impl_, tmilsec_) -
               offsetof(Impl_, guididx_) +
               sizeof(Impl_::tmilsec_));
}
StoreUserdata_SUserRelationshipInfo::~StoreUserdata_SUserRelationshipInfo() {
  // @@protoc_insertion_point(destructor:CSToDB.StoreUserdata.SUserRelationshipInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StoreUserdata_SUserRelationshipInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.stnickname_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StoreUserdata_SUserRelationshipInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_._cached_size_),
              false,
          },
          &StoreUserdata_SUserRelationshipInfo::MergeImpl,
          &StoreUserdata_SUserRelationshipInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void StoreUserdata_SUserRelationshipInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.StoreUserdata.SUserRelationshipInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.stnickname_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.guididx_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tmilsec_) -
        reinterpret_cast<char*>(&_impl_.guididx_)) + sizeof(_impl_.tmilsec_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StoreUserdata_SUserRelationshipInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 61, 2> StoreUserdata_SUserRelationshipInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StoreUserdata_SUserRelationshipInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::StoreUserdata_SUserRelationshipInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string stNickName = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.stnickname_)}},
    // optional int32 nHeadId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata_SUserRelationshipInfo, _impl_.nheadid_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.nheadid_)}},
    // optional int64 guididx = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata_SUserRelationshipInfo, _impl_.guididx_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.guididx_)}},
    // optional int32 eRelationShip = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata_SUserRelationshipInfo, _impl_.erelationship_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.erelationship_)}},
    // optional int64 tMilSec = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata_SUserRelationshipInfo, _impl_.tmilsec_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.tmilsec_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string stNickName = 1;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.stnickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 nHeadId = 2;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.nheadid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 guididx = 3;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.guididx_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 eRelationShip = 4;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.erelationship_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 tMilSec = 5;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.tmilsec_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\52\12\0\0\0\0\0\0"
    "CSToDB.StoreUserdata.SUserRelationshipInfo"
    "stNickName"
  }},
};

::uint8_t* StoreUserdata_SUserRelationshipInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.StoreUserdata.SUserRelationshipInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string stNickName = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_stnickname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.StoreUserdata.SUserRelationshipInfo.stNickName");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int32 nHeadId = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_nheadid(), target);
  }

  // optional int64 guididx = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_guididx(), target);
  }

  // optional int32 eRelationShip = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_erelationship(), target);
  }

  // optional int64 tMilSec = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_tmilsec(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.StoreUserdata.SUserRelationshipInfo)
  return target;
}

::size_t StoreUserdata_SUserRelationshipInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.StoreUserdata.SUserRelationshipInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string stNickName = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_stnickname());
    }

    // optional int64 guididx = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_guididx());
    }

    // optional int32 nHeadId = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_nheadid());
    }

    // optional int32 eRelationShip = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_erelationship());
    }

    // optional int64 tMilSec = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_tmilsec());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StoreUserdata_SUserRelationshipInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StoreUserdata_SUserRelationshipInfo*>(&to_msg);
  auto& from = static_cast<const StoreUserdata_SUserRelationshipInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.StoreUserdata.SUserRelationshipInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_stnickname(from._internal_stnickname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guididx_ = from._impl_.guididx_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.nheadid_ = from._impl_.nheadid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.erelationship_ = from._impl_.erelationship_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.tmilsec_ = from._impl_.tmilsec_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StoreUserdata_SUserRelationshipInfo::CopyFrom(const StoreUserdata_SUserRelationshipInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.StoreUserdata.SUserRelationshipInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StoreUserdata_SUserRelationshipInfo::IsInitialized() const {
  return true;
}

void StoreUserdata_SUserRelationshipInfo::InternalSwap(StoreUserdata_SUserRelationshipInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stnickname_, &other->_impl_.stnickname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.tmilsec_)
      + sizeof(StoreUserdata_SUserRelationshipInfo::_impl_.tmilsec_)
      - PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserRelationshipInfo, _impl_.guididx_)>(
          reinterpret_cast<char*>(&_impl_.guididx_),
          reinterpret_cast<char*>(&other->_impl_.guididx_));
}

::google::protobuf::Metadata StoreUserdata_SUserRelationshipInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[5]);
}
// ===================================================================

class StoreUserdata_SUserItemInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<StoreUserdata_SUserItemInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_._has_bits_);
};

StoreUserdata_SUserItemInfo::StoreUserdata_SUserItemInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.StoreUserdata.SUserItemInfo)
}
StoreUserdata_SUserItemInfo::StoreUserdata_SUserItemInfo(
    ::google::protobuf::Arena* arena, const StoreUserdata_SUserItemInfo& from)
    : StoreUserdata_SUserItemInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StoreUserdata_SUserItemInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StoreUserdata_SUserItemInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, item_id_),
           0,
           offsetof(Impl_, n32effectid_) -
               offsetof(Impl_, item_id_) +
               sizeof(Impl_::n32effectid_));
}
StoreUserdata_SUserItemInfo::~StoreUserdata_SUserItemInfo() {
  // @@protoc_insertion_point(destructor:CSToDB.StoreUserdata.SUserItemInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StoreUserdata_SUserItemInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StoreUserdata_SUserItemInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_._cached_size_),
              false,
          },
          &StoreUserdata_SUserItemInfo::MergeImpl,
          &StoreUserdata_SUserItemInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void StoreUserdata_SUserItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.StoreUserdata.SUserItemInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&_impl_.item_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.n32effectid_) -
        reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.n32effectid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StoreUserdata_SUserItemInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> StoreUserdata_SUserItemInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967056,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StoreUserdata_SUserItemInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::StoreUserdata_SUserItemInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 n32EffectID = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata_SUserItemInfo, _impl_.n32effectid_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.n32effectid_)}},
    // optional int32 item_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata_SUserItemInfo, _impl_.item_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.item_id_)}},
    // optional bool ifusing = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StoreUserdata_SUserItemInfo, _impl_.ifusing_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.ifusing_)}},
    // optional int32 item_num = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata_SUserItemInfo, _impl_.item_num_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.item_num_)}},
    // optional int64 buy_time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata_SUserItemInfo, _impl_.buy_time_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.buy_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 end_time = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata_SUserItemInfo, _impl_.end_time_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.end_time_)}},
    // optional int32 n32EffectValue = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata_SUserItemInfo, _impl_.n32effectvalue_), 4>(),
     {56, 4, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.n32effectvalue_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 item_id = 1;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.item_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool ifusing = 2;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.ifusing_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 item_num = 3;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.item_num_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 buy_time = 4;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.buy_time_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 end_time = 6;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.end_time_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 n32EffectValue = 7;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.n32effectvalue_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 n32EffectID = 8;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.n32effectid_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StoreUserdata_SUserItemInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.StoreUserdata.SUserItemInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_item_id(), target);
  }

  // optional bool ifusing = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_ifusing(), target);
  }

  // optional int32 item_num = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_item_num(), target);
  }

  // optional int64 buy_time = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_buy_time(), target);
  }

  // optional int64 end_time = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_end_time(), target);
  }

  // optional int32 n32EffectValue = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_n32effectvalue(), target);
  }

  // optional int32 n32EffectID = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_n32effectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.StoreUserdata.SUserItemInfo)
  return target;
}

::size_t StoreUserdata_SUserItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.StoreUserdata.SUserItemInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional int32 item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_item_id());
    }

    // optional bool ifusing = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional int64 buy_time = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_buy_time());
    }

    // optional int32 item_num = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_item_num());
    }

    // optional int32 n32EffectValue = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_n32effectvalue());
    }

    // optional int64 end_time = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_end_time());
    }

    // optional int32 n32EffectID = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_n32effectid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StoreUserdata_SUserItemInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StoreUserdata_SUserItemInfo*>(&to_msg);
  auto& from = static_cast<const StoreUserdata_SUserItemInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.StoreUserdata.SUserItemInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.item_id_ = from._impl_.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ifusing_ = from._impl_.ifusing_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.buy_time_ = from._impl_.buy_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.item_num_ = from._impl_.item_num_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.n32effectvalue_ = from._impl_.n32effectvalue_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.end_time_ = from._impl_.end_time_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.n32effectid_ = from._impl_.n32effectid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StoreUserdata_SUserItemInfo::CopyFrom(const StoreUserdata_SUserItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.StoreUserdata.SUserItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StoreUserdata_SUserItemInfo::IsInitialized() const {
  return true;
}

void StoreUserdata_SUserItemInfo::InternalSwap(StoreUserdata_SUserItemInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.n32effectid_)
      + sizeof(StoreUserdata_SUserItemInfo::_impl_.n32effectid_)
      - PROTOBUF_FIELD_OFFSET(StoreUserdata_SUserItemInfo, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
}

::google::protobuf::Metadata StoreUserdata_SUserItemInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[6]);
}
// ===================================================================

class StoreUserdata_UserMailDBData::_Internal {
 public:
  using HasBits = decltype(std::declval<StoreUserdata_UserMailDBData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StoreUserdata_UserMailDBData, _impl_._has_bits_);
};

StoreUserdata_UserMailDBData::StoreUserdata_UserMailDBData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.StoreUserdata.UserMailDBData)
}
StoreUserdata_UserMailDBData::StoreUserdata_UserMailDBData(
    ::google::protobuf::Arena* arena, const StoreUserdata_UserMailDBData& from)
    : StoreUserdata_UserMailDBData(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StoreUserdata_UserMailDBData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StoreUserdata_UserMailDBData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mailid_),
           0,
           offsetof(Impl_, mstate_) -
               offsetof(Impl_, mailid_) +
               sizeof(Impl_::mstate_));
}
StoreUserdata_UserMailDBData::~StoreUserdata_UserMailDBData() {
  // @@protoc_insertion_point(destructor:CSToDB.StoreUserdata.UserMailDBData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StoreUserdata_UserMailDBData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StoreUserdata_UserMailDBData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(StoreUserdata_UserMailDBData, _impl_._cached_size_),
              false,
          },
          &StoreUserdata_UserMailDBData::MergeImpl,
          &StoreUserdata_UserMailDBData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void StoreUserdata_UserMailDBData::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.StoreUserdata.UserMailDBData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.mailid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.mstate_) -
        reinterpret_cast<char*>(&_impl_.mailid_)) + sizeof(_impl_.mstate_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StoreUserdata_UserMailDBData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> StoreUserdata_UserMailDBData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StoreUserdata_UserMailDBData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StoreUserdata_UserMailDBData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::StoreUserdata_UserMailDBData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 mState = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata_UserMailDBData, _impl_.mstate_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_UserMailDBData, _impl_.mstate_)}},
    // optional int32 mailId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata_UserMailDBData, _impl_.mailid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata_UserMailDBData, _impl_.mailid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 mailId = 1;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_UserMailDBData, _impl_.mailid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 mState = 2;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata_UserMailDBData, _impl_.mstate_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* StoreUserdata_UserMailDBData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.StoreUserdata.UserMailDBData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 mailId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_mailid(), target);
  }

  // optional int32 mState = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_mstate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.StoreUserdata.UserMailDBData)
  return target;
}

::size_t StoreUserdata_UserMailDBData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.StoreUserdata.UserMailDBData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 mailId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_mailid());
    }

    // optional int32 mState = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_mstate());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StoreUserdata_UserMailDBData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StoreUserdata_UserMailDBData*>(&to_msg);
  auto& from = static_cast<const StoreUserdata_UserMailDBData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.StoreUserdata.UserMailDBData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.mailid_ = from._impl_.mailid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mstate_ = from._impl_.mstate_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StoreUserdata_UserMailDBData::CopyFrom(const StoreUserdata_UserMailDBData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.StoreUserdata.UserMailDBData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StoreUserdata_UserMailDBData::IsInitialized() const {
  return true;
}

void StoreUserdata_UserMailDBData::InternalSwap(StoreUserdata_UserMailDBData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StoreUserdata_UserMailDBData, _impl_.mstate_)
      + sizeof(StoreUserdata_UserMailDBData::_impl_.mstate_)
      - PROTOBUF_FIELD_OFFSET(StoreUserdata_UserMailDBData, _impl_.mailid_)>(
          reinterpret_cast<char*>(&_impl_.mailid_),
          reinterpret_cast<char*>(&other->_impl_.mailid_));
}

::google::protobuf::Metadata StoreUserdata_UserMailDBData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[7]);
}
// ===================================================================

class StoreUserdata::_Internal {
 public:
  using HasBits = decltype(std::declval<StoreUserdata>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_._has_bits_);
};

StoreUserdata::StoreUserdata(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.StoreUserdata)
}
inline PROTOBUF_NDEBUG_INLINE StoreUserdata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ssuserherodbdata_{visibility, arena, from.ssuserherodbdata_},
        friendlist_{visibility, arena, from.friendlist_},
        blacklist_{visibility, arena, from.blacklist_},
        itemlist_{visibility, arena, from.itemlist_},
        maillist_{visibility, arena, from.maillist_},
        tlastgetloginreward_(arena, from.tlastgetloginreward_),
        mguidesteps_(arena, from.mguidesteps_),
        nickname_(arena, from.nickname_),
        username_(arena, from.username_),
        pwd_(arena, from.pwd_),
        runestr_(arena, from.runestr_),
        slotstr_(arena, from.slotstr_) {}

StoreUserdata::StoreUserdata(
    ::google::protobuf::Arena* arena,
    const StoreUserdata& from)
    : ::google::protobuf::Message(arena) {
  StoreUserdata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, un64objidx_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, un64objidx_),
           offsetof(Impl_, vipscore_) -
               offsetof(Impl_, un64objidx_) +
               sizeof(Impl_::vipscore_));

  // @@protoc_insertion_point(copy_constructor:CSToDB.StoreUserdata)
}
inline PROTOBUF_NDEBUG_INLINE StoreUserdata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ssuserherodbdata_{visibility, arena},
        friendlist_{visibility, arena},
        blacklist_{visibility, arena},
        itemlist_{visibility, arena},
        maillist_{visibility, arena},
        tlastgetloginreward_(arena),
        mguidesteps_(arena),
        nickname_(arena),
        username_(arena),
        pwd_(arena),
        runestr_(arena),
        slotstr_(arena) {}

inline void StoreUserdata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, un64objidx_),
           0,
           offsetof(Impl_, vipscore_) -
               offsetof(Impl_, un64objidx_) +
               sizeof(Impl_::vipscore_));
}
StoreUserdata::~StoreUserdata() {
  // @@protoc_insertion_point(destructor:CSToDB.StoreUserdata)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StoreUserdata::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tlastgetloginreward_.Destroy();
  _impl_.mguidesteps_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.username_.Destroy();
  _impl_.pwd_.Destroy();
  _impl_.runestr_.Destroy();
  _impl_.slotstr_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StoreUserdata::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_._cached_size_),
              false,
          },
          &StoreUserdata::MergeImpl,
          &StoreUserdata::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void StoreUserdata::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.StoreUserdata)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ssuserherodbdata_.Clear();
  _impl_.friendlist_.Clear();
  _impl_.blacklist_.Clear();
  _impl_.itemlist_.Clear();
  _impl_.maillist_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.tlastgetloginreward_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.mguidesteps_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.nickname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.pwd_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.runestr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      _impl_.slotstr_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.un64objidx_ = ::int64_t{0};
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.euserplatform_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tlastloginutcmillisec_) -
        reinterpret_cast<char*>(&_impl_.euserplatform_)) + sizeof(_impl_.tlastloginutcmillisec_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.tlastlogoututctime_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.un16userlv_) -
        reinterpret_cast<char*>(&_impl_.tlastlogoututctime_)) + sizeof(_impl_.un16userlv_));
  }
  if (cached_has_bits & 0x1f000000u) {
    ::memset(&_impl_.tlastfirstwintime_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.vipscore_) -
        reinterpret_cast<char*>(&_impl_.tlastfirstwintime_)) + sizeof(_impl_.vipscore_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StoreUserdata::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 34, 5, 124, 7> StoreUserdata::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_._has_bits_),
    0, // no _extensions_
    34, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    34,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StoreUserdata_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::StoreUserdata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 un64ObjIdx = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata, _impl_.un64objidx_), 7>(),
     {8, 7, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un64objidx_)}},
    // optional int32 eUserPlatform = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata, _impl_.euserplatform_), 8>(),
     {16, 8, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.euserplatform_)}},
    // optional int32 un32HeaderID = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata, _impl_.un32headerid_), 9>(),
     {24, 9, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32headerid_)}},
    // optional int32 n8Sex = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata, _impl_.n8sex_), 13>(),
     {32, 13, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.n8sex_)}},
    // optional int64 n64Diamond = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata, _impl_.n64diamond_), 10>(),
     {40, 10, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.n64diamond_)}},
    // optional int64 n64Gold = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata, _impl_.n64gold_), 11>(),
     {48, 11, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.n64gold_)}},
    // optional int64 tRegisteUTCMillisec = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata, _impl_.tregisteutcmillisec_), 12>(),
     {56, 12, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.tregisteutcmillisec_)}},
    // optional int64 tLastLoginUTCMillisec = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata, _impl_.tlastloginutcmillisec_), 15>(),
     {64, 15, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.tlastloginutcmillisec_)}},
    // optional int64 tLastLogOutUTCTime = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata, _impl_.tlastlogoututctime_), 16>(),
     {72, 16, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.tlastlogoututctime_)}},
    // optional int64 n64Score = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StoreUserdata, _impl_.n64score_), 17>(),
     {80, 17, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.n64score_)}},
    // optional int32 un32TotalGameInns = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata, _impl_.un32totalgameinns_), 14>(),
     {88, 14, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totalgameinns_)}},
    // optional int32 un32TotalWinInns = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata, _impl_.un32totalwininns_), 18>(),
     {96, 18, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totalwininns_)}},
    // optional int32 un32TotalHeroKills = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata, _impl_.un32totalherokills_), 19>(),
     {104, 19, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totalherokills_)}},
    // optional int32 un32TotalDestoryBuildings = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata, _impl_.un32totaldestorybuildings_), 20>(),
     {112, 20, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totaldestorybuildings_)}},
    // optional int32 un32TotalDeadTimes = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StoreUserdata, _impl_.un32totaldeadtimes_), 21>(),
     {120, 21, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totaldeadtimes_)}},
    // optional int32 un32TotalAssist = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 22, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totalassist_)}},
    // optional int32 un16UserLv = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 23, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un16userlv_)}},
    // optional int32 un32UserCurLvExp = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 25, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32usercurlvexp_)}},
    // optional int64 tLastFirstWinTime = 19;
    {::_pbi::TcParser::FastV64S2,
     {408, 24, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.tlastfirstwintime_)}},
    // optional int32 un16Cldays = 20;
    {::_pbi::TcParser::FastV32S2,
     {416, 26, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un16cldays_)}},
    // optional string tLastGetLoginReward = 21;
    {::_pbi::TcParser::FastSS2,
     {426, 0, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.tlastgetloginreward_)}},
    // optional int32 un16VipLv = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 27, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un16viplv_)}},
    // optional int32 vipScore = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 28, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.vipscore_)}},
    // optional string mGuideSteps = 24;
    {::_pbi::TcParser::FastSS2,
     {450, 1, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.mguidesteps_)}},
    // repeated .CSToDB.StoreUserdata.SUserHeroDBData sSUserHeroDBData = 25;
    {::_pbi::TcParser::FastMtR2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.ssuserherodbdata_)}},
    // repeated .CSToDB.StoreUserdata.SUserRelationshipInfo friendList = 26;
    {::_pbi::TcParser::FastMtR2,
     {466, 63, 1, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.friendlist_)}},
    // repeated .CSToDB.StoreUserdata.SUserRelationshipInfo blackList = 27;
    {::_pbi::TcParser::FastMtR2,
     {474, 63, 2, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.blacklist_)}},
    // repeated .CSToDB.StoreUserdata.SUserItemInfo itemlist = 28;
    {::_pbi::TcParser::FastMtR2,
     {482, 63, 3, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.itemlist_)}},
    // repeated .CSToDB.StoreUserdata.UserMailDBData mailList = 29;
    {::_pbi::TcParser::FastMtR2,
     {490, 63, 4, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.maillist_)}},
    // optional string nickname = 30;
    {::_pbi::TcParser::FastSS2,
     {498, 2, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.nickname_)}},
    // optional string username = 31;
    {::_pbi::TcParser::FastSS2,
     {506, 3, 0, PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.username_)}},
  }}, {{
    33, 0, 1,
    65532, 32,
    65535, 65535
  }}, {{
    // optional int64 un64ObjIdx = 1;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un64objidx_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 eUserPlatform = 2;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.euserplatform_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 un32HeaderID = 3;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32headerid_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 n8Sex = 4;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.n8sex_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 n64Diamond = 5;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.n64diamond_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 n64Gold = 6;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.n64gold_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 tRegisteUTCMillisec = 7;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.tregisteutcmillisec_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 tLastLoginUTCMillisec = 8;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.tlastloginutcmillisec_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 tLastLogOutUTCTime = 9;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.tlastlogoututctime_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 n64Score = 10;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.n64score_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 un32TotalGameInns = 11;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totalgameinns_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 un32TotalWinInns = 12;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totalwininns_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 un32TotalHeroKills = 13;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totalherokills_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 un32TotalDestoryBuildings = 14;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totaldestorybuildings_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 un32TotalDeadTimes = 15;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totaldeadtimes_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 un32TotalAssist = 16;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32totalassist_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 un16UserLv = 17;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un16userlv_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 un32UserCurLvExp = 18;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un32usercurlvexp_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 tLastFirstWinTime = 19;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.tlastfirstwintime_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 un16Cldays = 20;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un16cldays_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string tLastGetLoginReward = 21;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.tlastgetloginreward_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 un16VipLv = 22;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un16viplv_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 vipScore = 23;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.vipscore_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string mGuideSteps = 24;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.mguidesteps_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .CSToDB.StoreUserdata.SUserHeroDBData sSUserHeroDBData = 25;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.ssuserherodbdata_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CSToDB.StoreUserdata.SUserRelationshipInfo friendList = 26;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.friendlist_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CSToDB.StoreUserdata.SUserRelationshipInfo blackList = 27;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.blacklist_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CSToDB.StoreUserdata.SUserItemInfo itemlist = 28;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.itemlist_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CSToDB.StoreUserdata.UserMailDBData mailList = 29;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.maillist_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string nickname = 30;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.nickname_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string username = 31;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.username_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string pwd = 32;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.pwd_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string runestr = 33;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.runestr_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string slotstr = 34;
    {PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.slotstr_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CSToDB::StoreUserdata_SUserHeroDBData>()},
    {::_pbi::TcParser::GetTable<::CSToDB::StoreUserdata_SUserRelationshipInfo>()},
    {::_pbi::TcParser::GetTable<::CSToDB::StoreUserdata_SUserRelationshipInfo>()},
    {::_pbi::TcParser::GetTable<::CSToDB::StoreUserdata_SUserItemInfo>()},
    {::_pbi::TcParser::GetTable<::CSToDB::StoreUserdata_UserMailDBData>()},
  }}, {{
    "\24\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\23\0\0\13\0\0\0\0\0\10\10\3\7\7\0\0\0\0\0"
    "CSToDB.StoreUserdata"
    "tLastGetLoginReward"
    "mGuideSteps"
    "nickname"
    "username"
    "pwd"
    "runestr"
    "slotstr"
  }},
};

::uint8_t* StoreUserdata::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.StoreUserdata)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 un64ObjIdx = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_un64objidx(), target);
  }

  // optional int32 eUserPlatform = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_euserplatform(), target);
  }

  // optional int32 un32HeaderID = 3;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_un32headerid(), target);
  }

  // optional int32 n8Sex = 4;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_n8sex(), target);
  }

  // optional int64 n64Diamond = 5;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_n64diamond(), target);
  }

  // optional int64 n64Gold = 6;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_n64gold(), target);
  }

  // optional int64 tRegisteUTCMillisec = 7;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_tregisteutcmillisec(), target);
  }

  // optional int64 tLastLoginUTCMillisec = 8;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_tlastloginutcmillisec(), target);
  }

  // optional int64 tLastLogOutUTCTime = 9;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<9>(
            stream, this->_internal_tlastlogoututctime(), target);
  }

  // optional int64 n64Score = 10;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<10>(
            stream, this->_internal_n64score(), target);
  }

  // optional int32 un32TotalGameInns = 11;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_un32totalgameinns(), target);
  }

  // optional int32 un32TotalWinInns = 12;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<12>(
            stream, this->_internal_un32totalwininns(), target);
  }

  // optional int32 un32TotalHeroKills = 13;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_un32totalherokills(), target);
  }

  // optional int32 un32TotalDestoryBuildings = 14;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<14>(
            stream, this->_internal_un32totaldestorybuildings(), target);
  }

  // optional int32 un32TotalDeadTimes = 15;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<15>(
            stream, this->_internal_un32totaldeadtimes(), target);
  }

  // optional int32 un32TotalAssist = 16;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        16, this->_internal_un32totalassist(), target);
  }

  // optional int32 un16UserLv = 17;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this->_internal_un16userlv(), target);
  }

  // optional int32 un32UserCurLvExp = 18;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        18, this->_internal_un32usercurlvexp(), target);
  }

  // optional int64 tLastFirstWinTime = 19;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        19, this->_internal_tlastfirstwintime(), target);
  }

  // optional int32 un16Cldays = 20;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        20, this->_internal_un16cldays(), target);
  }

  // optional string tLastGetLoginReward = 21;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_tlastgetloginreward();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.StoreUserdata.tLastGetLoginReward");
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  // optional int32 un16VipLv = 22;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        22, this->_internal_un16viplv(), target);
  }

  // optional int32 vipScore = 23;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        23, this->_internal_vipscore(), target);
  }

  // optional string mGuideSteps = 24;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_mguidesteps();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.StoreUserdata.mGuideSteps");
    target = stream->WriteStringMaybeAliased(24, _s, target);
  }

  // repeated .CSToDB.StoreUserdata.SUserHeroDBData sSUserHeroDBData = 25;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ssuserherodbdata_size()); i < n; i++) {
    const auto& repfield = this->_internal_ssuserherodbdata().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(25, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CSToDB.StoreUserdata.SUserRelationshipInfo friendList = 26;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_friendlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_friendlist().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(26, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CSToDB.StoreUserdata.SUserRelationshipInfo blackList = 27;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_blacklist_size()); i < n; i++) {
    const auto& repfield = this->_internal_blacklist().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(27, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CSToDB.StoreUserdata.SUserItemInfo itemlist = 28;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_itemlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_itemlist().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(28, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .CSToDB.StoreUserdata.UserMailDBData mailList = 29;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_maillist_size()); i < n; i++) {
    const auto& repfield = this->_internal_maillist().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(29, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional string nickname = 30;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.StoreUserdata.nickname");
    target = stream->WriteStringMaybeAliased(30, _s, target);
  }

  // optional string username = 31;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.StoreUserdata.username");
    target = stream->WriteStringMaybeAliased(31, _s, target);
  }

  // optional string pwd = 32;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_pwd();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.StoreUserdata.pwd");
    target = stream->WriteStringMaybeAliased(32, _s, target);
  }

  // optional string runestr = 33;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_runestr();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.StoreUserdata.runestr");
    target = stream->WriteStringMaybeAliased(33, _s, target);
  }

  // optional string slotstr = 34;
  if (cached_has_bits & 0x00000040u) {
    const std::string& _s = this->_internal_slotstr();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.StoreUserdata.slotstr");
    target = stream->WriteStringMaybeAliased(34, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.StoreUserdata)
  return target;
}

::size_t StoreUserdata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.StoreUserdata)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSToDB.StoreUserdata.SUserHeroDBData sSUserHeroDBData = 25;
  total_size += 2UL * this->_internal_ssuserherodbdata_size();
  for (const auto& msg : this->_internal_ssuserherodbdata()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CSToDB.StoreUserdata.SUserRelationshipInfo friendList = 26;
  total_size += 2UL * this->_internal_friendlist_size();
  for (const auto& msg : this->_internal_friendlist()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CSToDB.StoreUserdata.SUserRelationshipInfo blackList = 27;
  total_size += 2UL * this->_internal_blacklist_size();
  for (const auto& msg : this->_internal_blacklist()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CSToDB.StoreUserdata.SUserItemInfo itemlist = 28;
  total_size += 2UL * this->_internal_itemlist_size();
  for (const auto& msg : this->_internal_itemlist()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .CSToDB.StoreUserdata.UserMailDBData mailList = 29;
  total_size += 2UL * this->_internal_maillist_size();
  for (const auto& msg : this->_internal_maillist()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string tLastGetLoginReward = 21;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_tlastgetloginreward());
    }

    // optional string mGuideSteps = 24;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_mguidesteps());
    }

    // optional string nickname = 30;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_nickname());
    }

    // optional string username = 31;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_username());
    }

    // optional string pwd = 32;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_pwd());
    }

    // optional string runestr = 33;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_runestr());
    }

    // optional string slotstr = 34;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_slotstr());
    }

    // optional int64 un64ObjIdx = 1;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_un64objidx());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int32 eUserPlatform = 2;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_euserplatform());
    }

    // optional int32 un32HeaderID = 3;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_un32headerid());
    }

    // optional int64 n64Diamond = 5;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_n64diamond());
    }

    // optional int64 n64Gold = 6;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_n64gold());
    }

    // optional int64 tRegisteUTCMillisec = 7;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_tregisteutcmillisec());
    }

    // optional int32 n8Sex = 4;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_n8sex());
    }

    // optional int32 un32TotalGameInns = 11;
    if (cached_has_bits & 0x00004000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_un32totalgameinns());
    }

    // optional int64 tLastLoginUTCMillisec = 8;
    if (cached_has_bits & 0x00008000u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_tlastloginutcmillisec());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional int64 tLastLogOutUTCTime = 9;
    if (cached_has_bits & 0x00010000u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_tlastlogoututctime());
    }

    // optional int64 n64Score = 10;
    if (cached_has_bits & 0x00020000u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_n64score());
    }

    // optional int32 un32TotalWinInns = 12;
    if (cached_has_bits & 0x00040000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_un32totalwininns());
    }

    // optional int32 un32TotalHeroKills = 13;
    if (cached_has_bits & 0x00080000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_un32totalherokills());
    }

    // optional int32 un32TotalDestoryBuildings = 14;
    if (cached_has_bits & 0x00100000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_un32totaldestorybuildings());
    }

    // optional int32 un32TotalDeadTimes = 15;
    if (cached_has_bits & 0x00200000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_un32totaldeadtimes());
    }

    // optional int32 un32TotalAssist = 16;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_un32totalassist());
    }

    // optional int32 un16UserLv = 17;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_un16userlv());
    }

  }
  if (cached_has_bits & 0x1f000000u) {
    // optional int64 tLastFirstWinTime = 19;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_tlastfirstwintime());
    }

    // optional int32 un32UserCurLvExp = 18;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_un32usercurlvexp());
    }

    // optional int32 un16Cldays = 20;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_un16cldays());
    }

    // optional int32 un16VipLv = 22;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_un16viplv());
    }

    // optional int32 vipScore = 23;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_vipscore());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StoreUserdata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StoreUserdata*>(&to_msg);
  auto& from = static_cast<const StoreUserdata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.StoreUserdata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ssuserherodbdata()->MergeFrom(
      from._internal_ssuserherodbdata());
  _this->_internal_mutable_friendlist()->MergeFrom(
      from._internal_friendlist());
  _this->_internal_mutable_blacklist()->MergeFrom(
      from._internal_blacklist());
  _this->_internal_mutable_itemlist()->MergeFrom(
      from._internal_itemlist());
  _this->_internal_mutable_maillist()->MergeFrom(
      from._internal_maillist());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_tlastgetloginreward(from._internal_tlastgetloginreward());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_mguidesteps(from._internal_mguidesteps());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_nickname(from._internal_nickname());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_username(from._internal_username());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_pwd(from._internal_pwd());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_runestr(from._internal_runestr());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_set_slotstr(from._internal_slotstr());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.un64objidx_ = from._impl_.un64objidx_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.euserplatform_ = from._impl_.euserplatform_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.un32headerid_ = from._impl_.un32headerid_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.n64diamond_ = from._impl_.n64diamond_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.n64gold_ = from._impl_.n64gold_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.tregisteutcmillisec_ = from._impl_.tregisteutcmillisec_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.n8sex_ = from._impl_.n8sex_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.un32totalgameinns_ = from._impl_.un32totalgameinns_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.tlastloginutcmillisec_ = from._impl_.tlastloginutcmillisec_;
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.tlastlogoututctime_ = from._impl_.tlastlogoututctime_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.n64score_ = from._impl_.n64score_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.un32totalwininns_ = from._impl_.un32totalwininns_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.un32totalherokills_ = from._impl_.un32totalherokills_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.un32totaldestorybuildings_ = from._impl_.un32totaldestorybuildings_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.un32totaldeadtimes_ = from._impl_.un32totaldeadtimes_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.un32totalassist_ = from._impl_.un32totalassist_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.un16userlv_ = from._impl_.un16userlv_;
    }
  }
  if (cached_has_bits & 0x1f000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.tlastfirstwintime_ = from._impl_.tlastfirstwintime_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.un32usercurlvexp_ = from._impl_.un32usercurlvexp_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.un16cldays_ = from._impl_.un16cldays_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.un16viplv_ = from._impl_.un16viplv_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.vipscore_ = from._impl_.vipscore_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StoreUserdata::CopyFrom(const StoreUserdata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.StoreUserdata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StoreUserdata::IsInitialized() const {
  return true;
}

void StoreUserdata::InternalSwap(StoreUserdata* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ssuserherodbdata_.InternalSwap(&other->_impl_.ssuserherodbdata_);
  _impl_.friendlist_.InternalSwap(&other->_impl_.friendlist_);
  _impl_.blacklist_.InternalSwap(&other->_impl_.blacklist_);
  _impl_.itemlist_.InternalSwap(&other->_impl_.itemlist_);
  _impl_.maillist_.InternalSwap(&other->_impl_.maillist_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tlastgetloginreward_, &other->_impl_.tlastgetloginreward_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mguidesteps_, &other->_impl_.mguidesteps_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pwd_, &other->_impl_.pwd_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.runestr_, &other->_impl_.runestr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.slotstr_, &other->_impl_.slotstr_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.vipscore_)
      + sizeof(StoreUserdata::_impl_.vipscore_)
      - PROTOBUF_FIELD_OFFSET(StoreUserdata, _impl_.un64objidx_)>(
          reinterpret_cast<char*>(&_impl_.un64objidx_),
          reinterpret_cast<char*>(&other->_impl_.un64objidx_));
}

::google::protobuf::Metadata StoreUserdata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[8]);
}
// ===================================================================

class QueryNotice::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryNotice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_._has_bits_);
};

QueryNotice::QueryNotice(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.QueryNotice)
}
QueryNotice::QueryNotice(
    ::google::protobuf::Arena* arena, const QueryNotice& from)
    : QueryNotice(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE QueryNotice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msgid_{static_cast< ::CSToDB::MsgID >(115)} {}

inline void QueryNotice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryNotice::~QueryNotice() {
  // @@protoc_insertion_point(destructor:CSToDB.QueryNotice)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryNotice::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QueryNotice::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_._cached_size_),
              false,
          },
          &QueryNotice::MergeImpl,
          &QueryNotice::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QueryNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.QueryNotice)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msgid_ = 115;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryNotice::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> QueryNotice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QueryNotice_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::QueryNotice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CSToDB.MsgID msgid = 1 [default = eQueryNotice_DBCall];
    {::_pbi::TcParser::FastErS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID msgid = 1 [default = eQueryNotice_DBCall];
    {PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_.msgid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {100, 21},
  }}, {{
  }},
};

::uint8_t* QueryNotice::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.QueryNotice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID msgid = 1 [default = eQueryNotice_DBCall];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.QueryNotice)
  return target;
}

::size_t QueryNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.QueryNotice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CSToDB.MsgID msgid = 1 [default = eQueryNotice_DBCall];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QueryNotice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryNotice*>(&to_msg);
  auto& from = static_cast<const QueryNotice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.QueryNotice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.msgid_ = from._impl_.msgid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryNotice::CopyFrom(const QueryNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.QueryNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryNotice::IsInitialized() const {
  return true;
}

void QueryNotice::InternalSwap(QueryNotice* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata QueryNotice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[9]);
}
// ===================================================================

class ExeSQL_Call::_Internal {
 public:
  using HasBits = decltype(std::declval<ExeSQL_Call>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ExeSQL_Call, _impl_._has_bits_);
};

ExeSQL_Call::ExeSQL_Call(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.ExeSQL_Call)
}
inline PROTOBUF_NDEBUG_INLINE ExeSQL_Call::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sql_(arena, from.sql_) {}

ExeSQL_Call::ExeSQL_Call(
    ::google::protobuf::Arena* arena,
    const ExeSQL_Call& from)
    : ::google::protobuf::Message(arena) {
  ExeSQL_Call* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.msgid_ = from._impl_.msgid_;

  // @@protoc_insertion_point(copy_constructor:CSToDB.ExeSQL_Call)
}
inline PROTOBUF_NDEBUG_INLINE ExeSQL_Call::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sql_(arena),
        msgid_{static_cast< ::CSToDB::MsgID >(114)} {}

inline void ExeSQL_Call::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExeSQL_Call::~ExeSQL_Call() {
  // @@protoc_insertion_point(destructor:CSToDB.ExeSQL_Call)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ExeSQL_Call::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sql_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ExeSQL_Call::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ExeSQL_Call, _impl_._cached_size_),
              false,
          },
          &ExeSQL_Call::MergeImpl,
          &ExeSQL_Call::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ExeSQL_Call::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.ExeSQL_Call)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.sql_.ClearNonDefaultToEmpty();
    }
    _impl_.msgid_ = 114;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ExeSQL_Call::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 30, 2> ExeSQL_Call::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExeSQL_Call, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ExeSQL_Call_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::ExeSQL_Call>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string sql = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ExeSQL_Call, _impl_.sql_)}},
    // optional .CSToDB.MsgID msgid = 1 [default = eExeSQL_Call];
    {::_pbi::TcParser::FastErS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ExeSQL_Call, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID msgid = 1 [default = eExeSQL_Call];
    {PROTOBUF_FIELD_OFFSET(ExeSQL_Call, _impl_.msgid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string sql = 2;
    {PROTOBUF_FIELD_OFFSET(ExeSQL_Call, _impl_.sql_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\22\0\3\0\0\0\0\0"
    "CSToDB.ExeSQL_Call"
    "sql"
  }},
};

::uint8_t* ExeSQL_Call::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.ExeSQL_Call)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID msgid = 1 [default = eExeSQL_Call];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional string sql = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_sql();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.ExeSQL_Call.sql");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.ExeSQL_Call)
  return target;
}

::size_t ExeSQL_Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.ExeSQL_Call)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string sql = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sql());
    }

    // optional .CSToDB.MsgID msgid = 1 [default = eExeSQL_Call];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ExeSQL_Call::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExeSQL_Call*>(&to_msg);
  auto& from = static_cast<const ExeSQL_Call&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.ExeSQL_Call)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_sql(from._internal_sql());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExeSQL_Call::CopyFrom(const ExeSQL_Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.ExeSQL_Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ExeSQL_Call::IsInitialized() const {
  return true;
}

void ExeSQL_Call::InternalSwap(ExeSQL_Call* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sql_, &other->_impl_.sql_, arena);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata ExeSQL_Call::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[10]);
}
// ===================================================================

class ChangeNickName::_Internal {
 public:
  using HasBits = decltype(std::declval<ChangeNickName>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChangeNickName, _impl_._has_bits_);
};

ChangeNickName::ChangeNickName(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.ChangeNickName)
}
inline PROTOBUF_NDEBUG_INLINE ChangeNickName::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        nickname_(arena, from.nickname_) {}

ChangeNickName::ChangeNickName(
    ::google::protobuf::Arena* arena,
    const ChangeNickName& from)
    : ::google::protobuf::Message(arena) {
  ChangeNickName* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, guid_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:CSToDB.ChangeNickName)
}
inline PROTOBUF_NDEBUG_INLINE ChangeNickName::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        nickname_(arena),
        msgid_{static_cast< ::CSToDB::MsgID >(113)} {}

inline void ChangeNickName::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.guid_ = {};
}
ChangeNickName::~ChangeNickName() {
  // @@protoc_insertion_point(destructor:CSToDB.ChangeNickName)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChangeNickName::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.nickname_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ChangeNickName::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ChangeNickName, _impl_._cached_size_),
              false,
          },
          &ChangeNickName::MergeImpl,
          &ChangeNickName::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ChangeNickName::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.ChangeNickName)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.nickname_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    _impl_.guid_ = ::int64_t{0};
    _impl_.msgid_ = 113;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChangeNickName::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 38, 2> ChangeNickName::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChangeNickName, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChangeNickName_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::ChangeNickName>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CSToDB.MsgID msgid = 1 [default = eChangeNickName_DBCall];
    {::_pbi::TcParser::FastErS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ChangeNickName, _impl_.msgid_)}},
    // optional string nickname = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ChangeNickName, _impl_.nickname_)}},
    // optional int64 guid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ChangeNickName, _impl_.guid_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(ChangeNickName, _impl_.guid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID msgid = 1 [default = eChangeNickName_DBCall];
    {PROTOBUF_FIELD_OFFSET(ChangeNickName, _impl_.msgid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string nickname = 2;
    {PROTOBUF_FIELD_OFFSET(ChangeNickName, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 guid = 3;
    {PROTOBUF_FIELD_OFFSET(ChangeNickName, _impl_.guid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }}, {{
    {100, 21},
  }}, {{
    "\25\0\10\0\0\0\0\0"
    "CSToDB.ChangeNickName"
    "nickname"
  }},
};

::uint8_t* ChangeNickName::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.ChangeNickName)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID msgid = 1 [default = eChangeNickName_DBCall];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional string nickname = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.ChangeNickName.nickname");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int64 guid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_guid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.ChangeNickName)
  return target;
}

::size_t ChangeNickName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.ChangeNickName)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string nickname = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_nickname());
    }

    // optional int64 guid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_guid());
    }

    // optional .CSToDB.MsgID msgid = 1 [default = eChangeNickName_DBCall];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ChangeNickName::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChangeNickName*>(&to_msg);
  auto& from = static_cast<const ChangeNickName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.ChangeNickName)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_nickname(from._internal_nickname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeNickName::CopyFrom(const ChangeNickName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.ChangeNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChangeNickName::IsInitialized() const {
  return true;
}

void ChangeNickName::InternalSwap(ChangeNickName* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChangeNickName, _impl_.msgid_)
      + sizeof(ChangeNickName::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(ChangeNickName, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata ChangeNickName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[11]);
}
// ===================================================================

class AlterItem::_Internal {
 public:
  using HasBits = decltype(std::declval<AlterItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AlterItem, _impl_._has_bits_);
};

AlterItem::AlterItem(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.AlterItem)
}
inline PROTOBUF_NDEBUG_INLINE AlterItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sql_str_(arena, from.sql_str_) {}

AlterItem::AlterItem(
    ::google::protobuf::Arena* arena,
    const AlterItem& from)
    : ::google::protobuf::Message(arena) {
  AlterItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.mgsid_ = from._impl_.mgsid_;

  // @@protoc_insertion_point(copy_constructor:CSToDB.AlterItem)
}
inline PROTOBUF_NDEBUG_INLINE AlterItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sql_str_(arena),
        mgsid_{static_cast< ::CSToDB::MsgID >(112)} {}

inline void AlterItem::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AlterItem::~AlterItem() {
  // @@protoc_insertion_point(destructor:CSToDB.AlterItem)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AlterItem::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sql_str_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AlterItem::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AlterItem, _impl_._cached_size_),
              false,
          },
          &AlterItem::MergeImpl,
          &AlterItem::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AlterItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.AlterItem)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.sql_str_.ClearNonDefaultToEmpty();
    }
    _impl_.mgsid_ = 112;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AlterItem::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 32, 2> AlterItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AlterItem, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AlterItem_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::AlterItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string sql_str = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AlterItem, _impl_.sql_str_)}},
    // optional .CSToDB.MsgID mgsid = 1 [default = eAlterItem_DBCall];
    {::_pbi::TcParser::FastErS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(AlterItem, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID mgsid = 1 [default = eAlterItem_DBCall];
    {PROTOBUF_FIELD_OFFSET(AlterItem, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string sql_str = 2;
    {PROTOBUF_FIELD_OFFSET(AlterItem, _impl_.sql_str_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\20\0\7\0\0\0\0\0"
    "CSToDB.AlterItem"
    "sql_str"
  }},
};

::uint8_t* AlterItem::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.AlterItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID mgsid = 1 [default = eAlterItem_DBCall];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional string sql_str = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_sql_str();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.AlterItem.sql_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.AlterItem)
  return target;
}

::size_t AlterItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.AlterItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string sql_str = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sql_str());
    }

    // optional .CSToDB.MsgID mgsid = 1 [default = eAlterItem_DBCall];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AlterItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AlterItem*>(&to_msg);
  auto& from = static_cast<const AlterItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.AlterItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_sql_str(from._internal_sql_str());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AlterItem::CopyFrom(const AlterItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.AlterItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AlterItem::IsInitialized() const {
  return true;
}

void AlterItem::InternalSwap(AlterItem* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sql_str_, &other->_impl_.sql_str_, arena);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata AlterItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[12]);
}
// ===================================================================

class DeleteNotice::_Internal {
 public:
  using HasBits = decltype(std::declval<DeleteNotice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeleteNotice, _impl_._has_bits_);
};

DeleteNotice::DeleteNotice(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.DeleteNotice)
}
DeleteNotice::DeleteNotice(
    ::google::protobuf::Arena* arena, const DeleteNotice& from)
    : DeleteNotice(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DeleteNotice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::CSToDB::MsgID >(111)} {}

inline void DeleteNotice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
DeleteNotice::~DeleteNotice() {
  // @@protoc_insertion_point(destructor:CSToDB.DeleteNotice)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeleteNotice::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
DeleteNotice::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(DeleteNotice, _impl_._cached_size_),
              false,
          },
          &DeleteNotice::MergeImpl,
          &DeleteNotice::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void DeleteNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.DeleteNotice)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.id_ = 0u;
    _impl_.mgsid_ = 111;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeleteNotice::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> DeleteNotice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteNotice, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeleteNotice_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::DeleteNotice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeleteNotice, _impl_.id_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteNotice, _impl_.id_)}},
    // optional .CSToDB.MsgID mgsid = 1 [default = eDeleteNotice_DBCall];
    {::_pbi::TcParser::FastErS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(DeleteNotice, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID mgsid = 1 [default = eDeleteNotice_DBCall];
    {PROTOBUF_FIELD_OFFSET(DeleteNotice, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 id = 2;
    {PROTOBUF_FIELD_OFFSET(DeleteNotice, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {100, 21},
  }}, {{
  }},
};

::uint8_t* DeleteNotice::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.DeleteNotice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID mgsid = 1 [default = eDeleteNotice_DBCall];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional uint32 id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.DeleteNotice)
  return target;
}

::size_t DeleteNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.DeleteNotice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_id());
    }

    // optional .CSToDB.MsgID mgsid = 1 [default = eDeleteNotice_DBCall];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void DeleteNotice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteNotice*>(&to_msg);
  auto& from = static_cast<const DeleteNotice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.DeleteNotice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteNotice::CopyFrom(const DeleteNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.DeleteNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeleteNotice::IsInitialized() const {
  return true;
}

void DeleteNotice::InternalSwap(DeleteNotice* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteNotice, _impl_.mgsid_)
      + sizeof(DeleteNotice::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(DeleteNotice, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata DeleteNotice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[13]);
}
// ===================================================================

class InsertNotice::_Internal {
 public:
  using HasBits = decltype(std::declval<InsertNotice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InsertNotice, _impl_._has_bits_);
};

InsertNotice::InsertNotice(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.InsertNotice)
}
inline PROTOBUF_NDEBUG_INLINE InsertNotice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sql_str_(arena, from.sql_str_) {}

InsertNotice::InsertNotice(
    ::google::protobuf::Arena* arena,
    const InsertNotice& from)
    : ::google::protobuf::Message(arena) {
  InsertNotice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.mgsid_ = from._impl_.mgsid_;

  // @@protoc_insertion_point(copy_constructor:CSToDB.InsertNotice)
}
inline PROTOBUF_NDEBUG_INLINE InsertNotice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sql_str_(arena),
        mgsid_{static_cast< ::CSToDB::MsgID >(110)} {}

inline void InsertNotice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InsertNotice::~InsertNotice() {
  // @@protoc_insertion_point(destructor:CSToDB.InsertNotice)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InsertNotice::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sql_str_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
InsertNotice::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(InsertNotice, _impl_._cached_size_),
              false,
          },
          &InsertNotice::MergeImpl,
          &InsertNotice::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void InsertNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.InsertNotice)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.sql_str_.ClearNonDefaultToEmpty();
    }
    _impl_.mgsid_ = 110;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InsertNotice::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 35, 2> InsertNotice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InsertNotice, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InsertNotice_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::InsertNotice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string sql_str = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(InsertNotice, _impl_.sql_str_)}},
    // optional .CSToDB.MsgID mgsid = 1 [default = eInsertNotice_DBCall];
    {::_pbi::TcParser::FastErS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(InsertNotice, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID mgsid = 1 [default = eInsertNotice_DBCall];
    {PROTOBUF_FIELD_OFFSET(InsertNotice, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string sql_str = 2;
    {PROTOBUF_FIELD_OFFSET(InsertNotice, _impl_.sql_str_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\23\0\7\0\0\0\0\0"
    "CSToDB.InsertNotice"
    "sql_str"
  }},
};

::uint8_t* InsertNotice::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.InsertNotice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID mgsid = 1 [default = eInsertNotice_DBCall];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional string sql_str = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_sql_str();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.InsertNotice.sql_str");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.InsertNotice)
  return target;
}

::size_t InsertNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.InsertNotice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string sql_str = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sql_str());
    }

    // optional .CSToDB.MsgID mgsid = 1 [default = eInsertNotice_DBCall];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void InsertNotice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InsertNotice*>(&to_msg);
  auto& from = static_cast<const InsertNotice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.InsertNotice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_sql_str(from._internal_sql_str());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InsertNotice::CopyFrom(const InsertNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.InsertNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InsertNotice::IsInitialized() const {
  return true;
}

void InsertNotice::InternalSwap(InsertNotice* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sql_str_, &other->_impl_.sql_str_, arena);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata InsertNotice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[14]);
}
// ===================================================================

class AlterSNSList::_Internal {
 public:
  using HasBits = decltype(std::declval<AlterSNSList>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_._has_bits_);
};

AlterSNSList::AlterSNSList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.AlterSNSList)
}
AlterSNSList::AlterSNSList(
    ::google::protobuf::Arena* arena, const AlterSNSList& from)
    : AlterSNSList(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AlterSNSList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::CSToDB::MsgID >(109)} {}

inline void AlterSNSList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, user_id_),
           0,
           offsetof(Impl_, opration_) -
               offsetof(Impl_, user_id_) +
               sizeof(Impl_::opration_));
}
AlterSNSList::~AlterSNSList() {
  // @@protoc_insertion_point(destructor:CSToDB.AlterSNSList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AlterSNSList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AlterSNSList::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_._cached_size_),
              false,
          },
          &AlterSNSList::MergeImpl,
          &AlterSNSList::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AlterSNSList::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.AlterSNSList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.user_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.opration_) -
        reinterpret_cast<char*>(&_impl_.user_id_)) + sizeof(_impl_.opration_));
    _impl_.mgsid_ = 109;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AlterSNSList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> AlterSNSList::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AlterSNSList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::AlterSNSList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CSToDB.MsgID mgsid = 1 [default = eAlterSNSList_DBCall];
    {::_pbi::TcParser::FastErS1,
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.mgsid_)}},
    // optional uint64 user_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AlterSNSList, _impl_.user_id_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.user_id_)}},
    // optional uint64 related_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AlterSNSList, _impl_.related_id_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.related_id_)}},
    // optional uint32 related = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AlterSNSList, _impl_.related_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.related_)}},
    // optional uint32 opration = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AlterSNSList, _impl_.opration_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.opration_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID mgsid = 1 [default = eAlterSNSList_DBCall];
    {PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.mgsid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint64 user_id = 2;
    {PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.user_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 related_id = 3;
    {PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.related_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 related = 4;
    {PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.related_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 opration = 5;
    {PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.opration_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {100, 21},
  }}, {{
  }},
};

::uint8_t* AlterSNSList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.AlterSNSList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID mgsid = 1 [default = eAlterSNSList_DBCall];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional uint64 user_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_user_id(), target);
  }

  // optional uint64 related_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_related_id(), target);
  }

  // optional uint32 related = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_related(), target);
  }

  // optional uint32 opration = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_opration(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.AlterSNSList)
  return target;
}

::size_t AlterSNSList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.AlterSNSList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint64 user_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_user_id());
    }

    // optional uint64 related_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_related_id());
    }

    // optional uint32 related = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_related());
    }

    // optional uint32 opration = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_opration());
    }

    // optional .CSToDB.MsgID mgsid = 1 [default = eAlterSNSList_DBCall];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AlterSNSList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AlterSNSList*>(&to_msg);
  auto& from = static_cast<const AlterSNSList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.AlterSNSList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.user_id_ = from._impl_.user_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.related_id_ = from._impl_.related_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.related_ = from._impl_.related_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.opration_ = from._impl_.opration_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AlterSNSList::CopyFrom(const AlterSNSList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.AlterSNSList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AlterSNSList::IsInitialized() const {
  return true;
}

void AlterSNSList::InternalSwap(AlterSNSList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.mgsid_)
      + sizeof(AlterSNSList::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(AlterSNSList, _impl_.user_id_)>(
          reinterpret_cast<char*>(&_impl_.user_id_),
          reinterpret_cast<char*>(&other->_impl_.user_id_));
}

::google::protobuf::Metadata AlterSNSList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[15]);
}
// ===================================================================

class QueryObjIdxReq::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryObjIdxReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_._has_bits_);
};

QueryObjIdxReq::QueryObjIdxReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.QueryObjIdxReq)
}
inline PROTOBUF_NDEBUG_INLINE QueryObjIdxReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        logininfo_(arena, from.logininfo_) {}

QueryObjIdxReq::QueryObjIdxReq(
    ::google::protobuf::Arena* arena,
    const QueryObjIdxReq& from)
    : ::google::protobuf::Message(arena) {
  QueryObjIdxReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gsid_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:CSToDB.QueryObjIdxReq)
}
inline PROTOBUF_NDEBUG_INLINE QueryObjIdxReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        logininfo_(arena),
        msgid_{static_cast< ::CSToDB::MsgID >(108)} {}

inline void QueryObjIdxReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           0,
           offsetof(Impl_, csid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::csid_));
}
QueryObjIdxReq::~QueryObjIdxReq() {
  // @@protoc_insertion_point(destructor:CSToDB.QueryObjIdxReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryObjIdxReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.logininfo_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QueryObjIdxReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_._cached_size_),
              false,
          },
          &QueryObjIdxReq::MergeImpl,
          &QueryObjIdxReq::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QueryObjIdxReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.QueryObjIdxReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.logininfo_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.gsid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.csid_) -
        reinterpret_cast<char*>(&_impl_.gsid_)) + sizeof(_impl_.csid_));
    _impl_.msgid_ = 108;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryObjIdxReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 39, 2> QueryObjIdxReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QueryObjIdxReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::QueryObjIdxReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CSToDB.MsgID msgid = 1 [default = eQueryObjId_DBCallBack];
    {::_pbi::TcParser::FastErS1,
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.msgid_)}},
    // optional string Logininfo = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.logininfo_)}},
    // optional int32 gsid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryObjIdxReq, _impl_.gsid_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.gsid_)}},
    // optional int32 gcnetid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryObjIdxReq, _impl_.gcnetid_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.gcnetid_)}},
    // optional int32 csid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryObjIdxReq, _impl_.csid_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.csid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID msgid = 1 [default = eQueryObjId_DBCallBack];
    {PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.msgid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string Logininfo = 2;
    {PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.logininfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 gsid = 3;
    {PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.gsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 gcnetid = 4;
    {PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.gcnetid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 csid = 5;
    {PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.csid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {100, 21},
  }}, {{
    "\25\0\11\0\0\0\0\0"
    "CSToDB.QueryObjIdxReq"
    "Logininfo"
  }},
};

::uint8_t* QueryObjIdxReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.QueryObjIdxReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID msgid = 1 [default = eQueryObjId_DBCallBack];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional string Logininfo = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_logininfo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.QueryObjIdxReq.Logininfo");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 gsid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_gsid(), target);
  }

  // optional int32 gcnetid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_gcnetid(), target);
  }

  // optional int32 csid = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_csid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.QueryObjIdxReq)
  return target;
}

::size_t QueryObjIdxReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.QueryObjIdxReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string Logininfo = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_logininfo());
    }

    // optional int32 gsid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gsid());
    }

    // optional int32 gcnetid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gcnetid());
    }

    // optional int32 csid = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_csid());
    }

    // optional .CSToDB.MsgID msgid = 1 [default = eQueryObjId_DBCallBack];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QueryObjIdxReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryObjIdxReq*>(&to_msg);
  auto& from = static_cast<const QueryObjIdxReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.QueryObjIdxReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_logininfo(from._internal_logininfo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.gsid_ = from._impl_.gsid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.gcnetid_ = from._impl_.gcnetid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.csid_ = from._impl_.csid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryObjIdxReq::CopyFrom(const QueryObjIdxReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.QueryObjIdxReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryObjIdxReq::IsInitialized() const {
  return true;
}

void QueryObjIdxReq::InternalSwap(QueryObjIdxReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logininfo_, &other->_impl_.logininfo_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.msgid_)
      + sizeof(QueryObjIdxReq::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(QueryObjIdxReq, _impl_.gsid_)>(
          reinterpret_cast<char*>(&_impl_.gsid_),
          reinterpret_cast<char*>(&other->_impl_.gsid_));
}

::google::protobuf::Metadata QueryObjIdxReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[16]);
}
// ===================================================================

class NicknameConflict::_Internal {
 public:
  using HasBits = decltype(std::declval<NicknameConflict>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_._has_bits_);
};

NicknameConflict::NicknameConflict(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.NicknameConflict)
}
inline PROTOBUF_NDEBUG_INLINE NicknameConflict::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        newnickname_(arena, from.newnickname_),
        cdk_(arena, from.cdk_),
        oldnickname_(arena, from.oldnickname_) {}

NicknameConflict::NicknameConflict(
    ::google::protobuf::Arena* arena,
    const NicknameConflict& from)
    : ::google::protobuf::Message(arena) {
  NicknameConflict* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gsid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:CSToDB.NicknameConflict)
}
inline PROTOBUF_NDEBUG_INLINE NicknameConflict::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        newnickname_(arena),
        cdk_(arena),
        oldnickname_(arena),
        mgsid_{static_cast< ::CSToDB::MsgID >(107)} {}

inline void NicknameConflict::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           0,
           offsetof(Impl_, csid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::csid_));
}
NicknameConflict::~NicknameConflict() {
  // @@protoc_insertion_point(destructor:CSToDB.NicknameConflict)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NicknameConflict::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.newnickname_.Destroy();
  _impl_.cdk_.Destroy();
  _impl_.oldnickname_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NicknameConflict::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_._cached_size_),
              false,
          },
          &NicknameConflict::MergeImpl,
          &NicknameConflict::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NicknameConflict::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.NicknameConflict)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.newnickname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.cdk_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.oldnickname_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.gsid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.csid_) -
        reinterpret_cast<char*>(&_impl_.gsid_)) + sizeof(_impl_.csid_));
  }
  _impl_.mgsid_ = 107;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NicknameConflict::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 65, 2> NicknameConflict::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NicknameConflict_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::NicknameConflict>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CSToDB.MsgID mgsid = 1 [default = eNicknameConflict_DBCallBack];
    {::_pbi::TcParser::FastErS1,
     {8, 8, 0, PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.mgsid_)}},
    // optional string newnickname = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.newnickname_)}},
    // optional int32 gsid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NicknameConflict, _impl_.gsid_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.gsid_)}},
    // optional int32 gcnetid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NicknameConflict, _impl_.gcnetid_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.gcnetid_)}},
    // optional uint64 guid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NicknameConflict, _impl_.guid_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.guid_)}},
    // optional int32 sdkid = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NicknameConflict, _impl_.sdkid_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.sdkid_)}},
    // optional int32 csid = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NicknameConflict, _impl_.csid_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.csid_)}},
    // optional string cdk = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 1, 0, PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.cdk_)}},
    // optional string oldnickname = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 2, 0, PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.oldnickname_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID mgsid = 1 [default = eNicknameConflict_DBCallBack];
    {PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.mgsid_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string newnickname = 2;
    {PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.newnickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 gsid = 3;
    {PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.gsid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 gcnetid = 4;
    {PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.gcnetid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint64 guid = 5;
    {PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.guid_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional int32 sdkid = 6;
    {PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.sdkid_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 csid = 7;
    {PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.csid_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string cdk = 8;
    {PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.cdk_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string oldnickname = 9;
    {PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.oldnickname_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\27\0\13\0\0\0\0\0\3\13\0\0\0\0\0\0"
    "CSToDB.NicknameConflict"
    "newnickname"
    "cdk"
    "oldnickname"
  }},
};

::uint8_t* NicknameConflict::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.NicknameConflict)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID mgsid = 1 [default = eNicknameConflict_DBCallBack];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional string newnickname = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_newnickname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.NicknameConflict.newnickname");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 gsid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_gsid(), target);
  }

  // optional int32 gcnetid = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_gcnetid(), target);
  }

  // optional uint64 guid = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_guid(), target);
  }

  // optional int32 sdkid = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_sdkid(), target);
  }

  // optional int32 csid = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_csid(), target);
  }

  // optional string cdk = 8;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_cdk();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.NicknameConflict.cdk");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string oldnickname = 9;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_oldnickname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.NicknameConflict.oldnickname");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.NicknameConflict)
  return target;
}

::size_t NicknameConflict::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.NicknameConflict)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string newnickname = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_newnickname());
    }

    // optional string cdk = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_cdk());
    }

    // optional string oldnickname = 9;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_oldnickname());
    }

    // optional int32 gsid = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gsid());
    }

    // optional int32 gcnetid = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gcnetid());
    }

    // optional uint64 guid = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_guid());
    }

    // optional int32 sdkid = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sdkid());
    }

    // optional int32 csid = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_csid());
    }

  }
  // optional .CSToDB.MsgID mgsid = 1 [default = eNicknameConflict_DBCallBack];
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NicknameConflict::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NicknameConflict*>(&to_msg);
  auto& from = static_cast<const NicknameConflict&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.NicknameConflict)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_newnickname(from._internal_newnickname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_cdk(from._internal_cdk());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_oldnickname(from._internal_oldnickname());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.gsid_ = from._impl_.gsid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.gcnetid_ = from._impl_.gcnetid_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.sdkid_ = from._impl_.sdkid_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.csid_ = from._impl_.csid_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NicknameConflict::CopyFrom(const NicknameConflict& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.NicknameConflict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NicknameConflict::IsInitialized() const {
  return true;
}

void NicknameConflict::InternalSwap(NicknameConflict* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.newnickname_, &other->_impl_.newnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cdk_, &other->_impl_.cdk_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.oldnickname_, &other->_impl_.oldnickname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.mgsid_)
      + sizeof(NicknameConflict::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(NicknameConflict, _impl_.gsid_)>(
          reinterpret_cast<char*>(&_impl_.gsid_),
          reinterpret_cast<char*>(&other->_impl_.gsid_));
}

::google::protobuf::Metadata NicknameConflict::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[17]);
}
// ===================================================================

class BuyGoods::_Internal {
 public:
  using HasBits = decltype(std::declval<BuyGoods>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_._has_bits_);
};

BuyGoods::BuyGoods(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.BuyGoods)
}
inline PROTOBUF_NDEBUG_INLINE BuyGoods::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        buygoodsmag_(arena, from.buygoodsmag_) {}

BuyGoods::BuyGoods(
    ::google::protobuf::Arena* arena,
    const BuyGoods& from)
    : ::google::protobuf::Message(arena) {
  BuyGoods* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.mgsid_ = from._impl_.mgsid_;

  // @@protoc_insertion_point(copy_constructor:CSToDB.BuyGoods)
}
inline PROTOBUF_NDEBUG_INLINE BuyGoods::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        buygoodsmag_(arena),
        mgsid_{static_cast< ::CSToDB::MsgID >(106)} {}

inline void BuyGoods::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BuyGoods::~BuyGoods() {
  // @@protoc_insertion_point(destructor:CSToDB.BuyGoods)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BuyGoods::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.buygoodsmag_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BuyGoods::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_._cached_size_),
              false,
          },
          &BuyGoods::MergeImpl,
          &BuyGoods::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void BuyGoods::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.BuyGoods)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.buygoodsmag_.ClearNonDefaultToEmpty();
    }
    _impl_.mgsid_ = 106;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BuyGoods::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 35, 2> BuyGoods::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BuyGoods_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::BuyGoods>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string buygoodsmag = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_.buygoodsmag_)}},
    // optional .CSToDB.MsgID mgsid = 1 [default = eBuyGoods_DBCallBack];
    {::_pbi::TcParser::FastErS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID mgsid = 1 [default = eBuyGoods_DBCallBack];
    {PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string buygoodsmag = 2;
    {PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_.buygoodsmag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\17\0\13\0\0\0\0\0"
    "CSToDB.BuyGoods"
    "buygoodsmag"
  }},
};

::uint8_t* BuyGoods::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.BuyGoods)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID mgsid = 1 [default = eBuyGoods_DBCallBack];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional string buygoodsmag = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_buygoodsmag();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.BuyGoods.buygoodsmag");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.BuyGoods)
  return target;
}

::size_t BuyGoods::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.BuyGoods)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string buygoodsmag = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_buygoodsmag());
    }

    // optional .CSToDB.MsgID mgsid = 1 [default = eBuyGoods_DBCallBack];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BuyGoods::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BuyGoods*>(&to_msg);
  auto& from = static_cast<const BuyGoods&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.BuyGoods)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_buygoodsmag(from._internal_buygoodsmag());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BuyGoods::CopyFrom(const BuyGoods& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.BuyGoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BuyGoods::IsInitialized() const {
  return true;
}

void BuyGoods::InternalSwap(BuyGoods* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.buygoodsmag_, &other->_impl_.buygoodsmag_, arena);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata BuyGoods::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[18]);
}
// ===================================================================

class GameMailInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<GameMailInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_._has_bits_);
};

GameMailInfo::GameMailInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.GameMailInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameMailInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_),
        content_(arena, from.content_),
        giftstr_(arena, from.giftstr_),
        createtime_(arena, from.createtime_),
        overtime_(arena, from.overtime_),
        sender_(arena, from.sender_) {}

GameMailInfo::GameMailInfo(
    ::google::protobuf::Arena* arena,
    const GameMailInfo& from)
    : ::google::protobuf::Message(arena) {
  GameMailInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, sdkidx_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::sdkidx_));

  // @@protoc_insertion_point(copy_constructor:CSToDB.GameMailInfo)
}
inline PROTOBUF_NDEBUG_INLINE GameMailInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena),
        content_(arena),
        giftstr_(arena),
        createtime_(arena),
        overtime_(arena),
        sender_(arena) {}

inline void GameMailInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, sdkidx_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::sdkidx_));
}
GameMailInfo::~GameMailInfo() {
  // @@protoc_insertion_point(destructor:CSToDB.GameMailInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameMailInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  _impl_.content_.Destroy();
  _impl_.giftstr_.Destroy();
  _impl_.createtime_.Destroy();
  _impl_.overtime_.Destroy();
  _impl_.sender_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GameMailInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_._cached_size_),
              false,
          },
          &GameMailInfo::MergeImpl,
          &GameMailInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void GameMailInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.GameMailInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.content_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.giftstr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.createtime_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.overtime_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.sender_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.mailid_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.mailid_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&_impl_.userid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sdkidx_) -
        reinterpret_cast<char*>(&_impl_.userid_)) + sizeof(_impl_.sdkidx_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GameMailInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 79, 2> GameMailInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GameMailInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::GameMailInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CSToDB.MailType type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 6, 4, PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.type_)}},
    // optional int32 mailId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameMailInfo, _impl_.mailid_), 7>(),
     {16, 7, 0, PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.mailid_)}},
    // optional int64 userid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameMailInfo, _impl_.userid_), 8>(),
     {24, 8, 0, PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.userid_)}},
    // optional .CSToDB.EMailCurtState curtstate = 4;
    {::_pbi::TcParser::FastEr0S1,
     {32, 9, 4, PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.curtstate_)}},
    // optional int32 sdkidx = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameMailInfo, _impl_.sdkidx_), 10>(),
     {40, 10, 0, PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.sdkidx_)}},
    // optional string title = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.title_)}},
    // optional string content = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.content_)}},
    // optional string giftstr = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 2, 0, PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.giftstr_)}},
    // optional string createtime = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 3, 0, PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.createtime_)}},
    // optional string overtime = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 4, 0, PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.overtime_)}},
    // optional string sender = 11;
    {::_pbi::TcParser::FastSS1,
     {90, 5, 0, PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.sender_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MailType type = 1;
    {PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.type_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int32 mailId = 2;
    {PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.mailid_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 userid = 3;
    {PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.userid_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .CSToDB.EMailCurtState curtstate = 4;
    {PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.curtstate_), _Internal::kHasBitsOffset + 9, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int32 sdkidx = 5;
    {PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.sdkidx_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string title = 6;
    {PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.title_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string content = 7;
    {PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.content_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string giftstr = 8;
    {PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.giftstr_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string createtime = 9;
    {PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.createtime_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string overtime = 10;
    {PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.overtime_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string sender = 11;
    {PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.sender_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {0, 5},
    {0, 5},
  }}, {{
    "\23\0\0\0\0\0\5\7\7\12\10\6\0\0\0\0"
    "CSToDB.GameMailInfo"
    "title"
    "content"
    "giftstr"
    "createtime"
    "overtime"
    "sender"
  }},
};

::uint8_t* GameMailInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.GameMailInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MailType type = 1;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // optional int32 mailId = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_mailid(), target);
  }

  // optional int64 userid = 3;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_userid(), target);
  }

  // optional .CSToDB.EMailCurtState curtstate = 4;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_curtstate(), target);
  }

  // optional int32 sdkidx = 5;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_sdkidx(), target);
  }

  // optional string title = 6;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.GameMailInfo.title");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string content = 7;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.GameMailInfo.content");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string giftstr = 8;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_giftstr();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.GameMailInfo.giftstr");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string createtime = 9;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_createtime();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.GameMailInfo.createtime");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional string overtime = 10;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_overtime();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.GameMailInfo.overtime");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional string sender = 11;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_sender();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.GameMailInfo.sender");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.GameMailInfo)
  return target;
}

::size_t GameMailInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.GameMailInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string title = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string content = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_content());
    }

    // optional string giftstr = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_giftstr());
    }

    // optional string createtime = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_createtime());
    }

    // optional string overtime = 10;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_overtime());
    }

    // optional string sender = 11;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sender());
    }

    // optional .CSToDB.MailType type = 1;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    // optional int32 mailId = 2;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_mailid());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional int64 userid = 3;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_userid());
    }

    // optional .CSToDB.EMailCurtState curtstate = 4;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_curtstate());
    }

    // optional int32 sdkidx = 5;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sdkidx());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GameMailInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameMailInfo*>(&to_msg);
  auto& from = static_cast<const GameMailInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.GameMailInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_content(from._internal_content());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_giftstr(from._internal_giftstr());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_createtime(from._internal_createtime());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_overtime(from._internal_overtime());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_sender(from._internal_sender());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.mailid_ = from._impl_.mailid_;
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.userid_ = from._impl_.userid_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.curtstate_ = from._impl_.curtstate_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.sdkidx_ = from._impl_.sdkidx_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameMailInfo::CopyFrom(const GameMailInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.GameMailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GameMailInfo::IsInitialized() const {
  return true;
}

void GameMailInfo::InternalSwap(GameMailInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.giftstr_, &other->_impl_.giftstr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.createtime_, &other->_impl_.createtime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.overtime_, &other->_impl_.overtime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.sdkidx_)
      + sizeof(GameMailInfo::_impl_.sdkidx_)
      - PROTOBUF_FIELD_OFFSET(GameMailInfo, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata GameMailInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[19]);
}
// ===================================================================

class UpdateGameMail::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateGameMail>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateGameMail, _impl_._has_bits_);
};

UpdateGameMail::UpdateGameMail(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.UpdateGameMail)
}
inline PROTOBUF_NDEBUG_INLINE UpdateGameMail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        maillist_{visibility, arena, from.maillist_} {}

UpdateGameMail::UpdateGameMail(
    ::google::protobuf::Arena* arena,
    const UpdateGameMail& from)
    : ::google::protobuf::Message(arena) {
  UpdateGameMail* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.mgsid_ = from._impl_.mgsid_;

  // @@protoc_insertion_point(copy_constructor:CSToDB.UpdateGameMail)
}
inline PROTOBUF_NDEBUG_INLINE UpdateGameMail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        maillist_{visibility, arena},
        mgsid_{static_cast< ::CSToDB::MsgID >(105)} {}

inline void UpdateGameMail::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateGameMail::~UpdateGameMail() {
  // @@protoc_insertion_point(destructor:CSToDB.UpdateGameMail)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateGameMail::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateGameMail::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UpdateGameMail, _impl_._cached_size_),
              false,
          },
          &UpdateGameMail::MergeImpl,
          &UpdateGameMail::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UpdateGameMail::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.UpdateGameMail)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.maillist_.Clear();
  _impl_.mgsid_ = 105;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateGameMail::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> UpdateGameMail::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateGameMail, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateGameMail_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::UpdateGameMail>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .CSToDB.GameMailInfo maillist = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(UpdateGameMail, _impl_.maillist_)}},
    // optional .CSToDB.MsgID mgsid = 1 [default = eUpdateGameMail_DBCallBack];
    {::_pbi::TcParser::FastErS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateGameMail, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID mgsid = 1 [default = eUpdateGameMail_DBCallBack];
    {PROTOBUF_FIELD_OFFSET(UpdateGameMail, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .CSToDB.GameMailInfo maillist = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateGameMail, _impl_.maillist_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {100, 21},
    {::_pbi::TcParser::GetTable<::CSToDB::GameMailInfo>()},
  }}, {{
  }},
};

::uint8_t* UpdateGameMail::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.UpdateGameMail)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID mgsid = 1 [default = eUpdateGameMail_DBCallBack];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // repeated .CSToDB.GameMailInfo maillist = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_maillist_size()); i < n; i++) {
    const auto& repfield = this->_internal_maillist().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.UpdateGameMail)
  return target;
}

::size_t UpdateGameMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.UpdateGameMail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSToDB.GameMailInfo maillist = 2;
  total_size += 1UL * this->_internal_maillist_size();
  for (const auto& msg : this->_internal_maillist()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional .CSToDB.MsgID mgsid = 1 [default = eUpdateGameMail_DBCallBack];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpdateGameMail::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateGameMail*>(&to_msg);
  auto& from = static_cast<const UpdateGameMail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.UpdateGameMail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_maillist()->MergeFrom(
      from._internal_maillist());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateGameMail::CopyFrom(const UpdateGameMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.UpdateGameMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateGameMail::IsInitialized() const {
  return true;
}

void UpdateGameMail::InternalSwap(UpdateGameMail* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.maillist_.InternalSwap(&other->_impl_.maillist_);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata UpdateGameMail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[20]);
}
// ===================================================================

class InsertUser::_Internal {
 public:
  using HasBits = decltype(std::declval<InsertUser>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InsertUser, _impl_._has_bits_);
};

InsertUser::InsertUser(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.InsertUser)
}
inline PROTOBUF_NDEBUG_INLINE InsertUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sqlstr_(arena, from.sqlstr_) {}

InsertUser::InsertUser(
    ::google::protobuf::Arena* arena,
    const InsertUser& from)
    : ::google::protobuf::Message(arena) {
  InsertUser* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, guid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:CSToDB.InsertUser)
}
inline PROTOBUF_NDEBUG_INLINE InsertUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sqlstr_(arena),
        mgsid_{static_cast< ::CSToDB::MsgID >(104)} {}

inline void InsertUser::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.guid_ = {};
}
InsertUser::~InsertUser() {
  // @@protoc_insertion_point(destructor:CSToDB.InsertUser)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InsertUser::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sqlstr_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
InsertUser::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(InsertUser, _impl_._cached_size_),
              false,
          },
          &InsertUser::MergeImpl,
          &InsertUser::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void InsertUser::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.InsertUser)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.sqlstr_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    _impl_.guid_ = ::int64_t{0};
    _impl_.mgsid_ = 104;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InsertUser::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 32, 2> InsertUser::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InsertUser, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InsertUser_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::InsertUser>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CSToDB.MsgID mgsid = 1 [default = eInsertUser_DBCallBack];
    {::_pbi::TcParser::FastErS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(InsertUser, _impl_.mgsid_)}},
    // optional int64 guid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InsertUser, _impl_.guid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(InsertUser, _impl_.guid_)}},
    // optional string sqlstr = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(InsertUser, _impl_.sqlstr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID mgsid = 1 [default = eInsertUser_DBCallBack];
    {PROTOBUF_FIELD_OFFSET(InsertUser, _impl_.mgsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int64 guid = 2;
    {PROTOBUF_FIELD_OFFSET(InsertUser, _impl_.guid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string sqlstr = 3;
    {PROTOBUF_FIELD_OFFSET(InsertUser, _impl_.sqlstr_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\21\0\0\6\0\0\0\0"
    "CSToDB.InsertUser"
    "sqlstr"
  }},
};

::uint8_t* InsertUser::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.InsertUser)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID mgsid = 1 [default = eInsertUser_DBCallBack];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int64 guid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_guid(), target);
  }

  // optional string sqlstr = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_sqlstr();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.InsertUser.sqlstr");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.InsertUser)
  return target;
}

::size_t InsertUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.InsertUser)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string sqlstr = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sqlstr());
    }

    // optional int64 guid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_guid());
    }

    // optional .CSToDB.MsgID mgsid = 1 [default = eInsertUser_DBCallBack];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void InsertUser::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InsertUser*>(&to_msg);
  auto& from = static_cast<const InsertUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.InsertUser)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_sqlstr(from._internal_sqlstr());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InsertUser::CopyFrom(const InsertUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.InsertUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InsertUser::IsInitialized() const {
  return true;
}

void InsertUser::InternalSwap(InsertUser* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sqlstr_, &other->_impl_.sqlstr_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InsertUser, _impl_.mgsid_)
      + sizeof(InsertUser::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(InsertUser, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata InsertUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[21]);
}
// ===================================================================

class UpdateUser::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateUser>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateUser, _impl_._has_bits_);
};

UpdateUser::UpdateUser(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.UpdateUser)
}
inline PROTOBUF_NDEBUG_INLINE UpdateUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sqlstr_(arena, from.sqlstr_) {}

UpdateUser::UpdateUser(
    ::google::protobuf::Arena* arena,
    const UpdateUser& from)
    : ::google::protobuf::Message(arena) {
  UpdateUser* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, guid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:CSToDB.UpdateUser)
}
inline PROTOBUF_NDEBUG_INLINE UpdateUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sqlstr_(arena),
        mgsid_{static_cast< ::CSToDB::MsgID >(103)} {}

inline void UpdateUser::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.guid_ = {};
}
UpdateUser::~UpdateUser() {
  // @@protoc_insertion_point(destructor:CSToDB.UpdateUser)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateUser::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sqlstr_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UpdateUser::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UpdateUser, _impl_._cached_size_),
              false,
          },
          &UpdateUser::MergeImpl,
          &UpdateUser::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UpdateUser::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.UpdateUser)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.sqlstr_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    _impl_.guid_ = ::int64_t{0};
    _impl_.mgsid_ = 103;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateUser::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 32, 2> UpdateUser::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateUser, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateUser_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::UpdateUser>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CSToDB.MsgID mgsid = 1 [default = eUpdateUser_DBCallBack];
    {::_pbi::TcParser::FastErS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(UpdateUser, _impl_.mgsid_)}},
    // optional int64 guid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UpdateUser, _impl_.guid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateUser, _impl_.guid_)}},
    // optional string sqlstr = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateUser, _impl_.sqlstr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID mgsid = 1 [default = eUpdateUser_DBCallBack];
    {PROTOBUF_FIELD_OFFSET(UpdateUser, _impl_.mgsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int64 guid = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateUser, _impl_.guid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string sqlstr = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateUser, _impl_.sqlstr_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\21\0\0\6\0\0\0\0"
    "CSToDB.UpdateUser"
    "sqlstr"
  }},
};

::uint8_t* UpdateUser::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.UpdateUser)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID mgsid = 1 [default = eUpdateUser_DBCallBack];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int64 guid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_guid(), target);
  }

  // optional string sqlstr = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_sqlstr();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.UpdateUser.sqlstr");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.UpdateUser)
  return target;
}

::size_t UpdateUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.UpdateUser)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string sqlstr = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sqlstr());
    }

    // optional int64 guid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_guid());
    }

    // optional .CSToDB.MsgID mgsid = 1 [default = eUpdateUser_DBCallBack];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UpdateUser::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateUser*>(&to_msg);
  auto& from = static_cast<const UpdateUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.UpdateUser)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_sqlstr(from._internal_sqlstr());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateUser::CopyFrom(const UpdateUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.UpdateUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateUser::IsInitialized() const {
  return true;
}

void UpdateUser::InternalSwap(UpdateUser* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sqlstr_, &other->_impl_.sqlstr_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateUser, _impl_.mgsid_)
      + sizeof(UpdateUser::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(UpdateUser, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata UpdateUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[22]);
}
// ===================================================================

class CheckNameReq::_Internal {
 public:
  using HasBits = decltype(std::declval<CheckNameReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_._has_bits_);
};

CheckNameReq::CheckNameReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.CheckNameReq)
}
inline PROTOBUF_NDEBUG_INLINE CheckNameReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        cdk_(arena, from.cdk_),
        completeinfo_(arena, from.completeinfo_) {}

CheckNameReq::CheckNameReq(
    ::google::protobuf::Arena* arena,
    const CheckNameReq& from)
    : ::google::protobuf::Message(arena) {
  CheckNameReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gsid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:CSToDB.CheckNameReq)
}
inline PROTOBUF_NDEBUG_INLINE CheckNameReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        cdk_(arena),
        completeinfo_(arena),
        mgsid_{static_cast< ::CSToDB::MsgID >(100)} {}

inline void CheckNameReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           0,
           offsetof(Impl_, csid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::csid_));
}
CheckNameReq::~CheckNameReq() {
  // @@protoc_insertion_point(destructor:CSToDB.CheckNameReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CheckNameReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.cdk_.Destroy();
  _impl_.completeinfo_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CheckNameReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_._cached_size_),
              false,
          },
          &CheckNameReq::MergeImpl,
          &CheckNameReq::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CheckNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.CheckNameReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.cdk_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.completeinfo_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.gsid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.csid_) -
        reinterpret_cast<char*>(&_impl_.gsid_)) + sizeof(_impl_.csid_));
    _impl_.mgsid_ = 100;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CheckNameReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 51, 2> CheckNameReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CheckNameReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::CheckNameReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string completeInfo = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 1, 0, PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.completeinfo_)}},
    // optional .CSToDB.MsgID mgsid = 1 [default = eCheckNickNameDBCallBack];
    {::_pbi::TcParser::FastErS1,
     {8, 7, 0, PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.mgsid_)}},
    // optional int32 gsid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CheckNameReq, _impl_.gsid_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.gsid_)}},
    // optional int32 gcnetid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CheckNameReq, _impl_.gcnetid_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.gcnetid_)}},
    // optional int32 gsnetid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CheckNameReq, _impl_.gsnetid_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.gsnetid_)}},
    // optional int32 sdkid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CheckNameReq, _impl_.sdkid_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.sdkid_)}},
    // optional int32 csid = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CheckNameReq, _impl_.csid_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.csid_)}},
    // optional string cdk = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.cdk_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID mgsid = 1 [default = eCheckNickNameDBCallBack];
    {PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.mgsid_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int32 gsid = 2;
    {PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.gsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 gcnetid = 3;
    {PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.gcnetid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 gsnetid = 4;
    {PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.gsnetid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 sdkid = 5;
    {PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.sdkid_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 csid = 6;
    {PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.csid_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string cdk = 7;
    {PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.cdk_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string completeInfo = 8;
    {PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.completeinfo_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\23\0\0\0\0\0\0\3\14\0\0\0\0\0\0\0"
    "CSToDB.CheckNameReq"
    "cdk"
    "completeInfo"
  }},
};

::uint8_t* CheckNameReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.CheckNameReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID mgsid = 1 [default = eCheckNickNameDBCallBack];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int32 gsid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_gsid(), target);
  }

  // optional int32 gcnetid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_gcnetid(), target);
  }

  // optional int32 gsnetid = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_gsnetid(), target);
  }

  // optional int32 sdkid = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_sdkid(), target);
  }

  // optional int32 csid = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_csid(), target);
  }

  // optional string cdk = 7;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_cdk();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.CheckNameReq.cdk");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string completeInfo = 8;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_completeinfo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.CheckNameReq.completeInfo");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.CheckNameReq)
  return target;
}

::size_t CheckNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.CheckNameReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string cdk = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_cdk());
    }

    // optional string completeInfo = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_completeinfo());
    }

    // optional int32 gsid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gsid());
    }

    // optional int32 gcnetid = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gcnetid());
    }

    // optional int32 gsnetid = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gsnetid());
    }

    // optional int32 sdkid = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sdkid());
    }

    // optional int32 csid = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_csid());
    }

    // optional .CSToDB.MsgID mgsid = 1 [default = eCheckNickNameDBCallBack];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CheckNameReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CheckNameReq*>(&to_msg);
  auto& from = static_cast<const CheckNameReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.CheckNameReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_cdk(from._internal_cdk());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_completeinfo(from._internal_completeinfo());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.gsid_ = from._impl_.gsid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.gcnetid_ = from._impl_.gcnetid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.gsnetid_ = from._impl_.gsnetid_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.sdkid_ = from._impl_.sdkid_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.csid_ = from._impl_.csid_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckNameReq::CopyFrom(const CheckNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.CheckNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CheckNameReq::IsInitialized() const {
  return true;
}

void CheckNameReq::InternalSwap(CheckNameReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cdk_, &other->_impl_.cdk_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.completeinfo_, &other->_impl_.completeinfo_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.mgsid_)
      + sizeof(CheckNameReq::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(CheckNameReq, _impl_.gsid_)>(
          reinterpret_cast<char*>(&_impl_.gsid_),
          reinterpret_cast<char*>(&other->_impl_.gsid_));
}

::google::protobuf::Metadata CheckNameReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[23]);
}
// ===================================================================

class QueryUserReq::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryUserReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_._has_bits_);
};

QueryUserReq::QueryUserReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToDB.QueryUserReq)
}
inline PROTOBUF_NDEBUG_INLINE QueryUserReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        logininfo_(arena, from.logininfo_),
        uname_(arena, from.uname_) {}

QueryUserReq::QueryUserReq(
    ::google::protobuf::Arena* arena,
    const QueryUserReq& from)
    : ::google::protobuf::Message(arena) {
  QueryUserReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gsid_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:CSToDB.QueryUserReq)
}
inline PROTOBUF_NDEBUG_INLINE QueryUserReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        logininfo_(arena),
        uname_(arena),
        msgid_{static_cast< ::CSToDB::MsgID >(101)} {}

inline void QueryUserReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           0,
           offsetof(Impl_, csid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::csid_));
}
QueryUserReq::~QueryUserReq() {
  // @@protoc_insertion_point(destructor:CSToDB.QueryUserReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryUserReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.logininfo_.Destroy();
  _impl_.uname_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QueryUserReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_._cached_size_),
              false,
          },
          &QueryUserReq::MergeImpl,
          &QueryUserReq::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QueryUserReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToDB.QueryUserReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.logininfo_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.uname_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.gsid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.csid_) -
        reinterpret_cast<char*>(&_impl_.gsid_)) + sizeof(_impl_.csid_));
    _impl_.msgid_ = 101;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryUserReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 42, 2> QueryUserReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QueryUserReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToDB::QueryUserReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CSToDB.MsgID msgid = 1 [default = eQueryUser_DBCallBack];
    {::_pbi::TcParser::FastErS1,
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.msgid_)}},
    // optional string Logininfo = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.logininfo_)}},
    // optional int32 gsid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryUserReq, _impl_.gsid_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.gsid_)}},
    // optional int32 gcnetid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryUserReq, _impl_.gcnetid_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.gcnetid_)}},
    // optional int32 csid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryUserReq, _impl_.csid_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.csid_)}},
    // optional int64 objid = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryUserReq, _impl_.objid_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.objid_)}},
    // optional string uname = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.uname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToDB.MsgID msgid = 1 [default = eQueryUser_DBCallBack];
    {PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.msgid_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string Logininfo = 2;
    {PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.logininfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 gsid = 3;
    {PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.gsid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 gcnetid = 4;
    {PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.gcnetid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 csid = 5;
    {PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.csid_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 objid = 6;
    {PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.objid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string uname = 7;
    {PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.uname_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {100, 21},
  }}, {{
    "\23\0\11\0\0\0\0\5"
    "CSToDB.QueryUserReq"
    "Logininfo"
    "uname"
  }},
};

::uint8_t* QueryUserReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToDB.QueryUserReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToDB.MsgID msgid = 1 [default = eQueryUser_DBCallBack];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional string Logininfo = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_logininfo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.QueryUserReq.Logininfo");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 gsid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_gsid(), target);
  }

  // optional int32 gcnetid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_gcnetid(), target);
  }

  // optional int32 csid = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_csid(), target);
  }

  // optional int64 objid = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_objid(), target);
  }

  // optional string uname = 7;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_uname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToDB.QueryUserReq.uname");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToDB.QueryUserReq)
  return target;
}

::size_t QueryUserReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToDB.QueryUserReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string Logininfo = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_logininfo());
    }

    // optional string uname = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_uname());
    }

    // optional int32 gsid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gsid());
    }

    // optional int32 gcnetid = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gcnetid());
    }

    // optional int64 objid = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_objid());
    }

    // optional int32 csid = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_csid());
    }

    // optional .CSToDB.MsgID msgid = 1 [default = eQueryUser_DBCallBack];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QueryUserReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryUserReq*>(&to_msg);
  auto& from = static_cast<const QueryUserReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToDB.QueryUserReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_logininfo(from._internal_logininfo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_uname(from._internal_uname());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.gsid_ = from._impl_.gsid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.gcnetid_ = from._impl_.gcnetid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.objid_ = from._impl_.objid_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.csid_ = from._impl_.csid_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUserReq::CopyFrom(const QueryUserReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToDB.QueryUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryUserReq::IsInitialized() const {
  return true;
}

void QueryUserReq::InternalSwap(QueryUserReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.logininfo_, &other->_impl_.logininfo_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uname_, &other->_impl_.uname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.msgid_)
      + sizeof(QueryUserReq::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(QueryUserReq, _impl_.gsid_)>(
          reinterpret_cast<char*>(&_impl_.gsid_),
          reinterpret_cast<char*>(&other->_impl_.gsid_));
}

::google::protobuf::Metadata QueryUserReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToDB_2eproto_getter,
                                   &descriptor_table_CSToDB_2eproto_once,
                                   file_level_metadata_CSToDB_2eproto[24]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace CSToDB
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_CSToDB_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
