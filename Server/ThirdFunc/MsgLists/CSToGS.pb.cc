// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSToGS.proto
// Protobuf C++ Version: 4.26.0-dev

#include "CSToGS.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace CSToGS {

inline constexpr UserDisConnectedSS::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gcnid_{},
        msgid_{static_cast< ::CSToGS::MsgID >(24585)} {}

template <typename>
PROTOBUF_CONSTEXPR UserDisConnectedSS::UserDisConnectedSS(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserDisConnectedSSDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDisConnectedSSDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDisConnectedSSDefaultTypeInternal() {}
  union {
    UserDisConnectedSS _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDisConnectedSSDefaultTypeInternal _UserDisConnectedSS_default_instance_;

inline constexpr UserConnectedSS::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gcnid_{},
        battleid_{::uint64_t{0u}},
        ssid_{0},
        msgid_{static_cast< ::CSToGS::MsgID >(24584)} {}

template <typename>
PROTOBUF_CONSTEXPR UserConnectedSS::UserConnectedSS(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserConnectedSSDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserConnectedSSDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserConnectedSSDefaultTypeInternal() {}
  union {
    UserConnectedSS _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserConnectedSSDefaultTypeInternal _UserConnectedSS_default_instance_;

inline constexpr OrderPostToGC_UserNetInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gsid_{0},
        gcnid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderPostToGC_UserNetInfo::OrderPostToGC_UserNetInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OrderPostToGC_UserNetInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderPostToGC_UserNetInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderPostToGC_UserNetInfoDefaultTypeInternal() {}
  union {
    OrderPostToGC_UserNetInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderPostToGC_UserNetInfoDefaultTypeInternal _OrderPostToGC_UserNetInfo_default_instance_;

inline constexpr OrderKickoutGC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gcnid_{0},
        msgid_{static_cast< ::CSToGS::MsgID >(24582)} {}

template <typename>
PROTOBUF_CONSTEXPR OrderKickoutGC::OrderKickoutGC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OrderKickoutGCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderKickoutGCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderKickoutGCDefaultTypeInternal() {}
  union {
    OrderKickoutGC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderKickoutGCDefaultTypeInternal _OrderKickoutGC_default_instance_;

inline constexpr OneSSConnected::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{::int64_t{0}},
        state_{0},
        ssid_{0},
        port_{0},
        netstate_{0},
        basessid_{0},
        msgid_{static_cast< ::CSToGS::MsgID >(24583)} {}

template <typename>
PROTOBUF_CONSTEXPR OneSSConnected::OneSSConnected(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OneSSConnectedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneSSConnectedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneSSConnectedDefaultTypeInternal() {}
  union {
    OneSSConnected _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneSSConnectedDefaultTypeInternal _OneSSConnected_default_instance_;

inline constexpr AskRegisteRet_SSInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ssid_{0},
        port_{0},
        netstate_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AskRegisteRet_SSInfo::AskRegisteRet_SSInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskRegisteRet_SSInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskRegisteRet_SSInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskRegisteRet_SSInfoDefaultTypeInternal() {}
  union {
    AskRegisteRet_SSInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskRegisteRet_SSInfoDefaultTypeInternal _AskRegisteRet_SSInfo_default_instance_;

inline constexpr AskPing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_{::int64_t{0}},
        mgsid_{static_cast< ::CSToGS::MsgID >(24577)} {}

template <typename>
PROTOBUF_CONSTEXPR AskPing::AskPing(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskPingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskPingDefaultTypeInternal() {}
  union {
    AskPing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskPingDefaultTypeInternal _AskPing_default_instance_;

inline constexpr OrderPostToGC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        usernetinfo_{},
        othermsg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        othermsgid_{0},
        msgid_{static_cast< ::CSToGS::MsgID >(24581)} {}

template <typename>
PROTOBUF_CONSTEXPR OrderPostToGC::OrderPostToGC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OrderPostToGCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderPostToGCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderPostToGCDefaultTypeInternal() {}
  union {
    OrderPostToGC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderPostToGCDefaultTypeInternal _OrderPostToGC_default_instance_;

inline constexpr AskRegisteRet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ssinfo_{},
        curtime_{::int64_t{0}},
        registe_{0},
        ssbaseid_{0u},
        msgid_{static_cast< ::CSToGS::MsgID >(24578)} {}

template <typename>
PROTOBUF_CONSTEXPR AskRegisteRet::AskRegisteRet(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskRegisteRetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskRegisteRetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskRegisteRetDefaultTypeInternal() {}
  union {
    AskRegisteRet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskRegisteRetDefaultTypeInternal _AskRegisteRet_default_instance_;
}  // namespace CSToGS
static ::_pb::Metadata file_level_metadata_CSToGS_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_CSToGS_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_CSToGS_2eproto = nullptr;
const ::uint32_t
    TableStruct_CSToGS_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskPing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskPing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskPing, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskPing, _impl_.time_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet_SSInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet_SSInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet_SSInfo, _impl_.ssid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet_SSInfo, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet_SSInfo, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet_SSInfo, _impl_.netstate_),
        1,
        0,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet, _impl_.registe_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet, _impl_.curtime_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet, _impl_.ssbaseid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::AskRegisteRet, _impl_.ssinfo_),
        3,
        1,
        0,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderPostToGC_UserNetInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderPostToGC_UserNetInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderPostToGC_UserNetInfo, _impl_.gsid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderPostToGC_UserNetInfo, _impl_.gcnid_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderPostToGC, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderPostToGC, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderPostToGC, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderPostToGC, _impl_.usernetinfo_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderPostToGC, _impl_.othermsgid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderPostToGC, _impl_.othermsg_),
        2,
        ~0u,
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderKickoutGC, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderKickoutGC, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderKickoutGC, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OrderKickoutGC, _impl_.gcnid_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToGS::OneSSConnected, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OneSSConnected, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToGS::OneSSConnected, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OneSSConnected, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OneSSConnected, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OneSSConnected, _impl_.ssid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OneSSConnected, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OneSSConnected, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OneSSConnected, _impl_.netstate_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::OneSSConnected, _impl_.basessid_),
        7,
        2,
        1,
        3,
        0,
        4,
        5,
        6,
        PROTOBUF_FIELD_OFFSET(::CSToGS::UserConnectedSS, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::UserConnectedSS, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToGS::UserConnectedSS, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::UserConnectedSS, _impl_.ssid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::UserConnectedSS, _impl_.gcnid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::UserConnectedSS, _impl_.battleid_),
        2,
        1,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::CSToGS::UserDisConnectedSS, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::UserDisConnectedSS, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CSToGS::UserDisConnectedSS, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::CSToGS::UserDisConnectedSS, _impl_.gcnid_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::CSToGS::AskPing)},
        {12, 24, -1, sizeof(::CSToGS::AskRegisteRet_SSInfo)},
        {28, 41, -1, sizeof(::CSToGS::AskRegisteRet)},
        {46, 56, -1, sizeof(::CSToGS::OrderPostToGC_UserNetInfo)},
        {58, 70, -1, sizeof(::CSToGS::OrderPostToGC)},
        {74, 84, -1, sizeof(::CSToGS::OrderKickoutGC)},
        {86, 102, -1, sizeof(::CSToGS::OneSSConnected)},
        {110, 122, -1, sizeof(::CSToGS::UserConnectedSS)},
        {126, 136, -1, sizeof(::CSToGS::UserDisConnectedSS)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::CSToGS::_AskPing_default_instance_._instance,
    &::CSToGS::_AskRegisteRet_SSInfo_default_instance_._instance,
    &::CSToGS::_AskRegisteRet_default_instance_._instance,
    &::CSToGS::_OrderPostToGC_UserNetInfo_default_instance_._instance,
    &::CSToGS::_OrderPostToGC_default_instance_._instance,
    &::CSToGS::_OrderKickoutGC_default_instance_._instance,
    &::CSToGS::_OneSSConnected_default_instance_._instance,
    &::CSToGS::_UserConnectedSS_default_instance_._instance,
    &::CSToGS::_UserDisConnectedSS_default_instance_._instance,
};
const char descriptor_table_protodef_CSToGS_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014CSToGS.proto\022\006CSToGS\"P\n\007AskPing\0227\n\005mgs"
    "id\030\001 \001(\0162\r.CSToGS.MsgID:\031eMsgToGSFromCS_"
    "AskPingRet\022\014\n\004time\030\002 \001(\003\"\361\001\n\rAskRegisteR"
    "et\022:\n\005msgid\030\001 \001(\0162\r.CSToGS.MsgID:\034eMsgTo"
    "GSFromCS_AskRegisteRet\022\017\n\007registe\030\002 \001(\005\022"
    "\017\n\007curtime\030\003 \001(\003\022\020\n\010ssbaseid\030\004 \001(\r\022,\n\006ss"
    "info\030\005 \003(\0132\034.CSToGS.AskRegisteRet.SSInfo"
    "\032B\n\006SSInfo\022\014\n\004ssid\030\001 \001(\005\022\n\n\002ip\030\002 \001(\t\022\014\n\004"
    "port\030\003 \001(\005\022\020\n\010netstate\030\004 \001(\005\"\325\001\n\rOrderPo"
    "stToGC\022:\n\005msgid\030\001 \001(\0162\r.CSToGS.MsgID:\034eM"
    "sgToGSFromCS_OrderPostToGC\0226\n\013usernetinf"
    "o\030\002 \003(\0132!.CSToGS.OrderPostToGC.UserNetIn"
    "fo\022\022\n\nothermsgid\030\003 \001(\005\022\020\n\010othermsg\030\004 \001(\014"
    "\032*\n\013UserNetInfo\022\014\n\004gsid\030\001 \001(\005\022\r\n\005gcnid\030\002"
    " \001(\005\"\\\n\016OrderKickoutGC\022;\n\005msgid\030\001 \001(\0162\r."
    "CSToGS.MsgID:\035eMsgToGSFromCS_OrderKickou"
    "tGC\022\r\n\005gcnid\030\002 \001(\005\"\266\001\n\016OneSSConnected\022;\n"
    "\005msgid\030\001 \001(\0162\r.CSToGS.MsgID:\035eMsgToGSFro"
    "mCS_OneSSConnected\022\r\n\005state\030\002 \001(\005\022\014\n\004tim"
    "e\030\003 \001(\003\022\014\n\004ssid\030\004 \001(\005\022\n\n\002ip\030\005 \001(\t\022\014\n\004por"
    "t\030\006 \001(\005\022\020\n\010netstate\030\007 \001(\005\022\020\n\010basessid\030\010 "
    "\001(\005\"~\n\017UserConnectedSS\022<\n\005msgid\030\001 \001(\0162\r."
    "CSToGS.MsgID:\036eMsgToGSFromCS_UserConnect"
    "edSS\022\014\n\004ssid\030\002 \001(\005\022\r\n\005gcnid\030\003 \003(\005\022\020\n\010bat"
    "tleid\030\004 \001(\004\"d\n\022UserDisConnectedSS\022\?\n\005msg"
    "id\030\001 \001(\0162\r.CSToGS.MsgID:!eMsgToGSFromCS_"
    "UserDisConnectedSS\022\r\n\005gcnid\030\002 \003(\005*\214\003\n\005Ms"
    "gID\022\032\n\024eMsgToGSFromCS_Begin\020\200\300\001\022\037\n\031eMsgT"
    "oGSFromCS_AskPingRet\020\201\300\001\022\"\n\034eMsgToGSFrom"
    "CS_AskRegisteRet\020\202\300\001\022$\n\036eMsgToGSFromCS_O"
    "rderOpenListen\020\203\300\001\022%\n\037eMsgToGSFromCS_Ord"
    "erCloseListen\020\204\300\001\022\"\n\034eMsgToGSFromCS_Orde"
    "rPostToGC\020\205\300\001\022#\n\035eMsgToGSFromCS_OrderKic"
    "koutGC\020\206\300\001\022#\n\035eMsgToGSFromCS_OneSSConnec"
    "ted\020\207\300\001\022$\n\036eMsgToGSFromCS_UserConnectedS"
    "S\020\210\300\001\022\'\n!eMsgToGSFromCS_UserDisConnected"
    "SS\020\211\300\001\022\030\n\022eMsgToGSFromCS_End\020\250\303\001"
};
static ::absl::once_flag descriptor_table_CSToGS_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_CSToGS_2eproto = {
    false,
    false,
    1472,
    descriptor_table_protodef_CSToGS_2eproto,
    "CSToGS.proto",
    &descriptor_table_CSToGS_2eproto_once,
    nullptr,
    0,
    9,
    schemas,
    file_default_instances,
    TableStruct_CSToGS_2eproto::offsets,
    file_level_metadata_CSToGS_2eproto,
    file_level_enum_descriptors_CSToGS_2eproto,
    file_level_service_descriptors_CSToGS_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_CSToGS_2eproto_getter() {
  return &descriptor_table_CSToGS_2eproto;
}
namespace CSToGS {
const ::google::protobuf::EnumDescriptor* MsgID_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_CSToGS_2eproto);
  return file_level_enum_descriptors_CSToGS_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MsgID_internal_data_[] = {
    679936u, 65536u, 25000u, };
bool MsgID_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, MsgID_internal_data_);
}
// ===================================================================

class AskPing::_Internal {
 public:
  using HasBits = decltype(std::declval<AskPing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskPing, _impl_._has_bits_);
};

AskPing::AskPing(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToGS.AskPing)
}
AskPing::AskPing(
    ::google::protobuf::Arena* arena, const AskPing& from)
    : AskPing(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskPing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::CSToGS::MsgID >(24577)} {}

inline void AskPing::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
AskPing::~AskPing() {
  // @@protoc_insertion_point(destructor:CSToGS.AskPing)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskPing::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskPing::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskPing, _impl_._cached_size_),
              false,
          },
          &AskPing::MergeImpl,
          &AskPing::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskPing::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToGS.AskPing)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.time_ = ::int64_t{0};
    _impl_.mgsid_ = 24577;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskPing::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AskPing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskPing, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskPing_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToGS::AskPing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AskPing, _impl_.time_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AskPing, _impl_.time_)}},
    // optional .CSToGS.MsgID mgsid = 1 [default = eMsgToGSFromCS_AskPingRet];
    {::_pbi::TcParser::FastEvS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(AskPing, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToGS.MsgID mgsid = 1 [default = eMsgToGSFromCS_AskPingRet];
    {PROTOBUF_FIELD_OFFSET(AskPing, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 time = 2;
    {PROTOBUF_FIELD_OFFSET(AskPing, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::CSToGS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskPing::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToGS.AskPing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToGS.MsgID mgsid = 1 [default = eMsgToGSFromCS_AskPingRet];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int64 time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToGS.AskPing)
  return target;
}

::size_t AskPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToGS.AskPing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 time = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_time());
    }

    // optional .CSToGS.MsgID mgsid = 1 [default = eMsgToGSFromCS_AskPingRet];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskPing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskPing*>(&to_msg);
  auto& from = static_cast<const AskPing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToGS.AskPing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.time_ = from._impl_.time_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskPing::CopyFrom(const AskPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToGS.AskPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskPing::IsInitialized() const {
  return true;
}

void AskPing::InternalSwap(AskPing* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskPing, _impl_.mgsid_)
      + sizeof(AskPing::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(AskPing, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata AskPing::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToGS_2eproto_getter,
                                   &descriptor_table_CSToGS_2eproto_once,
                                   file_level_metadata_CSToGS_2eproto[0]);
}
// ===================================================================

class AskRegisteRet_SSInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<AskRegisteRet_SSInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_._has_bits_);
};

AskRegisteRet_SSInfo::AskRegisteRet_SSInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToGS.AskRegisteRet.SSInfo)
}
inline PROTOBUF_NDEBUG_INLINE AskRegisteRet_SSInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ip_(arena, from.ip_) {}

AskRegisteRet_SSInfo::AskRegisteRet_SSInfo(
    ::google::protobuf::Arena* arena,
    const AskRegisteRet_SSInfo& from)
    : ::google::protobuf::Message(arena) {
  AskRegisteRet_SSInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ssid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, ssid_),
           offsetof(Impl_, netstate_) -
               offsetof(Impl_, ssid_) +
               sizeof(Impl_::netstate_));

  // @@protoc_insertion_point(copy_constructor:CSToGS.AskRegisteRet.SSInfo)
}
inline PROTOBUF_NDEBUG_INLINE AskRegisteRet_SSInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ip_(arena) {}

inline void AskRegisteRet_SSInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ssid_),
           0,
           offsetof(Impl_, netstate_) -
               offsetof(Impl_, ssid_) +
               sizeof(Impl_::netstate_));
}
AskRegisteRet_SSInfo::~AskRegisteRet_SSInfo() {
  // @@protoc_insertion_point(destructor:CSToGS.AskRegisteRet.SSInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskRegisteRet_SSInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskRegisteRet_SSInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_._cached_size_),
              false,
          },
          &AskRegisteRet_SSInfo::MergeImpl,
          &AskRegisteRet_SSInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskRegisteRet_SSInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToGS.AskRegisteRet.SSInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.ip_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.ssid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.netstate_) -
        reinterpret_cast<char*>(&_impl_.ssid_)) + sizeof(_impl_.netstate_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskRegisteRet_SSInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 38, 2> AskRegisteRet_SSInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AskRegisteRet_SSInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToGS::AskRegisteRet_SSInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 netstate = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskRegisteRet_SSInfo, _impl_.netstate_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_.netstate_)}},
    // optional int32 ssid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskRegisteRet_SSInfo, _impl_.ssid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_.ssid_)}},
    // optional string ip = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_.ip_)}},
    // optional int32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskRegisteRet_SSInfo, _impl_.port_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 ssid = 1;
    {PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_.ssid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string ip = 2;
    {PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_.ip_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 port = 3;
    {PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_.port_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 netstate = 4;
    {PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_.netstate_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\33\0\2\0\0\0\0\0"
    "CSToGS.AskRegisteRet.SSInfo"
    "ip"
  }},
};

::uint8_t* AskRegisteRet_SSInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToGS.AskRegisteRet.SSInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 ssid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_ssid(), target);
  }

  // optional string ip = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToGS.AskRegisteRet.SSInfo.ip");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 port = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_port(), target);
  }

  // optional int32 netstate = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_netstate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToGS.AskRegisteRet.SSInfo)
  return target;
}

::size_t AskRegisteRet_SSInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToGS.AskRegisteRet.SSInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string ip = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ip());
    }

    // optional int32 ssid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ssid());
    }

    // optional int32 port = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_port());
    }

    // optional int32 netstate = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_netstate());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskRegisteRet_SSInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskRegisteRet_SSInfo*>(&to_msg);
  auto& from = static_cast<const AskRegisteRet_SSInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToGS.AskRegisteRet.SSInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_ip(from._internal_ip());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ssid_ = from._impl_.ssid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.port_ = from._impl_.port_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.netstate_ = from._impl_.netstate_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskRegisteRet_SSInfo::CopyFrom(const AskRegisteRet_SSInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToGS.AskRegisteRet.SSInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskRegisteRet_SSInfo::IsInitialized() const {
  return true;
}

void AskRegisteRet_SSInfo::InternalSwap(AskRegisteRet_SSInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_.netstate_)
      + sizeof(AskRegisteRet_SSInfo::_impl_.netstate_)
      - PROTOBUF_FIELD_OFFSET(AskRegisteRet_SSInfo, _impl_.ssid_)>(
          reinterpret_cast<char*>(&_impl_.ssid_),
          reinterpret_cast<char*>(&other->_impl_.ssid_));
}

::google::protobuf::Metadata AskRegisteRet_SSInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToGS_2eproto_getter,
                                   &descriptor_table_CSToGS_2eproto_once,
                                   file_level_metadata_CSToGS_2eproto[1]);
}
// ===================================================================

class AskRegisteRet::_Internal {
 public:
  using HasBits = decltype(std::declval<AskRegisteRet>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_._has_bits_);
};

AskRegisteRet::AskRegisteRet(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToGS.AskRegisteRet)
}
inline PROTOBUF_NDEBUG_INLINE AskRegisteRet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ssinfo_{visibility, arena, from.ssinfo_} {}

AskRegisteRet::AskRegisteRet(
    ::google::protobuf::Arena* arena,
    const AskRegisteRet& from)
    : ::google::protobuf::Message(arena) {
  AskRegisteRet* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, curtime_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, curtime_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, curtime_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:CSToGS.AskRegisteRet)
}
inline PROTOBUF_NDEBUG_INLINE AskRegisteRet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ssinfo_{visibility, arena},
        msgid_{static_cast< ::CSToGS::MsgID >(24578)} {}

inline void AskRegisteRet::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, curtime_),
           0,
           offsetof(Impl_, ssbaseid_) -
               offsetof(Impl_, curtime_) +
               sizeof(Impl_::ssbaseid_));
}
AskRegisteRet::~AskRegisteRet() {
  // @@protoc_insertion_point(destructor:CSToGS.AskRegisteRet)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskRegisteRet::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskRegisteRet::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_._cached_size_),
              false,
          },
          &AskRegisteRet::MergeImpl,
          &AskRegisteRet::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskRegisteRet::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToGS.AskRegisteRet)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ssinfo_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.curtime_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ssbaseid_) -
        reinterpret_cast<char*>(&_impl_.curtime_)) + sizeof(_impl_.ssbaseid_));
    _impl_.msgid_ = 24578;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskRegisteRet::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> AskRegisteRet::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskRegisteRet_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToGS::AskRegisteRet>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_AskRegisteRet];
    {::_pbi::TcParser::FastEvS1,
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.msgid_)}},
    // optional int32 registe = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskRegisteRet, _impl_.registe_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.registe_)}},
    // optional int64 curtime = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AskRegisteRet, _impl_.curtime_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.curtime_)}},
    // optional uint32 ssbaseid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskRegisteRet, _impl_.ssbaseid_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.ssbaseid_)}},
    // repeated .CSToGS.AskRegisteRet.SSInfo ssinfo = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.ssinfo_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_AskRegisteRet];
    {PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.msgid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 registe = 2;
    {PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.registe_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 curtime = 3;
    {PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.curtime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional uint32 ssbaseid = 4;
    {PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.ssbaseid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .CSToGS.AskRegisteRet.SSInfo ssinfo = 5;
    {PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.ssinfo_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::CSToGS::MsgID_internal_data_},
    {::_pbi::TcParser::GetTable<::CSToGS::AskRegisteRet_SSInfo>()},
  }}, {{
  }},
};

::uint8_t* AskRegisteRet::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToGS.AskRegisteRet)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_AskRegisteRet];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional int32 registe = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_registe(), target);
  }

  // optional int64 curtime = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_curtime(), target);
  }

  // optional uint32 ssbaseid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_ssbaseid(), target);
  }

  // repeated .CSToGS.AskRegisteRet.SSInfo ssinfo = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ssinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_ssinfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToGS.AskRegisteRet)
  return target;
}

::size_t AskRegisteRet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToGS.AskRegisteRet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSToGS.AskRegisteRet.SSInfo ssinfo = 5;
  total_size += 1UL * this->_internal_ssinfo_size();
  for (const auto& msg : this->_internal_ssinfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int64 curtime = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_curtime());
    }

    // optional int32 registe = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_registe());
    }

    // optional uint32 ssbaseid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ssbaseid());
    }

    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_AskRegisteRet];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskRegisteRet::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskRegisteRet*>(&to_msg);
  auto& from = static_cast<const AskRegisteRet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToGS.AskRegisteRet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ssinfo()->MergeFrom(
      from._internal_ssinfo());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.curtime_ = from._impl_.curtime_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.registe_ = from._impl_.registe_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.ssbaseid_ = from._impl_.ssbaseid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskRegisteRet::CopyFrom(const AskRegisteRet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToGS.AskRegisteRet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskRegisteRet::IsInitialized() const {
  return true;
}

void AskRegisteRet::InternalSwap(AskRegisteRet* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ssinfo_.InternalSwap(&other->_impl_.ssinfo_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.msgid_)
      + sizeof(AskRegisteRet::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(AskRegisteRet, _impl_.curtime_)>(
          reinterpret_cast<char*>(&_impl_.curtime_),
          reinterpret_cast<char*>(&other->_impl_.curtime_));
}

::google::protobuf::Metadata AskRegisteRet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToGS_2eproto_getter,
                                   &descriptor_table_CSToGS_2eproto_once,
                                   file_level_metadata_CSToGS_2eproto[2]);
}
// ===================================================================

class OrderPostToGC_UserNetInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<OrderPostToGC_UserNetInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OrderPostToGC_UserNetInfo, _impl_._has_bits_);
};

OrderPostToGC_UserNetInfo::OrderPostToGC_UserNetInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToGS.OrderPostToGC.UserNetInfo)
}
OrderPostToGC_UserNetInfo::OrderPostToGC_UserNetInfo(
    ::google::protobuf::Arena* arena, const OrderPostToGC_UserNetInfo& from)
    : OrderPostToGC_UserNetInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE OrderPostToGC_UserNetInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void OrderPostToGC_UserNetInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           0,
           offsetof(Impl_, gcnid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::gcnid_));
}
OrderPostToGC_UserNetInfo::~OrderPostToGC_UserNetInfo() {
  // @@protoc_insertion_point(destructor:CSToGS.OrderPostToGC.UserNetInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OrderPostToGC_UserNetInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
OrderPostToGC_UserNetInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(OrderPostToGC_UserNetInfo, _impl_._cached_size_),
              false,
          },
          &OrderPostToGC_UserNetInfo::MergeImpl,
          &OrderPostToGC_UserNetInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void OrderPostToGC_UserNetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToGS.OrderPostToGC.UserNetInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.gsid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.gcnid_) -
        reinterpret_cast<char*>(&_impl_.gsid_)) + sizeof(_impl_.gcnid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OrderPostToGC_UserNetInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> OrderPostToGC_UserNetInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderPostToGC_UserNetInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OrderPostToGC_UserNetInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToGS::OrderPostToGC_UserNetInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 gcnid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderPostToGC_UserNetInfo, _impl_.gcnid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(OrderPostToGC_UserNetInfo, _impl_.gcnid_)}},
    // optional int32 gsid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderPostToGC_UserNetInfo, _impl_.gsid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(OrderPostToGC_UserNetInfo, _impl_.gsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 gsid = 1;
    {PROTOBUF_FIELD_OFFSET(OrderPostToGC_UserNetInfo, _impl_.gsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 gcnid = 2;
    {PROTOBUF_FIELD_OFFSET(OrderPostToGC_UserNetInfo, _impl_.gcnid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* OrderPostToGC_UserNetInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToGS.OrderPostToGC.UserNetInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 gsid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_gsid(), target);
  }

  // optional int32 gcnid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_gcnid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToGS.OrderPostToGC.UserNetInfo)
  return target;
}

::size_t OrderPostToGC_UserNetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToGS.OrderPostToGC.UserNetInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 gsid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gsid());
    }

    // optional int32 gcnid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gcnid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void OrderPostToGC_UserNetInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderPostToGC_UserNetInfo*>(&to_msg);
  auto& from = static_cast<const OrderPostToGC_UserNetInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToGS.OrderPostToGC.UserNetInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.gsid_ = from._impl_.gsid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.gcnid_ = from._impl_.gcnid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderPostToGC_UserNetInfo::CopyFrom(const OrderPostToGC_UserNetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToGS.OrderPostToGC.UserNetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OrderPostToGC_UserNetInfo::IsInitialized() const {
  return true;
}

void OrderPostToGC_UserNetInfo::InternalSwap(OrderPostToGC_UserNetInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderPostToGC_UserNetInfo, _impl_.gcnid_)
      + sizeof(OrderPostToGC_UserNetInfo::_impl_.gcnid_)
      - PROTOBUF_FIELD_OFFSET(OrderPostToGC_UserNetInfo, _impl_.gsid_)>(
          reinterpret_cast<char*>(&_impl_.gsid_),
          reinterpret_cast<char*>(&other->_impl_.gsid_));
}

::google::protobuf::Metadata OrderPostToGC_UserNetInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToGS_2eproto_getter,
                                   &descriptor_table_CSToGS_2eproto_once,
                                   file_level_metadata_CSToGS_2eproto[3]);
}
// ===================================================================

class OrderPostToGC::_Internal {
 public:
  using HasBits = decltype(std::declval<OrderPostToGC>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_._has_bits_);
};

OrderPostToGC::OrderPostToGC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToGS.OrderPostToGC)
}
inline PROTOBUF_NDEBUG_INLINE OrderPostToGC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        usernetinfo_{visibility, arena, from.usernetinfo_},
        othermsg_(arena, from.othermsg_) {}

OrderPostToGC::OrderPostToGC(
    ::google::protobuf::Arena* arena,
    const OrderPostToGC& from)
    : ::google::protobuf::Message(arena) {
  OrderPostToGC* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, othermsgid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, othermsgid_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, othermsgid_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:CSToGS.OrderPostToGC)
}
inline PROTOBUF_NDEBUG_INLINE OrderPostToGC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        usernetinfo_{visibility, arena},
        othermsg_(arena),
        msgid_{static_cast< ::CSToGS::MsgID >(24581)} {}

inline void OrderPostToGC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.othermsgid_ = {};
}
OrderPostToGC::~OrderPostToGC() {
  // @@protoc_insertion_point(destructor:CSToGS.OrderPostToGC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OrderPostToGC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.othermsg_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
OrderPostToGC::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_._cached_size_),
              false,
          },
          &OrderPostToGC::MergeImpl,
          &OrderPostToGC::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void OrderPostToGC::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToGS.OrderPostToGC)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.usernetinfo_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.othermsg_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    _impl_.othermsgid_ = 0;
    _impl_.msgid_ = 24581;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OrderPostToGC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> OrderPostToGC::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OrderPostToGC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToGS::OrderPostToGC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes othermsg = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_.othermsg_)}},
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderPostToGC];
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_.msgid_)}},
    // repeated .CSToGS.OrderPostToGC.UserNetInfo usernetinfo = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_.usernetinfo_)}},
    // optional int32 othermsgid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderPostToGC, _impl_.othermsgid_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_.othermsgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderPostToGC];
    {PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_.msgid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // repeated .CSToGS.OrderPostToGC.UserNetInfo usernetinfo = 2;
    {PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_.usernetinfo_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 othermsgid = 3;
    {PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_.othermsgid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes othermsg = 4;
    {PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_.othermsg_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::CSToGS::MsgID_internal_data_},
    {::_pbi::TcParser::GetTable<::CSToGS::OrderPostToGC_UserNetInfo>()},
  }}, {{
  }},
};

::uint8_t* OrderPostToGC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToGS.OrderPostToGC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderPostToGC];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // repeated .CSToGS.OrderPostToGC.UserNetInfo usernetinfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_usernetinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_usernetinfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int32 othermsgid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_othermsgid(), target);
  }

  // optional bytes othermsg = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_othermsg();
    target = stream->WriteBytesMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToGS.OrderPostToGC)
  return target;
}

::size_t OrderPostToGC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToGS.OrderPostToGC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CSToGS.OrderPostToGC.UserNetInfo usernetinfo = 2;
  total_size += 1UL * this->_internal_usernetinfo_size();
  for (const auto& msg : this->_internal_usernetinfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes othermsg = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_othermsg());
    }

    // optional int32 othermsgid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_othermsgid());
    }

    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderPostToGC];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void OrderPostToGC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderPostToGC*>(&to_msg);
  auto& from = static_cast<const OrderPostToGC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToGS.OrderPostToGC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_usernetinfo()->MergeFrom(
      from._internal_usernetinfo());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_othermsg(from._internal_othermsg());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.othermsgid_ = from._impl_.othermsgid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderPostToGC::CopyFrom(const OrderPostToGC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToGS.OrderPostToGC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OrderPostToGC::IsInitialized() const {
  return true;
}

void OrderPostToGC::InternalSwap(OrderPostToGC* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.usernetinfo_.InternalSwap(&other->_impl_.usernetinfo_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.othermsg_, &other->_impl_.othermsg_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_.msgid_)
      + sizeof(OrderPostToGC::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(OrderPostToGC, _impl_.othermsgid_)>(
          reinterpret_cast<char*>(&_impl_.othermsgid_),
          reinterpret_cast<char*>(&other->_impl_.othermsgid_));
}

::google::protobuf::Metadata OrderPostToGC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToGS_2eproto_getter,
                                   &descriptor_table_CSToGS_2eproto_once,
                                   file_level_metadata_CSToGS_2eproto[4]);
}
// ===================================================================

class OrderKickoutGC::_Internal {
 public:
  using HasBits = decltype(std::declval<OrderKickoutGC>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OrderKickoutGC, _impl_._has_bits_);
};

OrderKickoutGC::OrderKickoutGC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToGS.OrderKickoutGC)
}
OrderKickoutGC::OrderKickoutGC(
    ::google::protobuf::Arena* arena, const OrderKickoutGC& from)
    : OrderKickoutGC(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE OrderKickoutGC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msgid_{static_cast< ::CSToGS::MsgID >(24582)} {}

inline void OrderKickoutGC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gcnid_ = {};
}
OrderKickoutGC::~OrderKickoutGC() {
  // @@protoc_insertion_point(destructor:CSToGS.OrderKickoutGC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OrderKickoutGC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
OrderKickoutGC::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(OrderKickoutGC, _impl_._cached_size_),
              false,
          },
          &OrderKickoutGC::MergeImpl,
          &OrderKickoutGC::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void OrderKickoutGC::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToGS.OrderKickoutGC)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.gcnid_ = 0;
    _impl_.msgid_ = 24582;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OrderKickoutGC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> OrderKickoutGC::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderKickoutGC, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OrderKickoutGC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToGS::OrderKickoutGC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 gcnid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderKickoutGC, _impl_.gcnid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(OrderKickoutGC, _impl_.gcnid_)}},
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderKickoutGC];
    {::_pbi::TcParser::FastEvS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(OrderKickoutGC, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderKickoutGC];
    {PROTOBUF_FIELD_OFFSET(OrderKickoutGC, _impl_.msgid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 gcnid = 2;
    {PROTOBUF_FIELD_OFFSET(OrderKickoutGC, _impl_.gcnid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::CSToGS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* OrderKickoutGC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToGS.OrderKickoutGC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderKickoutGC];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional int32 gcnid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_gcnid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToGS.OrderKickoutGC)
  return target;
}

::size_t OrderKickoutGC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToGS.OrderKickoutGC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 gcnid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gcnid());
    }

    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OrderKickoutGC];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void OrderKickoutGC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderKickoutGC*>(&to_msg);
  auto& from = static_cast<const OrderKickoutGC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToGS.OrderKickoutGC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.gcnid_ = from._impl_.gcnid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderKickoutGC::CopyFrom(const OrderKickoutGC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToGS.OrderKickoutGC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OrderKickoutGC::IsInitialized() const {
  return true;
}

void OrderKickoutGC::InternalSwap(OrderKickoutGC* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderKickoutGC, _impl_.msgid_)
      + sizeof(OrderKickoutGC::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(OrderKickoutGC, _impl_.gcnid_)>(
          reinterpret_cast<char*>(&_impl_.gcnid_),
          reinterpret_cast<char*>(&other->_impl_.gcnid_));
}

::google::protobuf::Metadata OrderKickoutGC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToGS_2eproto_getter,
                                   &descriptor_table_CSToGS_2eproto_once,
                                   file_level_metadata_CSToGS_2eproto[5]);
}
// ===================================================================

class OneSSConnected::_Internal {
 public:
  using HasBits = decltype(std::declval<OneSSConnected>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_._has_bits_);
};

OneSSConnected::OneSSConnected(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToGS.OneSSConnected)
}
inline PROTOBUF_NDEBUG_INLINE OneSSConnected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ip_(arena, from.ip_) {}

OneSSConnected::OneSSConnected(
    ::google::protobuf::Arena* arena,
    const OneSSConnected& from)
    : ::google::protobuf::Message(arena) {
  OneSSConnected* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, time_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:CSToGS.OneSSConnected)
}
inline PROTOBUF_NDEBUG_INLINE OneSSConnected::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ip_(arena),
        msgid_{static_cast< ::CSToGS::MsgID >(24583)} {}

inline void OneSSConnected::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, basessid_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::basessid_));
}
OneSSConnected::~OneSSConnected() {
  // @@protoc_insertion_point(destructor:CSToGS.OneSSConnected)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OneSSConnected::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
OneSSConnected::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_._cached_size_),
              false,
          },
          &OneSSConnected::MergeImpl,
          &OneSSConnected::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void OneSSConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToGS.OneSSConnected)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.ip_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.basessid_) -
        reinterpret_cast<char*>(&_impl_.time_)) + sizeof(_impl_.basessid_));
    _impl_.msgid_ = 24583;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OneSSConnected::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 40, 2> OneSSConnected::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OneSSConnected_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToGS::OneSSConnected>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 basessid = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OneSSConnected, _impl_.basessid_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.basessid_)}},
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OneSSConnected];
    {::_pbi::TcParser::FastEvS1,
     {8, 7, 0, PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.msgid_)}},
    // optional int32 state = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OneSSConnected, _impl_.state_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.state_)}},
    // optional int64 time = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OneSSConnected, _impl_.time_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.time_)}},
    // optional int32 ssid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OneSSConnected, _impl_.ssid_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.ssid_)}},
    // optional string ip = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.ip_)}},
    // optional int32 port = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OneSSConnected, _impl_.port_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.port_)}},
    // optional int32 netstate = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OneSSConnected, _impl_.netstate_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.netstate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OneSSConnected];
    {PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.msgid_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 state = 2;
    {PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.state_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 time = 3;
    {PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.time_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 ssid = 4;
    {PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.ssid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string ip = 5;
    {PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.ip_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 port = 6;
    {PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.port_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 netstate = 7;
    {PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.netstate_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 basessid = 8;
    {PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.basessid_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::CSToGS::MsgID_internal_data_},
  }}, {{
    "\25\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0"
    "CSToGS.OneSSConnected"
    "ip"
  }},
};

::uint8_t* OneSSConnected::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToGS.OneSSConnected)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OneSSConnected];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional int32 state = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_state(), target);
  }

  // optional int64 time = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_time(), target);
  }

  // optional int32 ssid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_ssid(), target);
  }

  // optional string ip = 5;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CSToGS.OneSSConnected.ip");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional int32 port = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_port(), target);
  }

  // optional int32 netstate = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_netstate(), target);
  }

  // optional int32 basessid = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_basessid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToGS.OneSSConnected)
  return target;
}

::size_t OneSSConnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToGS.OneSSConnected)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string ip = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_ip());
    }

    // optional int64 time = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_time());
    }

    // optional int32 state = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_state());
    }

    // optional int32 ssid = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ssid());
    }

    // optional int32 port = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_port());
    }

    // optional int32 netstate = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_netstate());
    }

    // optional int32 basessid = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_basessid());
    }

    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_OneSSConnected];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void OneSSConnected::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OneSSConnected*>(&to_msg);
  auto& from = static_cast<const OneSSConnected&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToGS.OneSSConnected)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_ip(from._internal_ip());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.time_ = from._impl_.time_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.state_ = from._impl_.state_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.ssid_ = from._impl_.ssid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.port_ = from._impl_.port_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.netstate_ = from._impl_.netstate_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.basessid_ = from._impl_.basessid_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OneSSConnected::CopyFrom(const OneSSConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToGS.OneSSConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OneSSConnected::IsInitialized() const {
  return true;
}

void OneSSConnected::InternalSwap(OneSSConnected* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.msgid_)
      + sizeof(OneSSConnected::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(OneSSConnected, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata OneSSConnected::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToGS_2eproto_getter,
                                   &descriptor_table_CSToGS_2eproto_once,
                                   file_level_metadata_CSToGS_2eproto[6]);
}
// ===================================================================

class UserConnectedSS::_Internal {
 public:
  using HasBits = decltype(std::declval<UserConnectedSS>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_._has_bits_);
};

UserConnectedSS::UserConnectedSS(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToGS.UserConnectedSS)
}
inline PROTOBUF_NDEBUG_INLINE UserConnectedSS::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        gcnid_{visibility, arena, from.gcnid_} {}

UserConnectedSS::UserConnectedSS(
    ::google::protobuf::Arena* arena,
    const UserConnectedSS& from)
    : ::google::protobuf::Message(arena) {
  UserConnectedSS* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, battleid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, battleid_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, battleid_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:CSToGS.UserConnectedSS)
}
inline PROTOBUF_NDEBUG_INLINE UserConnectedSS::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        gcnid_{visibility, arena},
        msgid_{static_cast< ::CSToGS::MsgID >(24584)} {}

inline void UserConnectedSS::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, battleid_),
           0,
           offsetof(Impl_, ssid_) -
               offsetof(Impl_, battleid_) +
               sizeof(Impl_::ssid_));
}
UserConnectedSS::~UserConnectedSS() {
  // @@protoc_insertion_point(destructor:CSToGS.UserConnectedSS)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserConnectedSS::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserConnectedSS::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_._cached_size_),
              false,
          },
          &UserConnectedSS::MergeImpl,
          &UserConnectedSS::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UserConnectedSS::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToGS.UserConnectedSS)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gcnid_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.battleid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ssid_) -
        reinterpret_cast<char*>(&_impl_.battleid_)) + sizeof(_impl_.ssid_));
    _impl_.msgid_ = 24584;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserConnectedSS::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> UserConnectedSS::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserConnectedSS_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToGS::UserConnectedSS>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint64 battleid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UserConnectedSS, _impl_.battleid_), 0>(),
     {32, 0, 0, PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_.battleid_)}},
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserConnectedSS];
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_.msgid_)}},
    // optional int32 ssid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserConnectedSS, _impl_.ssid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_.ssid_)}},
    // repeated int32 gcnid = 3;
    {::_pbi::TcParser::FastV32R1,
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_.gcnid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserConnectedSS];
    {PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_.msgid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 ssid = 2;
    {PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_.ssid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 gcnid = 3;
    {PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_.gcnid_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // optional uint64 battleid = 4;
    {PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_.battleid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::CSToGS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* UserConnectedSS::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToGS.UserConnectedSS)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserConnectedSS];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional int32 ssid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_ssid(), target);
  }

  // repeated int32 gcnid = 3;
  for (int i = 0, n = this->_internal_gcnid_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        3, this->_internal_gcnid().Get(i), target);
  }

  // optional uint64 battleid = 4;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_battleid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToGS.UserConnectedSS)
  return target;
}

::size_t UserConnectedSS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToGS.UserConnectedSS)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 gcnid = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_gcnid())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_gcnid_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 battleid = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_battleid());
    }

    // optional int32 ssid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ssid());
    }

    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserConnectedSS];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserConnectedSS::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserConnectedSS*>(&to_msg);
  auto& from = static_cast<const UserConnectedSS&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToGS.UserConnectedSS)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_gcnid()->MergeFrom(from._internal_gcnid());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.battleid_ = from._impl_.battleid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ssid_ = from._impl_.ssid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserConnectedSS::CopyFrom(const UserConnectedSS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToGS.UserConnectedSS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserConnectedSS::IsInitialized() const {
  return true;
}

void UserConnectedSS::InternalSwap(UserConnectedSS* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.gcnid_.InternalSwap(&other->_impl_.gcnid_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_.msgid_)
      + sizeof(UserConnectedSS::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(UserConnectedSS, _impl_.battleid_)>(
          reinterpret_cast<char*>(&_impl_.battleid_),
          reinterpret_cast<char*>(&other->_impl_.battleid_));
}

::google::protobuf::Metadata UserConnectedSS::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToGS_2eproto_getter,
                                   &descriptor_table_CSToGS_2eproto_once,
                                   file_level_metadata_CSToGS_2eproto[7]);
}
// ===================================================================

class UserDisConnectedSS::_Internal {
 public:
  using HasBits = decltype(std::declval<UserDisConnectedSS>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserDisConnectedSS, _impl_._has_bits_);
};

UserDisConnectedSS::UserDisConnectedSS(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CSToGS.UserDisConnectedSS)
}
inline PROTOBUF_NDEBUG_INLINE UserDisConnectedSS::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        gcnid_{visibility, arena, from.gcnid_} {}

UserDisConnectedSS::UserDisConnectedSS(
    ::google::protobuf::Arena* arena,
    const UserDisConnectedSS& from)
    : ::google::protobuf::Message(arena) {
  UserDisConnectedSS* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.msgid_ = from._impl_.msgid_;

  // @@protoc_insertion_point(copy_constructor:CSToGS.UserDisConnectedSS)
}
inline PROTOBUF_NDEBUG_INLINE UserDisConnectedSS::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        gcnid_{visibility, arena},
        msgid_{static_cast< ::CSToGS::MsgID >(24585)} {}

inline void UserDisConnectedSS::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserDisConnectedSS::~UserDisConnectedSS() {
  // @@protoc_insertion_point(destructor:CSToGS.UserDisConnectedSS)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserDisConnectedSS::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserDisConnectedSS::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserDisConnectedSS, _impl_._cached_size_),
              false,
          },
          &UserDisConnectedSS::MergeImpl,
          &UserDisConnectedSS::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UserDisConnectedSS::Clear() {
// @@protoc_insertion_point(message_clear_start:CSToGS.UserDisConnectedSS)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gcnid_.Clear();
  _impl_.msgid_ = 24585;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserDisConnectedSS::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> UserDisConnectedSS::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserDisConnectedSS, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserDisConnectedSS_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CSToGS::UserDisConnectedSS>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated int32 gcnid = 2;
    {::_pbi::TcParser::FastV32R1,
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UserDisConnectedSS, _impl_.gcnid_)}},
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserDisConnectedSS];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(UserDisConnectedSS, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserDisConnectedSS];
    {PROTOBUF_FIELD_OFFSET(UserDisConnectedSS, _impl_.msgid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // repeated int32 gcnid = 2;
    {PROTOBUF_FIELD_OFFSET(UserDisConnectedSS, _impl_.gcnid_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::CSToGS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* UserDisConnectedSS::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSToGS.UserDisConnectedSS)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserDisConnectedSS];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // repeated int32 gcnid = 2;
  for (int i = 0, n = this->_internal_gcnid_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        2, this->_internal_gcnid().Get(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSToGS.UserDisConnectedSS)
  return target;
}

::size_t UserDisConnectedSS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSToGS.UserDisConnectedSS)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 gcnid = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_gcnid())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_gcnid_size());
    ;
    total_size += tag_size + data_size;
  }
  // optional .CSToGS.MsgID msgid = 1 [default = eMsgToGSFromCS_UserDisConnectedSS];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserDisConnectedSS::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserDisConnectedSS*>(&to_msg);
  auto& from = static_cast<const UserDisConnectedSS&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CSToGS.UserDisConnectedSS)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_gcnid()->MergeFrom(from._internal_gcnid());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.msgid_ = from._impl_.msgid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserDisConnectedSS::CopyFrom(const UserDisConnectedSS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSToGS.UserDisConnectedSS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserDisConnectedSS::IsInitialized() const {
  return true;
}

void UserDisConnectedSS::InternalSwap(UserDisConnectedSS* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.gcnid_.InternalSwap(&other->_impl_.gcnid_);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata UserDisConnectedSS::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_CSToGS_2eproto_getter,
                                   &descriptor_table_CSToGS_2eproto_once,
                                   file_level_metadata_CSToGS_2eproto[8]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace CSToGS
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_CSToGS_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
