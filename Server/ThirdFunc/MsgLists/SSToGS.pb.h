// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SSToGS.proto
// Protobuf C++ Version: 4.26.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_SSToGS_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_SSToGS_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 4026000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_SSToGS_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_SSToGS_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_SSToGS_2eproto;
namespace SSToGS {
class AskPingRet;
struct AskPingRetDefaultTypeInternal;
extern AskPingRetDefaultTypeInternal _AskPingRet_default_instance_;
class AskRegisteRet;
struct AskRegisteRetDefaultTypeInternal;
extern AskRegisteRetDefaultTypeInternal _AskRegisteRet_default_instance_;
class OrderKickoutGC;
struct OrderKickoutGCDefaultTypeInternal;
extern OrderKickoutGCDefaultTypeInternal _OrderKickoutGC_default_instance_;
class OrderPostToGC;
struct OrderPostToGCDefaultTypeInternal;
extern OrderPostToGCDefaultTypeInternal _OrderPostToGC_default_instance_;
class OrderPostToGC_UserNetInfo;
struct OrderPostToGC_UserNetInfoDefaultTypeInternal;
extern OrderPostToGC_UserNetInfoDefaultTypeInternal _OrderPostToGC_UserNetInfo_default_instance_;
}  // namespace SSToGS
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace SSToGS {
enum MsgID : int {
  eMsgToGSFromSS_Begin = 24576,
  eMsgToGSFromSS_AskPingRet = 24577,
  eMsgToGSFromSS_AskRegisteRet = 24578,
  eMsgToGSFromSS_OrderPostToGC = 24579,
  eMsgToGSFromSS_OrderKickoutGC = 24580,
  eMsgToGSFromSS_End = 25000,
};

bool MsgID_IsValid(int value);
extern const uint32_t MsgID_internal_data_[];
constexpr MsgID MsgID_MIN = static_cast<MsgID>(24576);
constexpr MsgID MsgID_MAX = static_cast<MsgID>(25000);
constexpr int MsgID_ARRAYSIZE = 25000 + 1;
const ::google::protobuf::EnumDescriptor*
MsgID_descriptor();
template <typename T>
const std::string& MsgID_Name(T value) {
  static_assert(std::is_same<T, MsgID>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MsgID_Name().");
  return ::google::protobuf::internal::NameOfEnum(MsgID_descriptor(), value);
}
inline bool MsgID_Parse(absl::string_view name, MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgID>(
      MsgID_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class OrderPostToGC_UserNetInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SSToGS.OrderPostToGC.UserNetInfo) */ {
 public:
  inline OrderPostToGC_UserNetInfo() : OrderPostToGC_UserNetInfo(nullptr) {}
  ~OrderPostToGC_UserNetInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderPostToGC_UserNetInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderPostToGC_UserNetInfo(const OrderPostToGC_UserNetInfo& from) : OrderPostToGC_UserNetInfo(nullptr, from) {}
  inline OrderPostToGC_UserNetInfo(OrderPostToGC_UserNetInfo&& from) noexcept
      : OrderPostToGC_UserNetInfo(nullptr, std::move(from)) {}
  inline OrderPostToGC_UserNetInfo& operator=(const OrderPostToGC_UserNetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderPostToGC_UserNetInfo& operator=(OrderPostToGC_UserNetInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderPostToGC_UserNetInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderPostToGC_UserNetInfo* internal_default_instance() {
    return reinterpret_cast<const OrderPostToGC_UserNetInfo*>(
        &_OrderPostToGC_UserNetInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(OrderPostToGC_UserNetInfo& a, OrderPostToGC_UserNetInfo& b) { a.Swap(&b); }
  inline void Swap(OrderPostToGC_UserNetInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderPostToGC_UserNetInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderPostToGC_UserNetInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OrderPostToGC_UserNetInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderPostToGC_UserNetInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderPostToGC_UserNetInfo& from) { OrderPostToGC_UserNetInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OrderPostToGC_UserNetInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SSToGS.OrderPostToGC.UserNetInfo"; }

 protected:
  explicit OrderPostToGC_UserNetInfo(::google::protobuf::Arena* arena);
  OrderPostToGC_UserNetInfo(::google::protobuf::Arena* arena, const OrderPostToGC_UserNetInfo& from);
  OrderPostToGC_UserNetInfo(::google::protobuf::Arena* arena, OrderPostToGC_UserNetInfo&& from) noexcept
      : OrderPostToGC_UserNetInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGsidFieldNumber = 1,
    kGcnidFieldNumber = 2,
  };
  // optional int32 gsid = 1;
  bool has_gsid() const;
  void clear_gsid() ;
  ::int32_t gsid() const;
  void set_gsid(::int32_t value);

  private:
  ::int32_t _internal_gsid() const;
  void _internal_set_gsid(::int32_t value);

  public:
  // optional int32 gcnid = 2;
  bool has_gcnid() const;
  void clear_gcnid() ;
  ::int32_t gcnid() const;
  void set_gcnid(::int32_t value);

  private:
  ::int32_t _internal_gcnid() const;
  void _internal_set_gcnid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SSToGS.OrderPostToGC.UserNetInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t gsid_;
    ::int32_t gcnid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SSToGS_2eproto;
};
// -------------------------------------------------------------------

class OrderKickoutGC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SSToGS.OrderKickoutGC) */ {
 public:
  inline OrderKickoutGC() : OrderKickoutGC(nullptr) {}
  ~OrderKickoutGC() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderKickoutGC(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderKickoutGC(const OrderKickoutGC& from) : OrderKickoutGC(nullptr, from) {}
  inline OrderKickoutGC(OrderKickoutGC&& from) noexcept
      : OrderKickoutGC(nullptr, std::move(from)) {}
  inline OrderKickoutGC& operator=(const OrderKickoutGC& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderKickoutGC& operator=(OrderKickoutGC&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderKickoutGC& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderKickoutGC* internal_default_instance() {
    return reinterpret_cast<const OrderKickoutGC*>(
        &_OrderKickoutGC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(OrderKickoutGC& a, OrderKickoutGC& b) { a.Swap(&b); }
  inline void Swap(OrderKickoutGC* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderKickoutGC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderKickoutGC* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OrderKickoutGC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderKickoutGC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderKickoutGC& from) { OrderKickoutGC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OrderKickoutGC* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SSToGS.OrderKickoutGC"; }

 protected:
  explicit OrderKickoutGC(::google::protobuf::Arena* arena);
  OrderKickoutGC(::google::protobuf::Arena* arena, const OrderKickoutGC& from);
  OrderKickoutGC(::google::protobuf::Arena* arena, OrderKickoutGC&& from) noexcept
      : OrderKickoutGC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGsnidFieldNumber = 2,
    kMgsidFieldNumber = 1,
  };
  // optional int32 gsnid = 2;
  bool has_gsnid() const;
  void clear_gsnid() ;
  ::int32_t gsnid() const;
  void set_gsnid(::int32_t value);

  private:
  ::int32_t _internal_gsnid() const;
  void _internal_set_gsnid(::int32_t value);

  public:
  // optional .SSToGS.MsgID mgsid = 1 [default = eMsgToGSFromSS_OrderKickoutGC];
  bool has_mgsid() const;
  void clear_mgsid() ;
  ::SSToGS::MsgID mgsid() const;
  void set_mgsid(::SSToGS::MsgID value);

  private:
  ::SSToGS::MsgID _internal_mgsid() const;
  void _internal_set_mgsid(::SSToGS::MsgID value);

  public:
  // @@protoc_insertion_point(class_scope:SSToGS.OrderKickoutGC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t gsnid_;
    int mgsid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SSToGS_2eproto;
};
// -------------------------------------------------------------------

class AskRegisteRet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SSToGS.AskRegisteRet) */ {
 public:
  inline AskRegisteRet() : AskRegisteRet(nullptr) {}
  ~AskRegisteRet() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AskRegisteRet(
      ::google::protobuf::internal::ConstantInitialized);

  inline AskRegisteRet(const AskRegisteRet& from) : AskRegisteRet(nullptr, from) {}
  inline AskRegisteRet(AskRegisteRet&& from) noexcept
      : AskRegisteRet(nullptr, std::move(from)) {}
  inline AskRegisteRet& operator=(const AskRegisteRet& from) {
    CopyFrom(from);
    return *this;
  }
  inline AskRegisteRet& operator=(AskRegisteRet&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AskRegisteRet& default_instance() {
    return *internal_default_instance();
  }
  static inline const AskRegisteRet* internal_default_instance() {
    return reinterpret_cast<const AskRegisteRet*>(
        &_AskRegisteRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AskRegisteRet& a, AskRegisteRet& b) { a.Swap(&b); }
  inline void Swap(AskRegisteRet* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AskRegisteRet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AskRegisteRet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AskRegisteRet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AskRegisteRet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AskRegisteRet& from) { AskRegisteRet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AskRegisteRet* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SSToGS.AskRegisteRet"; }

 protected:
  explicit AskRegisteRet(::google::protobuf::Arena* arena);
  AskRegisteRet(::google::protobuf::Arena* arena, const AskRegisteRet& from);
  AskRegisteRet(::google::protobuf::Arena* arena, AskRegisteRet&& from) noexcept
      : AskRegisteRet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStateFieldNumber = 2,
    kMgsidFieldNumber = 1,
  };
  // optional int32 state = 2;
  bool has_state() const;
  void clear_state() ;
  ::int32_t state() const;
  void set_state(::int32_t value);

  private:
  ::int32_t _internal_state() const;
  void _internal_set_state(::int32_t value);

  public:
  // optional .SSToGS.MsgID mgsid = 1 [default = eMsgToGSFromSS_AskRegisteRet];
  bool has_mgsid() const;
  void clear_mgsid() ;
  ::SSToGS::MsgID mgsid() const;
  void set_mgsid(::SSToGS::MsgID value);

  private:
  ::SSToGS::MsgID _internal_mgsid() const;
  void _internal_set_mgsid(::SSToGS::MsgID value);

  public:
  // @@protoc_insertion_point(class_scope:SSToGS.AskRegisteRet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t state_;
    int mgsid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SSToGS_2eproto;
};
// -------------------------------------------------------------------

class AskPingRet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SSToGS.AskPingRet) */ {
 public:
  inline AskPingRet() : AskPingRet(nullptr) {}
  ~AskPingRet() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AskPingRet(
      ::google::protobuf::internal::ConstantInitialized);

  inline AskPingRet(const AskPingRet& from) : AskPingRet(nullptr, from) {}
  inline AskPingRet(AskPingRet&& from) noexcept
      : AskPingRet(nullptr, std::move(from)) {}
  inline AskPingRet& operator=(const AskPingRet& from) {
    CopyFrom(from);
    return *this;
  }
  inline AskPingRet& operator=(AskPingRet&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AskPingRet& default_instance() {
    return *internal_default_instance();
  }
  static inline const AskPingRet* internal_default_instance() {
    return reinterpret_cast<const AskPingRet*>(
        &_AskPingRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AskPingRet& a, AskPingRet& b) { a.Swap(&b); }
  inline void Swap(AskPingRet* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AskPingRet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AskPingRet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AskPingRet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AskPingRet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AskPingRet& from) { AskPingRet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AskPingRet* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SSToGS.AskPingRet"; }

 protected:
  explicit AskPingRet(::google::protobuf::Arena* arena);
  AskPingRet(::google::protobuf::Arena* arena, const AskPingRet& from);
  AskPingRet(::google::protobuf::Arena* arena, AskPingRet&& from) noexcept
      : AskPingRet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeFieldNumber = 2,
    kMgsidFieldNumber = 1,
  };
  // optional int64 time = 2;
  bool has_time() const;
  void clear_time() ;
  ::int64_t time() const;
  void set_time(::int64_t value);

  private:
  ::int64_t _internal_time() const;
  void _internal_set_time(::int64_t value);

  public:
  // optional .SSToGS.MsgID mgsid = 1 [default = eMsgToGSFromSS_AskPingRet];
  bool has_mgsid() const;
  void clear_mgsid() ;
  ::SSToGS::MsgID mgsid() const;
  void set_mgsid(::SSToGS::MsgID value);

  private:
  ::SSToGS::MsgID _internal_mgsid() const;
  void _internal_set_mgsid(::SSToGS::MsgID value);

  public:
  // @@protoc_insertion_point(class_scope:SSToGS.AskPingRet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t time_;
    int mgsid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SSToGS_2eproto;
};
// -------------------------------------------------------------------

class OrderPostToGC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:SSToGS.OrderPostToGC) */ {
 public:
  inline OrderPostToGC() : OrderPostToGC(nullptr) {}
  ~OrderPostToGC() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderPostToGC(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderPostToGC(const OrderPostToGC& from) : OrderPostToGC(nullptr, from) {}
  inline OrderPostToGC(OrderPostToGC&& from) noexcept
      : OrderPostToGC(nullptr, std::move(from)) {}
  inline OrderPostToGC& operator=(const OrderPostToGC& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderPostToGC& operator=(OrderPostToGC&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderPostToGC& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderPostToGC* internal_default_instance() {
    return reinterpret_cast<const OrderPostToGC*>(
        &_OrderPostToGC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(OrderPostToGC& a, OrderPostToGC& b) { a.Swap(&b); }
  inline void Swap(OrderPostToGC* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderPostToGC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderPostToGC* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OrderPostToGC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderPostToGC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderPostToGC& from) { OrderPostToGC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OrderPostToGC* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "SSToGS.OrderPostToGC"; }

 protected:
  explicit OrderPostToGC(::google::protobuf::Arena* arena);
  OrderPostToGC(::google::protobuf::Arena* arena, const OrderPostToGC& from);
  OrderPostToGC(::google::protobuf::Arena* arena, OrderPostToGC&& from) noexcept
      : OrderPostToGC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using UserNetInfo = OrderPostToGC_UserNetInfo;

  // accessors -------------------------------------------------------
  enum : int {
    kUsernetinfoFieldNumber = 2,
    kOthermsgFieldNumber = 4,
    kOthermsgidFieldNumber = 3,
    kMsgidFieldNumber = 1,
  };
  // repeated .SSToGS.OrderPostToGC.UserNetInfo usernetinfo = 2;
  int usernetinfo_size() const;
  private:
  int _internal_usernetinfo_size() const;

  public:
  void clear_usernetinfo() ;
  ::SSToGS::OrderPostToGC_UserNetInfo* mutable_usernetinfo(int index);
  ::google::protobuf::RepeatedPtrField<::SSToGS::OrderPostToGC_UserNetInfo>* mutable_usernetinfo();

  private:
  const ::google::protobuf::RepeatedPtrField<::SSToGS::OrderPostToGC_UserNetInfo>& _internal_usernetinfo() const;
  ::google::protobuf::RepeatedPtrField<::SSToGS::OrderPostToGC_UserNetInfo>* _internal_mutable_usernetinfo();
  public:
  const ::SSToGS::OrderPostToGC_UserNetInfo& usernetinfo(int index) const;
  ::SSToGS::OrderPostToGC_UserNetInfo* add_usernetinfo();
  const ::google::protobuf::RepeatedPtrField<::SSToGS::OrderPostToGC_UserNetInfo>& usernetinfo() const;
  // optional string othermsg = 4;
  bool has_othermsg() const;
  void clear_othermsg() ;
  const std::string& othermsg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_othermsg(Arg_&& arg, Args_... args);
  std::string* mutable_othermsg();
  PROTOBUF_NODISCARD std::string* release_othermsg();
  void set_allocated_othermsg(std::string* value);

  private:
  const std::string& _internal_othermsg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_othermsg(
      const std::string& value);
  std::string* _internal_mutable_othermsg();

  public:
  // optional int32 othermsgid = 3;
  bool has_othermsgid() const;
  void clear_othermsgid() ;
  ::int32_t othermsgid() const;
  void set_othermsgid(::int32_t value);

  private:
  ::int32_t _internal_othermsgid() const;
  void _internal_set_othermsgid(::int32_t value);

  public:
  // optional .SSToGS.MsgID msgid = 1 [default = eMsgToGSFromSS_OrderPostToGC];
  bool has_msgid() const;
  void clear_msgid() ;
  ::SSToGS::MsgID msgid() const;
  void set_msgid(::SSToGS::MsgID value);

  private:
  ::SSToGS::MsgID _internal_msgid() const;
  void _internal_set_msgid(::SSToGS::MsgID value);

  public:
  // @@protoc_insertion_point(class_scope:SSToGS.OrderPostToGC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      37, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::SSToGS::OrderPostToGC_UserNetInfo > usernetinfo_;
    ::google::protobuf::internal::ArenaStringPtr othermsg_;
    ::int32_t othermsgid_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SSToGS_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AskPingRet

// optional .SSToGS.MsgID mgsid = 1 [default = eMsgToGSFromSS_AskPingRet];
inline bool AskPingRet::has_mgsid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AskPingRet::clear_mgsid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mgsid_ = 24577;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::SSToGS::MsgID AskPingRet::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToGS.AskPingRet.mgsid)
  return _internal_mgsid();
}
inline void AskPingRet::set_mgsid(::SSToGS::MsgID value) {
  _internal_set_mgsid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:SSToGS.AskPingRet.mgsid)
}
inline ::SSToGS::MsgID AskPingRet::_internal_mgsid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::SSToGS::MsgID>(_impl_.mgsid_);
}
inline void AskPingRet::_internal_set_mgsid(::SSToGS::MsgID value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::SSToGS::MsgID_IsValid(value));
  _impl_.mgsid_ = value;
}

// optional int64 time = 2;
inline bool AskPingRet::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AskPingRet::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t AskPingRet::time() const {
  // @@protoc_insertion_point(field_get:SSToGS.AskPingRet.time)
  return _internal_time();
}
inline void AskPingRet::set_time(::int64_t value) {
  _internal_set_time(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:SSToGS.AskPingRet.time)
}
inline ::int64_t AskPingRet::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_;
}
inline void AskPingRet::_internal_set_time(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = value;
}

// -------------------------------------------------------------------

// AskRegisteRet

// optional .SSToGS.MsgID mgsid = 1 [default = eMsgToGSFromSS_AskRegisteRet];
inline bool AskRegisteRet::has_mgsid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AskRegisteRet::clear_mgsid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mgsid_ = 24578;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::SSToGS::MsgID AskRegisteRet::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToGS.AskRegisteRet.mgsid)
  return _internal_mgsid();
}
inline void AskRegisteRet::set_mgsid(::SSToGS::MsgID value) {
  _internal_set_mgsid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:SSToGS.AskRegisteRet.mgsid)
}
inline ::SSToGS::MsgID AskRegisteRet::_internal_mgsid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::SSToGS::MsgID>(_impl_.mgsid_);
}
inline void AskRegisteRet::_internal_set_mgsid(::SSToGS::MsgID value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::SSToGS::MsgID_IsValid(value));
  _impl_.mgsid_ = value;
}

// optional int32 state = 2;
inline bool AskRegisteRet::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AskRegisteRet::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t AskRegisteRet::state() const {
  // @@protoc_insertion_point(field_get:SSToGS.AskRegisteRet.state)
  return _internal_state();
}
inline void AskRegisteRet::set_state(::int32_t value) {
  _internal_set_state(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:SSToGS.AskRegisteRet.state)
}
inline ::int32_t AskRegisteRet::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_;
}
inline void AskRegisteRet::_internal_set_state(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_ = value;
}

// -------------------------------------------------------------------

// OrderPostToGC_UserNetInfo

// optional int32 gsid = 1;
inline bool OrderPostToGC_UserNetInfo::has_gsid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderPostToGC_UserNetInfo::clear_gsid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gsid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t OrderPostToGC_UserNetInfo::gsid() const {
  // @@protoc_insertion_point(field_get:SSToGS.OrderPostToGC.UserNetInfo.gsid)
  return _internal_gsid();
}
inline void OrderPostToGC_UserNetInfo::set_gsid(::int32_t value) {
  _internal_set_gsid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:SSToGS.OrderPostToGC.UserNetInfo.gsid)
}
inline ::int32_t OrderPostToGC_UserNetInfo::_internal_gsid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gsid_;
}
inline void OrderPostToGC_UserNetInfo::_internal_set_gsid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gsid_ = value;
}

// optional int32 gcnid = 2;
inline bool OrderPostToGC_UserNetInfo::has_gcnid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OrderPostToGC_UserNetInfo::clear_gcnid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gcnid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t OrderPostToGC_UserNetInfo::gcnid() const {
  // @@protoc_insertion_point(field_get:SSToGS.OrderPostToGC.UserNetInfo.gcnid)
  return _internal_gcnid();
}
inline void OrderPostToGC_UserNetInfo::set_gcnid(::int32_t value) {
  _internal_set_gcnid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:SSToGS.OrderPostToGC.UserNetInfo.gcnid)
}
inline ::int32_t OrderPostToGC_UserNetInfo::_internal_gcnid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gcnid_;
}
inline void OrderPostToGC_UserNetInfo::_internal_set_gcnid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gcnid_ = value;
}

// -------------------------------------------------------------------

// OrderPostToGC

// optional .SSToGS.MsgID msgid = 1 [default = eMsgToGSFromSS_OrderPostToGC];
inline bool OrderPostToGC::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OrderPostToGC::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 24579;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::SSToGS::MsgID OrderPostToGC::msgid() const {
  // @@protoc_insertion_point(field_get:SSToGS.OrderPostToGC.msgid)
  return _internal_msgid();
}
inline void OrderPostToGC::set_msgid(::SSToGS::MsgID value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:SSToGS.OrderPostToGC.msgid)
}
inline ::SSToGS::MsgID OrderPostToGC::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::SSToGS::MsgID>(_impl_.msgid_);
}
inline void OrderPostToGC::_internal_set_msgid(::SSToGS::MsgID value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::SSToGS::MsgID_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated .SSToGS.OrderPostToGC.UserNetInfo usernetinfo = 2;
inline int OrderPostToGC::_internal_usernetinfo_size() const {
  return _internal_usernetinfo().size();
}
inline int OrderPostToGC::usernetinfo_size() const {
  return _internal_usernetinfo_size();
}
inline void OrderPostToGC::clear_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.usernetinfo_.Clear();
}
inline ::SSToGS::OrderPostToGC_UserNetInfo* OrderPostToGC::mutable_usernetinfo(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:SSToGS.OrderPostToGC.usernetinfo)
  return _internal_mutable_usernetinfo()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::SSToGS::OrderPostToGC_UserNetInfo>* OrderPostToGC::mutable_usernetinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:SSToGS.OrderPostToGC.usernetinfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_usernetinfo();
}
inline const ::SSToGS::OrderPostToGC_UserNetInfo& OrderPostToGC::usernetinfo(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SSToGS.OrderPostToGC.usernetinfo)
  return _internal_usernetinfo().Get(index);
}
inline ::SSToGS::OrderPostToGC_UserNetInfo* OrderPostToGC::add_usernetinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::SSToGS::OrderPostToGC_UserNetInfo* _add = _internal_mutable_usernetinfo()->Add();
  // @@protoc_insertion_point(field_add:SSToGS.OrderPostToGC.usernetinfo)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::SSToGS::OrderPostToGC_UserNetInfo>& OrderPostToGC::usernetinfo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:SSToGS.OrderPostToGC.usernetinfo)
  return _internal_usernetinfo();
}
inline const ::google::protobuf::RepeatedPtrField<::SSToGS::OrderPostToGC_UserNetInfo>&
OrderPostToGC::_internal_usernetinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.usernetinfo_;
}
inline ::google::protobuf::RepeatedPtrField<::SSToGS::OrderPostToGC_UserNetInfo>*
OrderPostToGC::_internal_mutable_usernetinfo() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.usernetinfo_;
}

// optional int32 othermsgid = 3;
inline bool OrderPostToGC::has_othermsgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OrderPostToGC::clear_othermsgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.othermsgid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t OrderPostToGC::othermsgid() const {
  // @@protoc_insertion_point(field_get:SSToGS.OrderPostToGC.othermsgid)
  return _internal_othermsgid();
}
inline void OrderPostToGC::set_othermsgid(::int32_t value) {
  _internal_set_othermsgid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:SSToGS.OrderPostToGC.othermsgid)
}
inline ::int32_t OrderPostToGC::_internal_othermsgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.othermsgid_;
}
inline void OrderPostToGC::_internal_set_othermsgid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.othermsgid_ = value;
}

// optional string othermsg = 4;
inline bool OrderPostToGC::has_othermsg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderPostToGC::clear_othermsg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.othermsg_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrderPostToGC::othermsg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:SSToGS.OrderPostToGC.othermsg)
  return _internal_othermsg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderPostToGC::set_othermsg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.othermsg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:SSToGS.OrderPostToGC.othermsg)
}
inline std::string* OrderPostToGC::mutable_othermsg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_othermsg();
  // @@protoc_insertion_point(field_mutable:SSToGS.OrderPostToGC.othermsg)
  return _s;
}
inline const std::string& OrderPostToGC::_internal_othermsg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.othermsg_.Get();
}
inline void OrderPostToGC::_internal_set_othermsg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.othermsg_.Set(value, GetArena());
}
inline std::string* OrderPostToGC::_internal_mutable_othermsg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.othermsg_.Mutable( GetArena());
}
inline std::string* OrderPostToGC::release_othermsg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:SSToGS.OrderPostToGC.othermsg)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.othermsg_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.othermsg_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void OrderPostToGC::set_allocated_othermsg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.othermsg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.othermsg_.IsDefault()) {
          _impl_.othermsg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:SSToGS.OrderPostToGC.othermsg)
}

// -------------------------------------------------------------------

// OrderKickoutGC

// optional .SSToGS.MsgID mgsid = 1 [default = eMsgToGSFromSS_OrderKickoutGC];
inline bool OrderKickoutGC::has_mgsid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OrderKickoutGC::clear_mgsid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mgsid_ = 24580;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::SSToGS::MsgID OrderKickoutGC::mgsid() const {
  // @@protoc_insertion_point(field_get:SSToGS.OrderKickoutGC.mgsid)
  return _internal_mgsid();
}
inline void OrderKickoutGC::set_mgsid(::SSToGS::MsgID value) {
  _internal_set_mgsid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:SSToGS.OrderKickoutGC.mgsid)
}
inline ::SSToGS::MsgID OrderKickoutGC::_internal_mgsid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::SSToGS::MsgID>(_impl_.mgsid_);
}
inline void OrderKickoutGC::_internal_set_mgsid(::SSToGS::MsgID value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::SSToGS::MsgID_IsValid(value));
  _impl_.mgsid_ = value;
}

// optional int32 gsnid = 2;
inline bool OrderKickoutGC::has_gsnid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderKickoutGC::clear_gsnid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gsnid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t OrderKickoutGC::gsnid() const {
  // @@protoc_insertion_point(field_get:SSToGS.OrderKickoutGC.gsnid)
  return _internal_gsnid();
}
inline void OrderKickoutGC::set_gsnid(::int32_t value) {
  _internal_set_gsnid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:SSToGS.OrderKickoutGC.gsnid)
}
inline ::int32_t OrderKickoutGC::_internal_gsnid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gsnid_;
}
inline void OrderKickoutGC::_internal_set_gsnid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gsnid_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace SSToGS


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::SSToGS::MsgID> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::SSToGS::MsgID>() {
  return ::SSToGS::MsgID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_SSToGS_2eproto_2epb_2eh
