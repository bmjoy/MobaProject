// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSToMail.proto

#ifndef PROTOBUF_CSToMail_2eproto__INCLUDED
#define PROTOBUF_CSToMail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_CSToMail_2eproto();
void protobuf_AssignDesc_CSToMail_2eproto();
void protobuf_ShutdownFile_CSToMail_2eproto();

class UserMailReq;
class UserMailRes;

enum MsgID {
  eMsg_AskNickNameMailListRes = 30000,
  eMsg_AskNickNameMailListReq = 30001,
  eMsg_AskMailInfo = 30002
};
bool MsgID_IsValid(int value);
const MsgID MsgID_MIN = eMsg_AskNickNameMailListRes;
const MsgID MsgID_MAX = eMsg_AskMailInfo;
const int MsgID_ARRAYSIZE = MsgID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgID_descriptor();
inline const ::std::string& MsgID_Name(MsgID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgID_descriptor(), value);
}
inline bool MsgID_Parse(
    const ::std::string& name, MsgID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgID>(
    MsgID_descriptor(), name, value);
}
// ===================================================================

class UserMailReq : public ::google::protobuf::Message {
 public:
  UserMailReq();
  virtual ~UserMailReq();

  UserMailReq(const UserMailReq& from);

  inline UserMailReq& operator=(const UserMailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMailReq& default_instance();

  void Swap(UserMailReq* other);

  // implements Message ----------------------------------------------

  UserMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMailReq& from);
  void MergeFrom(const UserMailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgID mgsid = 1 [default = eMsg_AskNickNameMailListReq];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::MsgID mgsid() const;
  inline void set_mgsid(::MsgID value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:UserMailReq)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  int mgsid_;
  friend void  protobuf_AddDesc_CSToMail_2eproto();
  friend void protobuf_AssignDesc_CSToMail_2eproto();
  friend void protobuf_ShutdownFile_CSToMail_2eproto();

  void InitAsDefaultInstance();
  static UserMailReq* default_instance_;
};
// -------------------------------------------------------------------

class UserMailRes : public ::google::protobuf::Message {
 public:
  UserMailRes();
  virtual ~UserMailRes();

  UserMailRes(const UserMailRes& from);

  inline UserMailRes& operator=(const UserMailRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMailRes& default_instance();

  void Swap(UserMailRes* other);

  // implements Message ----------------------------------------------

  UserMailRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserMailRes& from);
  void MergeFrom(const UserMailRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MsgID mgsid = 1 [default = eMsg_AskNickNameMailListRes];
  inline bool has_mgsid() const;
  inline void clear_mgsid();
  static const int kMgsidFieldNumber = 1;
  inline ::MsgID mgsid() const;
  inline void set_mgsid(::MsgID value);

  // @@protoc_insertion_point(class_scope:UserMailRes)
 private:
  inline void set_has_mgsid();
  inline void clear_has_mgsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int mgsid_;
  friend void  protobuf_AddDesc_CSToMail_2eproto();
  friend void protobuf_AssignDesc_CSToMail_2eproto();
  friend void protobuf_ShutdownFile_CSToMail_2eproto();

  void InitAsDefaultInstance();
  static UserMailRes* default_instance_;
};
// ===================================================================


// ===================================================================

// UserMailReq

// optional .MsgID mgsid = 1 [default = eMsg_AskNickNameMailListReq];
inline bool UserMailReq::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMailReq::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMailReq::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMailReq::clear_mgsid() {
  mgsid_ = 30001;
  clear_has_mgsid();
}
inline ::MsgID UserMailReq::mgsid() const {
  // @@protoc_insertion_point(field_get:UserMailReq.mgsid)
  return static_cast< ::MsgID >(mgsid_);
}
inline void UserMailReq::set_mgsid(::MsgID value) {
  assert(::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:UserMailReq.mgsid)
}

// optional string name = 2;
inline bool UserMailReq::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserMailReq::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserMailReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserMailReq::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& UserMailReq::name() const {
  // @@protoc_insertion_point(field_get:UserMailReq.name)
  return *name_;
}
inline void UserMailReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:UserMailReq.name)
}
inline void UserMailReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:UserMailReq.name)
}
inline void UserMailReq::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UserMailReq.name)
}
inline ::std::string* UserMailReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:UserMailReq.name)
  return name_;
}
inline ::std::string* UserMailReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserMailReq::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:UserMailReq.name)
}

// -------------------------------------------------------------------

// UserMailRes

// optional .MsgID mgsid = 1 [default = eMsg_AskNickNameMailListRes];
inline bool UserMailRes::has_mgsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserMailRes::set_has_mgsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserMailRes::clear_has_mgsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserMailRes::clear_mgsid() {
  mgsid_ = 30000;
  clear_has_mgsid();
}
inline ::MsgID UserMailRes::mgsid() const {
  // @@protoc_insertion_point(field_get:UserMailRes.mgsid)
  return static_cast< ::MsgID >(mgsid_);
}
inline void UserMailRes::set_mgsid(::MsgID value) {
  assert(::MsgID_IsValid(value));
  set_has_mgsid();
  mgsid_ = value;
  // @@protoc_insertion_point(field_set:UserMailRes.mgsid)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MsgID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MsgID>() {
  return ::MsgID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CSToMail_2eproto__INCLUDED
