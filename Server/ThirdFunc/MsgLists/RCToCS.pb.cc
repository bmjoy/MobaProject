// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RCToCS.proto
// Protobuf C++ Version: 4.26.0-dev

#include "RCToCS.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace RCToCS {

inline constexpr QueryCDKey::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33009)} {}

template <typename>
PROTOBUF_CONSTEXPR QueryCDKey::QueryCDKey(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryCDKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryCDKeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryCDKeyDefaultTypeInternal() {}
  union {
    QueryCDKey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryCDKeyDefaultTypeInternal _QueryCDKey_default_instance_;

inline constexpr CreateCDKey_giftInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_id_{0},
        item_num_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateCDKey_giftInfo::CreateCDKey_giftInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateCDKey_giftInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateCDKey_giftInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateCDKey_giftInfoDefaultTypeInternal() {}
  union {
    CreateCDKey_giftInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateCDKey_giftInfoDefaultTypeInternal _CreateCDKey_giftInfo_default_instance_;

inline constexpr AskServerUserInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33003)} {}

template <typename>
PROTOBUF_CONSTEXPR AskServerUserInfo::AskServerUserInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskServerUserInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskServerUserInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskServerUserInfoDefaultTypeInternal() {}
  union {
    AskServerUserInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskServerUserInfoDefaultTypeInternal _AskServerUserInfo_default_instance_;

inline constexpr AskServerInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33002)} {}

template <typename>
PROTOBUF_CONSTEXPR AskServerInfo::AskServerInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskServerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskServerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskServerInfoDefaultTypeInternal() {}
  union {
    AskServerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskServerInfoDefaultTypeInternal _AskServerInfo_default_instance_;

inline constexpr AskRegist::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msgid_{static_cast< ::RCToCS::MsgID >(33001)} {}

template <typename>
PROTOBUF_CONSTEXPR AskRegist::AskRegist(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskRegistDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskRegistDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskRegistDefaultTypeInternal() {}
  union {
    AskRegist _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskRegistDefaultTypeInternal _AskRegist_default_instance_;

inline constexpr AskNoticeInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33004)} {}

template <typename>
PROTOBUF_CONSTEXPR AskNoticeInfo::AskNoticeInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskNoticeInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskNoticeInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskNoticeInfoDefaultTypeInternal() {}
  union {
    AskNoticeInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskNoticeInfoDefaultTypeInternal _AskNoticeInfo_default_instance_;

inline constexpr AskDeleteNotice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        noticeid_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33006)} {}

template <typename>
PROTOBUF_CONSTEXPR AskDeleteNotice::AskDeleteNotice(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskDeleteNoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskDeleteNoticeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskDeleteNoticeDefaultTypeInternal() {}
  union {
    AskDeleteNotice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskDeleteNoticeDefaultTypeInternal _AskDeleteNotice_default_instance_;

inline constexpr AskAddNotice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        noticemsg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        platform_{0},
        flag_{0},
        state_{0},
        priority_{0},
        star_time_{::uint64_t{0u}},
        end_time_{::uint64_t{0u}},
        msgid_{static_cast< ::RCToCS::MsgID >(33005)} {}

template <typename>
PROTOBUF_CONSTEXPR AskAddNotice::AskAddNotice(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskAddNoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskAddNoticeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskAddNoticeDefaultTypeInternal() {}
  union {
    AskAddNotice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskAddNoticeDefaultTypeInternal _AskAddNotice_default_instance_;

inline constexpr AskAddMailReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        useridlist_{},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gift_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        createtime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        endtime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{0},
        sdk_{0},
        day_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33007)} {}

template <typename>
PROTOBUF_CONSTEXPR AskAddMailReq::AskAddMailReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskAddMailReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskAddMailReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskAddMailReqDefaultTypeInternal() {}
  union {
    AskAddMailReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskAddMailReqDefaultTypeInternal _AskAddMailReq_default_instance_;

inline constexpr CreateCDKey::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gift_{},
        cdkey_{},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        end_time_{::uint64_t{0u}},
        platform_{0},
        gift_type_{0},
        code_len_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33008)} {}

template <typename>
PROTOBUF_CONSTEXPR CreateCDKey::CreateCDKey(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateCDKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateCDKeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateCDKeyDefaultTypeInternal() {}
  union {
    CreateCDKey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateCDKeyDefaultTypeInternal _CreateCDKey_default_instance_;
}  // namespace RCToCS
static ::_pb::Metadata file_level_metadata_RCToCS_2eproto[10];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_RCToCS_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_RCToCS_2eproto = nullptr;
const ::uint32_t
    TableStruct_RCToCS_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::RCToCS::QueryCDKey, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::QueryCDKey, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RCToCS::QueryCDKey, _impl_.msgid_),
        0,
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey_giftInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey_giftInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey_giftInfo, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey_giftInfo, _impl_.item_num_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey, _impl_.platform_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey, _impl_.end_time_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey, _impl_.gift_type_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey, _impl_.gift_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey, _impl_.code_len_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::CreateCDKey, _impl_.cdkey_),
        6,
        0,
        3,
        2,
        1,
        4,
        ~0u,
        5,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_.sdk_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_.gift_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_.createtime_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_.endtime_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_.useridlist_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddMailReq, _impl_.day_),
        9,
        6,
        7,
        0,
        1,
        2,
        3,
        4,
        5,
        ~0u,
        8,
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskRegist, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskRegist, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskRegist, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskRegist, _impl_.key_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskServerInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskServerInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskServerInfo, _impl_.msgid_),
        0,
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskServerUserInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskServerUserInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskServerUserInfo, _impl_.msgid_),
        0,
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskNoticeInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskNoticeInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskNoticeInfo, _impl_.msgid_),
        0,
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddNotice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddNotice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddNotice, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddNotice, _impl_.platform_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddNotice, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddNotice, _impl_.flag_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddNotice, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddNotice, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddNotice, _impl_.noticemsg_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddNotice, _impl_.star_time_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskAddNotice, _impl_.end_time_),
        8,
        2,
        0,
        3,
        4,
        5,
        1,
        6,
        7,
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskDeleteNotice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskDeleteNotice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskDeleteNotice, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::RCToCS::AskDeleteNotice, _impl_.noticeid_),
        1,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::RCToCS::QueryCDKey)},
        {10, 20, -1, sizeof(::RCToCS::CreateCDKey_giftInfo)},
        {22, 39, -1, sizeof(::RCToCS::CreateCDKey)},
        {48, 67, -1, sizeof(::RCToCS::AskAddMailReq)},
        {78, 88, -1, sizeof(::RCToCS::AskRegist)},
        {90, 99, -1, sizeof(::RCToCS::AskServerInfo)},
        {100, 109, -1, sizeof(::RCToCS::AskServerUserInfo)},
        {110, 119, -1, sizeof(::RCToCS::AskNoticeInfo)},
        {120, 137, -1, sizeof(::RCToCS::AskAddNotice)},
        {146, 156, -1, sizeof(::RCToCS::AskDeleteNotice)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::RCToCS::_QueryCDKey_default_instance_._instance,
    &::RCToCS::_CreateCDKey_giftInfo_default_instance_._instance,
    &::RCToCS::_CreateCDKey_default_instance_._instance,
    &::RCToCS::_AskAddMailReq_default_instance_._instance,
    &::RCToCS::_AskRegist_default_instance_._instance,
    &::RCToCS::_AskServerInfo_default_instance_._instance,
    &::RCToCS::_AskServerUserInfo_default_instance_._instance,
    &::RCToCS::_AskNoticeInfo_default_instance_._instance,
    &::RCToCS::_AskAddNotice_default_instance_._instance,
    &::RCToCS::_AskDeleteNotice_default_instance_._instance,
};
const char descriptor_table_protodef_RCToCS_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014RCToCS.proto\022\006RCToCS\"C\n\nQueryCDKey\0225\n\005"
    "msgid\030\001 \001(\0162\r.RCToCS.MsgID:\027eMsgRC2CS_As"
    "kQueryCDkey\"\230\002\n\013CreateCDKey\0226\n\005msgid\030\001 \001"
    "(\0162\r.RCToCS.MsgID:\030eMsgRC2CS_AskCreateCD"
    "Key\022\r\n\005title\030\002 \001(\t\022\020\n\010platform\030\003 \001(\005\022\020\n\010"
    "end_time\030\004 \001(\004\022\017\n\007content\030\005 \001(\t\022\021\n\tgift_"
    "type\030\006 \001(\005\022*\n\004gift\030\007 \003(\0132\034.RCToCS.Create"
    "CDKey.giftInfo\022\020\n\010code_len\030\010 \001(\005\022\r\n\005cdke"
    "y\030\t \003(\t\032-\n\010giftInfo\022\017\n\007item_id\030\001 \001(\005\022\020\n\010"
    "item_num\030\002 \001(\005\"\345\001\n\rAskAddMailReq\0225\n\005msgi"
    "d\030\001 \001(\0162\r.RCToCS.MsgID:\027eMsgRC2CS_AskAdd"
    "OneMail\022\014\n\004type\030\002 \001(\005\022\013\n\003sdk\030\003 \001(\005\022\r\n\005ti"
    "tle\030\004 \001(\t\022\017\n\007content\030\005 \001(\t\022\014\n\004gift\030\006 \001(\t"
    "\022\022\n\ncreatetime\030\007 \001(\t\022\017\n\007endtime\030\010 \001(\t\022\016\n"
    "\006sender\030\t \001(\t\022\022\n\nuserIdlist\030\n \003(\003\022\013\n\003day"
    "\030\013 \001(\005\"K\n\tAskRegist\0221\n\005msgid\030\001 \001(\0162\r.RCT"
    "oCS.MsgID:\023eMsgRC2CS_AskRegist\022\013\n\003key\030\002 "
    "\001(\014\"F\n\rAskServerInfo\0225\n\005msgid\030\001 \001(\0162\r.RC"
    "ToCS.MsgID:\027eMsgRC2CS_AskServerInfo\"N\n\021A"
    "skServerUserInfo\0229\n\005msgid\030\001 \001(\0162\r.RCToCS"
    ".MsgID:\033eMsgRC2CS_AskServerUserInfo\"F\n\rA"
    "skNoticeInfo\0225\n\005msgid\030\001 \001(\0162\r.RCToCS.Msg"
    "ID:\027eMsgRC2CS_AskNoticeInfo\"\314\001\n\014AskAddNo"
    "tice\0224\n\005msgid\030\001 \001(\0162\r.RCToCS.MsgID:\026eMsg"
    "RC2CS_AskAddNotice\022\020\n\010platform\030\002 \001(\005\022\r\n\005"
    "title\030\003 \001(\014\022\014\n\004flag\030\004 \001(\005\022\r\n\005state\030\005 \001(\005"
    "\022\020\n\010priority\030\006 \001(\005\022\021\n\tnoticeMsg\030\007 \001(\014\022\021\n"
    "\tstar_time\030\010 \001(\004\022\020\n\010end_time\030\t \001(\004\"\\\n\017As"
    "kDeleteNotice\0227\n\005msgid\030\001 \001(\0162\r.RCToCS.Ms"
    "gID:\031eMsgRC2CS_AskDeleteNotice\022\020\n\010notice"
    "Id\030\002 \001(\005*\314\002\n\005MsgID\022\025\n\017eMsgRC2CS_Begin\020\350\201"
    "\002\022\031\n\023eMsgRC2CS_AskRegist\020\351\201\002\022\035\n\027eMsgRC2C"
    "S_AskServerInfo\020\352\201\002\022!\n\033eMsgRC2CS_AskServ"
    "erUserInfo\020\353\201\002\022\035\n\027eMsgRC2CS_AskNoticeInf"
    "o\020\354\201\002\022\034\n\026eMsgRC2CS_AskAddNotice\020\355\201\002\022\037\n\031e"
    "MsgRC2CS_AskDeleteNotice\020\356\201\002\022\035\n\027eMsgRC2C"
    "S_AskAddOneMail\020\357\201\002\022\036\n\030eMsgRC2CS_AskCrea"
    "teCDKey\020\360\201\002\022\035\n\027eMsgRC2CS_AskQueryCDkey\020\361"
    "\201\002\022\023\n\reMsgRC2CS_End\020\333\205\002"
};
static ::absl::once_flag descriptor_table_RCToCS_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_RCToCS_2eproto = {
    false,
    false,
    1543,
    descriptor_table_protodef_RCToCS_2eproto,
    "RCToCS.proto",
    &descriptor_table_RCToCS_2eproto_once,
    nullptr,
    0,
    10,
    schemas,
    file_default_instances,
    TableStruct_RCToCS_2eproto::offsets,
    file_level_metadata_RCToCS_2eproto,
    file_level_enum_descriptors_RCToCS_2eproto,
    file_level_service_descriptors_RCToCS_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_RCToCS_2eproto_getter() {
  return &descriptor_table_RCToCS_2eproto;
}
namespace RCToCS {
const ::google::protobuf::EnumDescriptor* MsgID_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_RCToCS_2eproto);
  return file_level_enum_descriptors_RCToCS_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MsgID_internal_data_[] = {
    0u, 720896u, 33007u, 33003u, 33009u, 33001u, 33005u, 33008u, 33499u, 33000u, 33002u, 33004u, 33006u, };
bool MsgID_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, MsgID_internal_data_);
}
// ===================================================================

class QueryCDKey::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryCDKey>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryCDKey, _impl_._has_bits_);
};

QueryCDKey::QueryCDKey(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RCToCS.QueryCDKey)
}
QueryCDKey::QueryCDKey(
    ::google::protobuf::Arena* arena, const QueryCDKey& from)
    : QueryCDKey(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE QueryCDKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33009)} {}

inline void QueryCDKey::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryCDKey::~QueryCDKey() {
  // @@protoc_insertion_point(destructor:RCToCS.QueryCDKey)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryCDKey::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QueryCDKey::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QueryCDKey, _impl_._cached_size_),
              false,
          },
          &QueryCDKey::MergeImpl,
          &QueryCDKey::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QueryCDKey::Clear() {
// @@protoc_insertion_point(message_clear_start:RCToCS.QueryCDKey)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msgid_ = 33009;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryCDKey::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> QueryCDKey::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryCDKey, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QueryCDKey_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RCToCS::QueryCDKey>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskQueryCDkey];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(QueryCDKey, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskQueryCDkey];
    {PROTOBUF_FIELD_OFFSET(QueryCDKey, _impl_.msgid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::RCToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* QueryCDKey::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RCToCS.QueryCDKey)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskQueryCDkey];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RCToCS.QueryCDKey)
  return target;
}

::size_t QueryCDKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RCToCS.QueryCDKey)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskQueryCDkey];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QueryCDKey::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryCDKey*>(&to_msg);
  auto& from = static_cast<const QueryCDKey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RCToCS.QueryCDKey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.msgid_ = from._impl_.msgid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryCDKey::CopyFrom(const QueryCDKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RCToCS.QueryCDKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryCDKey::IsInitialized() const {
  return true;
}

void QueryCDKey::InternalSwap(QueryCDKey* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata QueryCDKey::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_RCToCS_2eproto_getter,
                                   &descriptor_table_RCToCS_2eproto_once,
                                   file_level_metadata_RCToCS_2eproto[0]);
}
// ===================================================================

class CreateCDKey_giftInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateCDKey_giftInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CreateCDKey_giftInfo, _impl_._has_bits_);
};

CreateCDKey_giftInfo::CreateCDKey_giftInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RCToCS.CreateCDKey.giftInfo)
}
CreateCDKey_giftInfo::CreateCDKey_giftInfo(
    ::google::protobuf::Arena* arena, const CreateCDKey_giftInfo& from)
    : CreateCDKey_giftInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CreateCDKey_giftInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateCDKey_giftInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, item_id_),
           0,
           offsetof(Impl_, item_num_) -
               offsetof(Impl_, item_id_) +
               sizeof(Impl_::item_num_));
}
CreateCDKey_giftInfo::~CreateCDKey_giftInfo() {
  // @@protoc_insertion_point(destructor:RCToCS.CreateCDKey.giftInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateCDKey_giftInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CreateCDKey_giftInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CreateCDKey_giftInfo, _impl_._cached_size_),
              false,
          },
          &CreateCDKey_giftInfo::MergeImpl,
          &CreateCDKey_giftInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CreateCDKey_giftInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:RCToCS.CreateCDKey.giftInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.item_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.item_num_) -
        reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.item_num_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateCDKey_giftInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CreateCDKey_giftInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateCDKey_giftInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CreateCDKey_giftInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RCToCS::CreateCDKey_giftInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 item_num = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateCDKey_giftInfo, _impl_.item_num_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CreateCDKey_giftInfo, _impl_.item_num_)}},
    // optional int32 item_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateCDKey_giftInfo, _impl_.item_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CreateCDKey_giftInfo, _impl_.item_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 item_id = 1;
    {PROTOBUF_FIELD_OFFSET(CreateCDKey_giftInfo, _impl_.item_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 item_num = 2;
    {PROTOBUF_FIELD_OFFSET(CreateCDKey_giftInfo, _impl_.item_num_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CreateCDKey_giftInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RCToCS.CreateCDKey.giftInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_item_id(), target);
  }

  // optional int32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_item_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RCToCS.CreateCDKey.giftInfo)
  return target;
}

::size_t CreateCDKey_giftInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RCToCS.CreateCDKey.giftInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_item_id());
    }

    // optional int32 item_num = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_item_num());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CreateCDKey_giftInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateCDKey_giftInfo*>(&to_msg);
  auto& from = static_cast<const CreateCDKey_giftInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RCToCS.CreateCDKey.giftInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.item_id_ = from._impl_.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.item_num_ = from._impl_.item_num_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateCDKey_giftInfo::CopyFrom(const CreateCDKey_giftInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RCToCS.CreateCDKey.giftInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateCDKey_giftInfo::IsInitialized() const {
  return true;
}

void CreateCDKey_giftInfo::InternalSwap(CreateCDKey_giftInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateCDKey_giftInfo, _impl_.item_num_)
      + sizeof(CreateCDKey_giftInfo::_impl_.item_num_)
      - PROTOBUF_FIELD_OFFSET(CreateCDKey_giftInfo, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
}

::google::protobuf::Metadata CreateCDKey_giftInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_RCToCS_2eproto_getter,
                                   &descriptor_table_RCToCS_2eproto_once,
                                   file_level_metadata_RCToCS_2eproto[1]);
}
// ===================================================================

class CreateCDKey::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateCDKey>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_._has_bits_);
};

CreateCDKey::CreateCDKey(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RCToCS.CreateCDKey)
}
inline PROTOBUF_NDEBUG_INLINE CreateCDKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        gift_{visibility, arena, from.gift_},
        cdkey_{visibility, arena, from.cdkey_},
        title_(arena, from.title_),
        content_(arena, from.content_) {}

CreateCDKey::CreateCDKey(
    ::google::protobuf::Arena* arena,
    const CreateCDKey& from)
    : ::google::protobuf::Message(arena) {
  CreateCDKey* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, end_time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, end_time_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, end_time_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:RCToCS.CreateCDKey)
}
inline PROTOBUF_NDEBUG_INLINE CreateCDKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        gift_{visibility, arena},
        cdkey_{visibility, arena},
        title_(arena),
        content_(arena),
        msgid_{static_cast< ::RCToCS::MsgID >(33008)} {}

inline void CreateCDKey::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, end_time_),
           0,
           offsetof(Impl_, code_len_) -
               offsetof(Impl_, end_time_) +
               sizeof(Impl_::code_len_));
}
CreateCDKey::~CreateCDKey() {
  // @@protoc_insertion_point(destructor:RCToCS.CreateCDKey)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateCDKey::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CreateCDKey::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_._cached_size_),
              false,
          },
          &CreateCDKey::MergeImpl,
          &CreateCDKey::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CreateCDKey::Clear() {
// @@protoc_insertion_point(message_clear_start:RCToCS.CreateCDKey)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gift_.Clear();
  _impl_.cdkey_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.content_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.end_time_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.code_len_) -
        reinterpret_cast<char*>(&_impl_.end_time_)) + sizeof(_impl_.code_len_));
    _impl_.msgid_ = 33008;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateCDKey::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 52, 2> CreateCDKey::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateCDKey_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RCToCS::CreateCDKey>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskCreateCDKey];
    {::_pbi::TcParser::FastEvS1,
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.msgid_)}},
    // optional string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.title_)}},
    // optional int32 platform = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateCDKey, _impl_.platform_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.platform_)}},
    // optional uint64 end_time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CreateCDKey, _impl_.end_time_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.end_time_)}},
    // optional string content = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.content_)}},
    // optional int32 gift_type = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateCDKey, _impl_.gift_type_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.gift_type_)}},
    // repeated .RCToCS.CreateCDKey.giftInfo gift = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 1, PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.gift_)}},
    // optional int32 code_len = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateCDKey, _impl_.code_len_), 5>(),
     {64, 5, 0, PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.code_len_)}},
    // repeated string cdkey = 9;
    {::_pbi::TcParser::FastSR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.cdkey_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskCreateCDKey];
    {PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.msgid_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional string title = 2;
    {PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.title_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 platform = 3;
    {PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.platform_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint64 end_time = 4;
    {PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.end_time_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string content = 5;
    {PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.content_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 gift_type = 6;
    {PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.gift_type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .RCToCS.CreateCDKey.giftInfo gift = 7;
    {PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.gift_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 code_len = 8;
    {PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.code_len_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated string cdkey = 9;
    {PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.cdkey_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kRawString | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::RCToCS::MsgID_internal_data_},
    {::_pbi::TcParser::GetTable<::RCToCS::CreateCDKey_giftInfo>()},
  }}, {{
    "\22\0\5\0\0\7\0\0\0\5\0\0\0\0\0\0"
    "RCToCS.CreateCDKey"
    "title"
    "content"
    "cdkey"
  }},
};

::uint8_t* CreateCDKey::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RCToCS.CreateCDKey)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskCreateCDKey];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "RCToCS.CreateCDKey.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 platform = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_platform(), target);
  }

  // optional uint64 end_time = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_end_time(), target);
  }

  // optional string content = 5;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "RCToCS.CreateCDKey.content");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional int32 gift_type = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_gift_type(), target);
  }

  // repeated .RCToCS.CreateCDKey.giftInfo gift = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_gift_size()); i < n; i++) {
    const auto& repfield = this->_internal_gift().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int32 code_len = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_code_len(), target);
  }

  // repeated string cdkey = 9;
  for (int i = 0, n = this->_internal_cdkey_size(); i < n; ++i) {
    const auto& s = this->_internal_cdkey().Get(i);
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "RCToCS.CreateCDKey.cdkey");
    target = stream->WriteString(9, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RCToCS.CreateCDKey)
  return target;
}

::size_t CreateCDKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RCToCS.CreateCDKey)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .RCToCS.CreateCDKey.giftInfo gift = 7;
  total_size += 1UL * this->_internal_gift_size();
  for (const auto& msg : this->_internal_gift()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated string cdkey = 9;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_cdkey().size());
  for (int i = 0, n = _internal_cdkey().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_cdkey().Get(i));
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string title = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string content = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_content());
    }

    // optional uint64 end_time = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_end_time());
    }

    // optional int32 platform = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_platform());
    }

    // optional int32 gift_type = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gift_type());
    }

    // optional int32 code_len = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_code_len());
    }

    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskCreateCDKey];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CreateCDKey::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateCDKey*>(&to_msg);
  auto& from = static_cast<const CreateCDKey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RCToCS.CreateCDKey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_gift()->MergeFrom(
      from._internal_gift());
  _this->_internal_mutable_cdkey()->MergeFrom(from._internal_cdkey());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_content(from._internal_content());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.end_time_ = from._impl_.end_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.platform_ = from._impl_.platform_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.gift_type_ = from._impl_.gift_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.code_len_ = from._impl_.code_len_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateCDKey::CopyFrom(const CreateCDKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RCToCS.CreateCDKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateCDKey::IsInitialized() const {
  return true;
}

void CreateCDKey::InternalSwap(CreateCDKey* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.gift_.InternalSwap(&other->_impl_.gift_);
  _impl_.cdkey_.InternalSwap(&other->_impl_.cdkey_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.msgid_)
      + sizeof(CreateCDKey::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(CreateCDKey, _impl_.end_time_)>(
          reinterpret_cast<char*>(&_impl_.end_time_),
          reinterpret_cast<char*>(&other->_impl_.end_time_));
}

::google::protobuf::Metadata CreateCDKey::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_RCToCS_2eproto_getter,
                                   &descriptor_table_RCToCS_2eproto_once,
                                   file_level_metadata_RCToCS_2eproto[2]);
}
// ===================================================================

class AskAddMailReq::_Internal {
 public:
  using HasBits = decltype(std::declval<AskAddMailReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_._has_bits_);
};

AskAddMailReq::AskAddMailReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RCToCS.AskAddMailReq)
}
inline PROTOBUF_NDEBUG_INLINE AskAddMailReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        useridlist_{visibility, arena, from.useridlist_},
        title_(arena, from.title_),
        content_(arena, from.content_),
        gift_(arena, from.gift_),
        createtime_(arena, from.createtime_),
        endtime_(arena, from.endtime_),
        sender_(arena, from.sender_) {}

AskAddMailReq::AskAddMailReq(
    ::google::protobuf::Arena* arena,
    const AskAddMailReq& from)
    : ::google::protobuf::Message(arena) {
  AskAddMailReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:RCToCS.AskAddMailReq)
}
inline PROTOBUF_NDEBUG_INLINE AskAddMailReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        useridlist_{visibility, arena},
        title_(arena),
        content_(arena),
        gift_(arena),
        createtime_(arena),
        endtime_(arena),
        sender_(arena),
        msgid_{static_cast< ::RCToCS::MsgID >(33007)} {}

inline void AskAddMailReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, day_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::day_));
}
AskAddMailReq::~AskAddMailReq() {
  // @@protoc_insertion_point(destructor:RCToCS.AskAddMailReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskAddMailReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  _impl_.content_.Destroy();
  _impl_.gift_.Destroy();
  _impl_.createtime_.Destroy();
  _impl_.endtime_.Destroy();
  _impl_.sender_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskAddMailReq::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_._cached_size_),
              false,
          },
          &AskAddMailReq::MergeImpl,
          &AskAddMailReq::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskAddMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RCToCS.AskAddMailReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.useridlist_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.content_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.gift_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.createtime_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.endtime_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.sender_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sdk_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.sdk_));
  }
  if (cached_has_bits & 0x00000300u) {
    _impl_.day_ = 0;
    _impl_.msgid_ = 33007;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskAddMailReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 76, 2> AskAddMailReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskAddMailReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RCToCS::AskAddMailReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskAddOneMail];
    {::_pbi::TcParser::FastEvS1,
     {8, 9, 0, PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.msgid_)}},
    // optional int32 type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskAddMailReq, _impl_.type_), 6>(),
     {16, 6, 0, PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.type_)}},
    // optional int32 sdk = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskAddMailReq, _impl_.sdk_), 7>(),
     {24, 7, 0, PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.sdk_)}},
    // optional string title = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.title_)}},
    // optional string content = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.content_)}},
    // optional string gift = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.gift_)}},
    // optional string createtime = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 3, 0, PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.createtime_)}},
    // optional string endtime = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 4, 0, PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.endtime_)}},
    // optional string sender = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 5, 0, PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.sender_)}},
    // repeated int64 userIdlist = 10;
    {::_pbi::TcParser::FastV64R1,
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.useridlist_)}},
    // optional int32 day = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskAddMailReq, _impl_.day_), 8>(),
     {88, 8, 0, PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.day_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskAddOneMail];
    {PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.msgid_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 type = 2;
    {PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.type_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 sdk = 3;
    {PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.sdk_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string title = 4;
    {PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.title_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string content = 5;
    {PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.content_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string gift = 6;
    {PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.gift_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string createtime = 7;
    {PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.createtime_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string endtime = 8;
    {PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.endtime_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string sender = 9;
    {PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.sender_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated int64 userIdlist = 10;
    {PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.useridlist_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt64)},
    // optional int32 day = 11;
    {PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.day_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::RCToCS::MsgID_internal_data_},
  }}, {{
    "\24\0\0\0\5\7\4\12\7\6\0\0\0\0\0\0"
    "RCToCS.AskAddMailReq"
    "title"
    "content"
    "gift"
    "createtime"
    "endtime"
    "sender"
  }},
};

::uint8_t* AskAddMailReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RCToCS.AskAddMailReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskAddOneMail];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional int32 type = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_type(), target);
  }

  // optional int32 sdk = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_sdk(), target);
  }

  // optional string title = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "RCToCS.AskAddMailReq.title");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string content = 5;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "RCToCS.AskAddMailReq.content");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string gift = 6;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_gift();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "RCToCS.AskAddMailReq.gift");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string createtime = 7;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_createtime();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "RCToCS.AskAddMailReq.createtime");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string endtime = 8;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_endtime();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "RCToCS.AskAddMailReq.endtime");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string sender = 9;
  if (cached_has_bits & 0x00000020u) {
    const std::string& _s = this->_internal_sender();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "RCToCS.AskAddMailReq.sender");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // repeated int64 userIdlist = 10;
  for (int i = 0, n = this->_internal_useridlist_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        10, this->_internal_useridlist().Get(i), target);
  }

  // optional int32 day = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_day(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RCToCS.AskAddMailReq)
  return target;
}

::size_t AskAddMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RCToCS.AskAddMailReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 userIdlist = 10;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_useridlist())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_useridlist_size());
    ;
    total_size += tag_size + data_size;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string title = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string content = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_content());
    }

    // optional string gift = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_gift());
    }

    // optional string createtime = 7;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_createtime());
    }

    // optional string endtime = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_endtime());
    }

    // optional string sender = 9;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sender());
    }

    // optional int32 type = 2;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_type());
    }

    // optional int32 sdk = 3;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sdk());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional int32 day = 11;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_day());
    }

    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskAddOneMail];
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskAddMailReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskAddMailReq*>(&to_msg);
  auto& from = static_cast<const AskAddMailReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RCToCS.AskAddMailReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_useridlist()->MergeFrom(from._internal_useridlist());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_content(from._internal_content());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_gift(from._internal_gift());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_createtime(from._internal_createtime());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_endtime(from._internal_endtime());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_sender(from._internal_sender());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.sdk_ = from._impl_.sdk_;
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.day_ = from._impl_.day_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskAddMailReq::CopyFrom(const AskAddMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RCToCS.AskAddMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskAddMailReq::IsInitialized() const {
  return true;
}

void AskAddMailReq::InternalSwap(AskAddMailReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.useridlist_.InternalSwap(&other->_impl_.useridlist_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gift_, &other->_impl_.gift_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.createtime_, &other->_impl_.createtime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.endtime_, &other->_impl_.endtime_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.msgid_)
      + sizeof(AskAddMailReq::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(AskAddMailReq, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata AskAddMailReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_RCToCS_2eproto_getter,
                                   &descriptor_table_RCToCS_2eproto_once,
                                   file_level_metadata_RCToCS_2eproto[3]);
}
// ===================================================================

class AskRegist::_Internal {
 public:
  using HasBits = decltype(std::declval<AskRegist>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskRegist, _impl_._has_bits_);
};

AskRegist::AskRegist(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RCToCS.AskRegist)
}
inline PROTOBUF_NDEBUG_INLINE AskRegist::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_) {}

AskRegist::AskRegist(
    ::google::protobuf::Arena* arena,
    const AskRegist& from)
    : ::google::protobuf::Message(arena) {
  AskRegist* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.msgid_ = from._impl_.msgid_;

  // @@protoc_insertion_point(copy_constructor:RCToCS.AskRegist)
}
inline PROTOBUF_NDEBUG_INLINE AskRegist::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        key_(arena),
        msgid_{static_cast< ::RCToCS::MsgID >(33001)} {}

inline void AskRegist::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskRegist::~AskRegist() {
  // @@protoc_insertion_point(destructor:RCToCS.AskRegist)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskRegist::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskRegist::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskRegist, _impl_._cached_size_),
              false,
          },
          &AskRegist::MergeImpl,
          &AskRegist::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskRegist::Clear() {
// @@protoc_insertion_point(message_clear_start:RCToCS.AskRegist)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    _impl_.msgid_ = 33001;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskRegist::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AskRegist::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskRegist, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskRegist_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RCToCS::AskRegist>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes key = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AskRegist, _impl_.key_)}},
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskRegist];
    {::_pbi::TcParser::FastEvS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(AskRegist, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskRegist];
    {PROTOBUF_FIELD_OFFSET(AskRegist, _impl_.msgid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional bytes key = 2;
    {PROTOBUF_FIELD_OFFSET(AskRegist, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::RCToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskRegist::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RCToCS.AskRegist)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskRegist];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional bytes key = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_key();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RCToCS.AskRegist)
  return target;
}

::size_t AskRegist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RCToCS.AskRegist)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes key = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_key());
    }

    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskRegist];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskRegist::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskRegist*>(&to_msg);
  auto& from = static_cast<const AskRegist&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RCToCS.AskRegist)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_key(from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskRegist::CopyFrom(const AskRegist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RCToCS.AskRegist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskRegist::IsInitialized() const {
  return true;
}

void AskRegist::InternalSwap(AskRegist* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata AskRegist::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_RCToCS_2eproto_getter,
                                   &descriptor_table_RCToCS_2eproto_once,
                                   file_level_metadata_RCToCS_2eproto[4]);
}
// ===================================================================

class AskServerInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<AskServerInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskServerInfo, _impl_._has_bits_);
};

AskServerInfo::AskServerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RCToCS.AskServerInfo)
}
AskServerInfo::AskServerInfo(
    ::google::protobuf::Arena* arena, const AskServerInfo& from)
    : AskServerInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskServerInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33002)} {}

inline void AskServerInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskServerInfo::~AskServerInfo() {
  // @@protoc_insertion_point(destructor:RCToCS.AskServerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskServerInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskServerInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskServerInfo, _impl_._cached_size_),
              false,
          },
          &AskServerInfo::MergeImpl,
          &AskServerInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:RCToCS.AskServerInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msgid_ = 33002;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskServerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskServerInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskServerInfo, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskServerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RCToCS::AskServerInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskServerInfo];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskServerInfo, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskServerInfo];
    {PROTOBUF_FIELD_OFFSET(AskServerInfo, _impl_.msgid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::RCToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskServerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RCToCS.AskServerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskServerInfo];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RCToCS.AskServerInfo)
  return target;
}

::size_t AskServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RCToCS.AskServerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskServerInfo];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskServerInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskServerInfo*>(&to_msg);
  auto& from = static_cast<const AskServerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RCToCS.AskServerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.msgid_ = from._impl_.msgid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskServerInfo::CopyFrom(const AskServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RCToCS.AskServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskServerInfo::IsInitialized() const {
  return true;
}

void AskServerInfo::InternalSwap(AskServerInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata AskServerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_RCToCS_2eproto_getter,
                                   &descriptor_table_RCToCS_2eproto_once,
                                   file_level_metadata_RCToCS_2eproto[5]);
}
// ===================================================================

class AskServerUserInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<AskServerUserInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskServerUserInfo, _impl_._has_bits_);
};

AskServerUserInfo::AskServerUserInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RCToCS.AskServerUserInfo)
}
AskServerUserInfo::AskServerUserInfo(
    ::google::protobuf::Arena* arena, const AskServerUserInfo& from)
    : AskServerUserInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskServerUserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33003)} {}

inline void AskServerUserInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskServerUserInfo::~AskServerUserInfo() {
  // @@protoc_insertion_point(destructor:RCToCS.AskServerUserInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskServerUserInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskServerUserInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskServerUserInfo, _impl_._cached_size_),
              false,
          },
          &AskServerUserInfo::MergeImpl,
          &AskServerUserInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskServerUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:RCToCS.AskServerUserInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msgid_ = 33003;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskServerUserInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskServerUserInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskServerUserInfo, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskServerUserInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RCToCS::AskServerUserInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskServerUserInfo];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskServerUserInfo, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskServerUserInfo];
    {PROTOBUF_FIELD_OFFSET(AskServerUserInfo, _impl_.msgid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::RCToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskServerUserInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RCToCS.AskServerUserInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskServerUserInfo];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RCToCS.AskServerUserInfo)
  return target;
}

::size_t AskServerUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RCToCS.AskServerUserInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskServerUserInfo];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskServerUserInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskServerUserInfo*>(&to_msg);
  auto& from = static_cast<const AskServerUserInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RCToCS.AskServerUserInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.msgid_ = from._impl_.msgid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskServerUserInfo::CopyFrom(const AskServerUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RCToCS.AskServerUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskServerUserInfo::IsInitialized() const {
  return true;
}

void AskServerUserInfo::InternalSwap(AskServerUserInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata AskServerUserInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_RCToCS_2eproto_getter,
                                   &descriptor_table_RCToCS_2eproto_once,
                                   file_level_metadata_RCToCS_2eproto[6]);
}
// ===================================================================

class AskNoticeInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<AskNoticeInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskNoticeInfo, _impl_._has_bits_);
};

AskNoticeInfo::AskNoticeInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RCToCS.AskNoticeInfo)
}
AskNoticeInfo::AskNoticeInfo(
    ::google::protobuf::Arena* arena, const AskNoticeInfo& from)
    : AskNoticeInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskNoticeInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33004)} {}

inline void AskNoticeInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AskNoticeInfo::~AskNoticeInfo() {
  // @@protoc_insertion_point(destructor:RCToCS.AskNoticeInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskNoticeInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskNoticeInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskNoticeInfo, _impl_._cached_size_),
              false,
          },
          &AskNoticeInfo::MergeImpl,
          &AskNoticeInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskNoticeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:RCToCS.AskNoticeInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msgid_ = 33004;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskNoticeInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AskNoticeInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskNoticeInfo, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskNoticeInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RCToCS::AskNoticeInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskNoticeInfo];
    {::_pbi::TcParser::FastEvS1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AskNoticeInfo, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskNoticeInfo];
    {PROTOBUF_FIELD_OFFSET(AskNoticeInfo, _impl_.msgid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::RCToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskNoticeInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RCToCS.AskNoticeInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskNoticeInfo];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RCToCS.AskNoticeInfo)
  return target;
}

::size_t AskNoticeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RCToCS.AskNoticeInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskNoticeInfo];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskNoticeInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskNoticeInfo*>(&to_msg);
  auto& from = static_cast<const AskNoticeInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RCToCS.AskNoticeInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.msgid_ = from._impl_.msgid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskNoticeInfo::CopyFrom(const AskNoticeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RCToCS.AskNoticeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskNoticeInfo::IsInitialized() const {
  return true;
}

void AskNoticeInfo::InternalSwap(AskNoticeInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata AskNoticeInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_RCToCS_2eproto_getter,
                                   &descriptor_table_RCToCS_2eproto_once,
                                   file_level_metadata_RCToCS_2eproto[7]);
}
// ===================================================================

class AskAddNotice::_Internal {
 public:
  using HasBits = decltype(std::declval<AskAddNotice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_._has_bits_);
};

AskAddNotice::AskAddNotice(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RCToCS.AskAddNotice)
}
inline PROTOBUF_NDEBUG_INLINE AskAddNotice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_),
        noticemsg_(arena, from.noticemsg_) {}

AskAddNotice::AskAddNotice(
    ::google::protobuf::Arena* arena,
    const AskAddNotice& from)
    : ::google::protobuf::Message(arena) {
  AskAddNotice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, platform_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, platform_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, platform_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:RCToCS.AskAddNotice)
}
inline PROTOBUF_NDEBUG_INLINE AskAddNotice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena),
        noticemsg_(arena),
        msgid_{static_cast< ::RCToCS::MsgID >(33005)} {}

inline void AskAddNotice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, platform_),
           0,
           offsetof(Impl_, end_time_) -
               offsetof(Impl_, platform_) +
               sizeof(Impl_::end_time_));
}
AskAddNotice::~AskAddNotice() {
  // @@protoc_insertion_point(destructor:RCToCS.AskAddNotice)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskAddNotice::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  _impl_.noticemsg_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskAddNotice::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_._cached_size_),
              false,
          },
          &AskAddNotice::MergeImpl,
          &AskAddNotice::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskAddNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:RCToCS.AskAddNotice)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.noticemsg_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.platform_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.end_time_) -
        reinterpret_cast<char*>(&_impl_.platform_)) + sizeof(_impl_.end_time_));
  }
  _impl_.msgid_ = 33005;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskAddNotice::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 0, 2> AskAddNotice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskAddNotice_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RCToCS::AskAddNotice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskAddNotice];
    {::_pbi::TcParser::FastEvS1,
     {8, 8, 0, PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.msgid_)}},
    // optional int32 platform = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskAddNotice, _impl_.platform_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.platform_)}},
    // optional bytes title = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.title_)}},
    // optional int32 flag = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskAddNotice, _impl_.flag_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.flag_)}},
    // optional int32 state = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskAddNotice, _impl_.state_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.state_)}},
    // optional int32 priority = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskAddNotice, _impl_.priority_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.priority_)}},
    // optional bytes noticeMsg = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.noticemsg_)}},
    // optional uint64 star_time = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AskAddNotice, _impl_.star_time_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.star_time_)}},
    // optional uint64 end_time = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AskAddNotice, _impl_.end_time_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.end_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskAddNotice];
    {PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.msgid_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 platform = 2;
    {PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.platform_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes title = 3;
    {PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.title_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional int32 flag = 4;
    {PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.flag_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 state = 5;
    {PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.state_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 priority = 6;
    {PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.priority_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bytes noticeMsg = 7;
    {PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.noticemsg_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint64 star_time = 8;
    {PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.star_time_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 end_time = 9;
    {PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.end_time_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::RCToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskAddNotice::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RCToCS.AskAddNotice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskAddNotice];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional int32 platform = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_platform(), target);
  }

  // optional bytes title = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_title();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // optional int32 flag = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_flag(), target);
  }

  // optional int32 state = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_state(), target);
  }

  // optional int32 priority = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_priority(), target);
  }

  // optional bytes noticeMsg = 7;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_noticemsg();
    target = stream->WriteBytesMaybeAliased(7, _s, target);
  }

  // optional uint64 star_time = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this->_internal_star_time(), target);
  }

  // optional uint64 end_time = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        9, this->_internal_end_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RCToCS.AskAddNotice)
  return target;
}

::size_t AskAddNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RCToCS.AskAddNotice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes title = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_title());
    }

    // optional bytes noticeMsg = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_noticemsg());
    }

    // optional int32 platform = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_platform());
    }

    // optional int32 flag = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_flag());
    }

    // optional int32 state = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_state());
    }

    // optional int32 priority = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_priority());
    }

    // optional uint64 star_time = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_star_time());
    }

    // optional uint64 end_time = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_end_time());
    }

  }
  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskAddNotice];
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskAddNotice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskAddNotice*>(&to_msg);
  auto& from = static_cast<const AskAddNotice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RCToCS.AskAddNotice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_noticemsg(from._internal_noticemsg());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.platform_ = from._impl_.platform_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.flag_ = from._impl_.flag_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.state_ = from._impl_.state_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.priority_ = from._impl_.priority_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.star_time_ = from._impl_.star_time_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.end_time_ = from._impl_.end_time_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.msgid_ = from._impl_.msgid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskAddNotice::CopyFrom(const AskAddNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RCToCS.AskAddNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskAddNotice::IsInitialized() const {
  return true;
}

void AskAddNotice::InternalSwap(AskAddNotice* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.noticemsg_, &other->_impl_.noticemsg_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.msgid_)
      + sizeof(AskAddNotice::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(AskAddNotice, _impl_.platform_)>(
          reinterpret_cast<char*>(&_impl_.platform_),
          reinterpret_cast<char*>(&other->_impl_.platform_));
}

::google::protobuf::Metadata AskAddNotice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_RCToCS_2eproto_getter,
                                   &descriptor_table_RCToCS_2eproto_once,
                                   file_level_metadata_RCToCS_2eproto[8]);
}
// ===================================================================

class AskDeleteNotice::_Internal {
 public:
  using HasBits = decltype(std::declval<AskDeleteNotice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskDeleteNotice, _impl_._has_bits_);
};

AskDeleteNotice::AskDeleteNotice(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RCToCS.AskDeleteNotice)
}
AskDeleteNotice::AskDeleteNotice(
    ::google::protobuf::Arena* arena, const AskDeleteNotice& from)
    : AskDeleteNotice(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskDeleteNotice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msgid_{static_cast< ::RCToCS::MsgID >(33006)} {}

inline void AskDeleteNotice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.noticeid_ = {};
}
AskDeleteNotice::~AskDeleteNotice() {
  // @@protoc_insertion_point(destructor:RCToCS.AskDeleteNotice)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskDeleteNotice::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskDeleteNotice::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskDeleteNotice, _impl_._cached_size_),
              false,
          },
          &AskDeleteNotice::MergeImpl,
          &AskDeleteNotice::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskDeleteNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:RCToCS.AskDeleteNotice)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.noticeid_ = 0;
    _impl_.msgid_ = 33006;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskDeleteNotice::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AskDeleteNotice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskDeleteNotice, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskDeleteNotice_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RCToCS::AskDeleteNotice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 noticeId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskDeleteNotice, _impl_.noticeid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AskDeleteNotice, _impl_.noticeid_)}},
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskDeleteNotice];
    {::_pbi::TcParser::FastEvS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(AskDeleteNotice, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskDeleteNotice];
    {PROTOBUF_FIELD_OFFSET(AskDeleteNotice, _impl_.msgid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 noticeId = 2;
    {PROTOBUF_FIELD_OFFSET(AskDeleteNotice, _impl_.noticeid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::RCToCS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskDeleteNotice::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RCToCS.AskDeleteNotice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskDeleteNotice];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional int32 noticeId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_noticeid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RCToCS.AskDeleteNotice)
  return target;
}

::size_t AskDeleteNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RCToCS.AskDeleteNotice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 noticeId = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_noticeid());
    }

    // optional .RCToCS.MsgID msgid = 1 [default = eMsgRC2CS_AskDeleteNotice];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskDeleteNotice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskDeleteNotice*>(&to_msg);
  auto& from = static_cast<const AskDeleteNotice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RCToCS.AskDeleteNotice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.noticeid_ = from._impl_.noticeid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskDeleteNotice::CopyFrom(const AskDeleteNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RCToCS.AskDeleteNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskDeleteNotice::IsInitialized() const {
  return true;
}

void AskDeleteNotice::InternalSwap(AskDeleteNotice* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskDeleteNotice, _impl_.msgid_)
      + sizeof(AskDeleteNotice::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(AskDeleteNotice, _impl_.noticeid_)>(
          reinterpret_cast<char*>(&_impl_.noticeid_),
          reinterpret_cast<char*>(&other->_impl_.noticeid_));
}

::google::protobuf::Metadata AskDeleteNotice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_RCToCS_2eproto_getter,
                                   &descriptor_table_RCToCS_2eproto_once,
                                   file_level_metadata_RCToCS_2eproto[9]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace RCToCS
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_RCToCS_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
