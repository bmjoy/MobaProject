// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GCToBS.proto
// Protobuf C++ Version: 4.26.0-dev

#include "GCToBS.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace GCToBS {

inline constexpr OneClinetLogin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        uin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sessionid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        plat_{0u},
        login_success_{0u},
        nsid_{0u},
        msgnum_{static_cast< ::GCToBS::MsgNum >(32770)} {}

template <typename>
PROTOBUF_CONSTEXPR OneClinetLogin::OneClinetLogin(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OneClinetLoginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneClinetLoginDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneClinetLoginDefaultTypeInternal() {}
  union {
    OneClinetLogin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneClinetLoginDefaultTypeInternal _OneClinetLogin_default_instance_;

inline constexpr AskGateAddress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        plat_{0},
        msgnum_{static_cast< ::GCToBS::MsgNum >(32769)} {}

template <typename>
PROTOBUF_CONSTEXPR AskGateAddress::AskGateAddress(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskGateAddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskGateAddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskGateAddressDefaultTypeInternal() {}
  union {
    AskGateAddress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskGateAddressDefaultTypeInternal _AskGateAddress_default_instance_;
}  // namespace GCToBS
static ::_pb::Metadata file_level_metadata_GCToBS_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_GCToBS_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_GCToBS_2eproto = nullptr;
const ::uint32_t
    TableStruct_GCToBS_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::GCToBS::AskGateAddress, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GCToBS::AskGateAddress, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GCToBS::AskGateAddress, _impl_.msgnum_),
        PROTOBUF_FIELD_OFFSET(::GCToBS::AskGateAddress, _impl_.plat_),
        PROTOBUF_FIELD_OFFSET(::GCToBS::AskGateAddress, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::GCToBS::AskGateAddress, _impl_.token_),
        3,
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::GCToBS::OneClinetLogin, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GCToBS::OneClinetLogin, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GCToBS::OneClinetLogin, _impl_.msgnum_),
        PROTOBUF_FIELD_OFFSET(::GCToBS::OneClinetLogin, _impl_.uin_),
        PROTOBUF_FIELD_OFFSET(::GCToBS::OneClinetLogin, _impl_.sessionid_),
        PROTOBUF_FIELD_OFFSET(::GCToBS::OneClinetLogin, _impl_.plat_),
        PROTOBUF_FIELD_OFFSET(::GCToBS::OneClinetLogin, _impl_.login_success_),
        PROTOBUF_FIELD_OFFSET(::GCToBS::OneClinetLogin, _impl_.nsid_),
        5,
        0,
        1,
        2,
        3,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::GCToBS::AskGateAddress)},
        {16, 30, -1, sizeof(::GCToBS::OneClinetLogin)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::GCToBS::_AskGateAddress_default_instance_._instance,
    &::GCToBS::_OneClinetLogin_default_instance_._instance,
};
const char descriptor_table_protodef_GCToBS_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014GCToBS.proto\022\006GCToBS\"~\n\016AskGateAddress"
    "\022=\n\006msgnum\030\001 \001(\0162\016.GCToBS.MsgNum:\035eMsgTo"
    "BSFromGC_AskGateAddress\022\014\n\004plat\030\002 \001(\005\022\020\n"
    "\010username\030\003 \001(\t\022\r\n\005token\030\004 \001(\t\"\242\001\n\016OneCl"
    "inetLogin\022=\n\006msgnum\030\001 \001(\0162\016.GCToBS.MsgNu"
    "m:\035eMsgToBSFromGC_OneClinetLogin\022\013\n\003uin\030"
    "\002 \001(\t\022\021\n\tsessionid\030\003 \001(\t\022\014\n\004plat\030\004 \001(\r\022\025"
    "\n\rlogin_success\030\005 \001(\r\022\014\n\004nsid\030\006 \001(\r*\210\001\n\006"
    "MsgNum\022\032\n\024eMsgToBSFromGC_Begin\020\200\200\002\022#\n\035eM"
    "sgToBSFromGC_AskGateAddress\020\201\200\002\022#\n\035eMsgT"
    "oBSFromGC_OneClinetLogin\020\202\200\002\022\030\n\022eMsgToBS"
    "FromGC_End\020\350\201\002"
};
static ::absl::once_flag descriptor_table_GCToBS_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_GCToBS_2eproto = {
    false,
    false,
    454,
    descriptor_table_protodef_GCToBS_2eproto,
    "GCToBS.proto",
    &descriptor_table_GCToBS_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_GCToBS_2eproto::offsets,
    file_level_metadata_GCToBS_2eproto,
    file_level_enum_descriptors_GCToBS_2eproto,
    file_level_service_descriptors_GCToBS_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_GCToBS_2eproto_getter() {
  return &descriptor_table_GCToBS_2eproto;
}
namespace GCToBS {
const ::google::protobuf::EnumDescriptor* MsgNum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_GCToBS_2eproto);
  return file_level_enum_descriptors_GCToBS_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MsgNum_internal_data_[] = {
    0u, 262144u, 32770u, 32769u, 33000u, 32768u, };
bool MsgNum_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, MsgNum_internal_data_);
}
// ===================================================================

class AskGateAddress::_Internal {
 public:
  using HasBits = decltype(std::declval<AskGateAddress>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_._has_bits_);
};

AskGateAddress::AskGateAddress(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GCToBS.AskGateAddress)
}
inline PROTOBUF_NDEBUG_INLINE AskGateAddress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        token_(arena, from.token_) {}

AskGateAddress::AskGateAddress(
    ::google::protobuf::Arena* arena,
    const AskGateAddress& from)
    : ::google::protobuf::Message(arena) {
  AskGateAddress* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, plat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, plat_),
           offsetof(Impl_, msgnum_) -
               offsetof(Impl_, plat_) +
               sizeof(Impl_::msgnum_));

  // @@protoc_insertion_point(copy_constructor:GCToBS.AskGateAddress)
}
inline PROTOBUF_NDEBUG_INLINE AskGateAddress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        username_(arena),
        token_(arena),
        msgnum_{static_cast< ::GCToBS::MsgNum >(32769)} {}

inline void AskGateAddress::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.plat_ = {};
}
AskGateAddress::~AskGateAddress() {
  // @@protoc_insertion_point(destructor:GCToBS.AskGateAddress)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskGateAddress::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.token_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskGateAddress::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_._cached_size_),
              false,
          },
          &AskGateAddress::MergeImpl,
          &AskGateAddress::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskGateAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:GCToBS.AskGateAddress)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.token_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    _impl_.plat_ = 0;
    _impl_.msgnum_ = 32769;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskGateAddress::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 43, 2> AskGateAddress::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskGateAddress_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GCToBS::AskGateAddress>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string token = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_.token_)}},
    // optional .GCToBS.MsgNum msgnum = 1 [default = eMsgToBSFromGC_AskGateAddress];
    {::_pbi::TcParser::FastEvS1,
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_.msgnum_)}},
    // optional int32 plat = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskGateAddress, _impl_.plat_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_.plat_)}},
    // optional string username = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .GCToBS.MsgNum msgnum = 1 [default = eMsgToBSFromGC_AskGateAddress];
    {PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_.msgnum_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 plat = 2;
    {PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_.plat_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string username = 3;
    {PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_.username_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string token = 4;
    {PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_.token_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::GCToBS::MsgNum_internal_data_},
  }}, {{
    "\25\0\0\10\5\0\0\0"
    "GCToBS.AskGateAddress"
    "username"
    "token"
  }},
};

::uint8_t* AskGateAddress::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCToBS.AskGateAddress)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .GCToBS.MsgNum msgnum = 1 [default = eMsgToBSFromGC_AskGateAddress];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgnum(), target);
  }

  // optional int32 plat = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_plat(), target);
  }

  // optional string username = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "GCToBS.AskGateAddress.username");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string token = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_token();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "GCToBS.AskGateAddress.token");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCToBS.AskGateAddress)
  return target;
}

::size_t AskGateAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GCToBS.AskGateAddress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string username = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_username());
    }

    // optional string token = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_token());
    }

    // optional int32 plat = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_plat());
    }

    // optional .GCToBS.MsgNum msgnum = 1 [default = eMsgToBSFromGC_AskGateAddress];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgnum());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskGateAddress::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskGateAddress*>(&to_msg);
  auto& from = static_cast<const AskGateAddress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GCToBS.AskGateAddress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_username(from._internal_username());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_token(from._internal_token());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.plat_ = from._impl_.plat_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.msgnum_ = from._impl_.msgnum_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskGateAddress::CopyFrom(const AskGateAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GCToBS.AskGateAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskGateAddress::IsInitialized() const {
  return true;
}

void AskGateAddress::InternalSwap(AskGateAddress* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_.msgnum_)
      + sizeof(AskGateAddress::_impl_.msgnum_)
      - PROTOBUF_FIELD_OFFSET(AskGateAddress, _impl_.plat_)>(
          reinterpret_cast<char*>(&_impl_.plat_),
          reinterpret_cast<char*>(&other->_impl_.plat_));
}

::google::protobuf::Metadata AskGateAddress::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_GCToBS_2eproto_getter,
                                   &descriptor_table_GCToBS_2eproto_once,
                                   file_level_metadata_GCToBS_2eproto[0]);
}
// ===================================================================

class OneClinetLogin::_Internal {
 public:
  using HasBits = decltype(std::declval<OneClinetLogin>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_._has_bits_);
};

OneClinetLogin::OneClinetLogin(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GCToBS.OneClinetLogin)
}
inline PROTOBUF_NDEBUG_INLINE OneClinetLogin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        uin_(arena, from.uin_),
        sessionid_(arena, from.sessionid_) {}

OneClinetLogin::OneClinetLogin(
    ::google::protobuf::Arena* arena,
    const OneClinetLogin& from)
    : ::google::protobuf::Message(arena) {
  OneClinetLogin* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, plat_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, plat_),
           offsetof(Impl_, msgnum_) -
               offsetof(Impl_, plat_) +
               sizeof(Impl_::msgnum_));

  // @@protoc_insertion_point(copy_constructor:GCToBS.OneClinetLogin)
}
inline PROTOBUF_NDEBUG_INLINE OneClinetLogin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        uin_(arena),
        sessionid_(arena),
        msgnum_{static_cast< ::GCToBS::MsgNum >(32770)} {}

inline void OneClinetLogin::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, plat_),
           0,
           offsetof(Impl_, nsid_) -
               offsetof(Impl_, plat_) +
               sizeof(Impl_::nsid_));
}
OneClinetLogin::~OneClinetLogin() {
  // @@protoc_insertion_point(destructor:GCToBS.OneClinetLogin)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OneClinetLogin::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.uin_.Destroy();
  _impl_.sessionid_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
OneClinetLogin::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_._cached_size_),
              false,
          },
          &OneClinetLogin::MergeImpl,
          &OneClinetLogin::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void OneClinetLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:GCToBS.OneClinetLogin)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.uin_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.sessionid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&_impl_.plat_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.nsid_) -
        reinterpret_cast<char*>(&_impl_.plat_)) + sizeof(_impl_.nsid_));
    _impl_.msgnum_ = 32770;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OneClinetLogin::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 42, 2> OneClinetLogin::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OneClinetLogin_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GCToBS::OneClinetLogin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .GCToBS.MsgNum msgnum = 1 [default = eMsgToBSFromGC_OneClinetLogin];
    {::_pbi::TcParser::FastEvS1,
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.msgnum_)}},
    // optional string uin = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.uin_)}},
    // optional string sessionid = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.sessionid_)}},
    // optional uint32 plat = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OneClinetLogin, _impl_.plat_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.plat_)}},
    // optional uint32 login_success = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OneClinetLogin, _impl_.login_success_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.login_success_)}},
    // optional uint32 nsid = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OneClinetLogin, _impl_.nsid_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.nsid_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .GCToBS.MsgNum msgnum = 1 [default = eMsgToBSFromGC_OneClinetLogin];
    {PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.msgnum_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional string uin = 2;
    {PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.uin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string sessionid = 3;
    {PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.sessionid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 plat = 4;
    {PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.plat_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 login_success = 5;
    {PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.login_success_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 nsid = 6;
    {PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.nsid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::GCToBS::MsgNum_internal_data_},
  }}, {{
    "\25\0\3\11\0\0\0\0"
    "GCToBS.OneClinetLogin"
    "uin"
    "sessionid"
  }},
};

::uint8_t* OneClinetLogin::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GCToBS.OneClinetLogin)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .GCToBS.MsgNum msgnum = 1 [default = eMsgToBSFromGC_OneClinetLogin];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgnum(), target);
  }

  // optional string uin = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_uin();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "GCToBS.OneClinetLogin.uin");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string sessionid = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_sessionid();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "GCToBS.OneClinetLogin.sessionid");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint32 plat = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_plat(), target);
  }

  // optional uint32 login_success = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_login_success(), target);
  }

  // optional uint32 nsid = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_nsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GCToBS.OneClinetLogin)
  return target;
}

::size_t OneClinetLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GCToBS.OneClinetLogin)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string uin = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_uin());
    }

    // optional string sessionid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sessionid());
    }

    // optional uint32 plat = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_plat());
    }

    // optional uint32 login_success = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_login_success());
    }

    // optional uint32 nsid = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_nsid());
    }

    // optional .GCToBS.MsgNum msgnum = 1 [default = eMsgToBSFromGC_OneClinetLogin];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgnum());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void OneClinetLogin::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OneClinetLogin*>(&to_msg);
  auto& from = static_cast<const OneClinetLogin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GCToBS.OneClinetLogin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_uin(from._internal_uin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_sessionid(from._internal_sessionid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.plat_ = from._impl_.plat_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.login_success_ = from._impl_.login_success_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.nsid_ = from._impl_.nsid_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.msgnum_ = from._impl_.msgnum_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OneClinetLogin::CopyFrom(const OneClinetLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GCToBS.OneClinetLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OneClinetLogin::IsInitialized() const {
  return true;
}

void OneClinetLogin::InternalSwap(OneClinetLogin* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.uin_, &other->_impl_.uin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sessionid_, &other->_impl_.sessionid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.msgnum_)
      + sizeof(OneClinetLogin::_impl_.msgnum_)
      - PROTOBUF_FIELD_OFFSET(OneClinetLogin, _impl_.plat_)>(
          reinterpret_cast<char*>(&_impl_.plat_),
          reinterpret_cast<char*>(&other->_impl_.plat_));
}

::google::protobuf::Metadata OneClinetLogin::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_GCToBS_2eproto_getter,
                                   &descriptor_table_GCToBS_2eproto_once,
                                   file_level_metadata_GCToBS_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace GCToBS
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_GCToBS_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
