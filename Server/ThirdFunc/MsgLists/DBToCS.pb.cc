// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DBToCs.proto
// Protobuf C++ Version: 4.26.0-dev

#include "DBToCs.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace DBToCS {

inline constexpr RuneInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bagstr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        slotstr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RuneInfo::RuneInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RuneInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuneInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuneInfoDefaultTypeInternal() {}
  union {
    RuneInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuneInfoDefaultTypeInternal _RuneInfo_default_instance_;

inline constexpr RSinfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        related_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        related_id_{::uint64_t{0u}},
        related_header_{0u},
        relation_{0u},
        related_vip_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR RSinfo::RSinfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RSinfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RSinfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RSinfoDefaultTypeInternal() {}
  union {
    RSinfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RSinfoDefaultTypeInternal _RSinfo_default_instance_;

inline constexpr QueryNotice_Notice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        notice_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        eflag_{0},
        estate_{0},
        priority_{0},
        star_time_{::uint64_t{0u}},
        end_time_{::uint64_t{0u}},
        platform_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR QueryNotice_Notice::QueryNotice_Notice(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryNotice_NoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryNotice_NoticeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryNotice_NoticeDefaultTypeInternal() {}
  union {
    QueryNotice_Notice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryNotice_NoticeDefaultTypeInternal _QueryNotice_Notice_default_instance_;

inline constexpr QueryAllAccount_Account::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        csid_{0},
        sdkid_{0},
        guid_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR QueryAllAccount_Account::QueryAllAccount_Account(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryAllAccount_AccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllAccount_AccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllAccount_AccountDefaultTypeInternal() {}
  union {
    QueryAllAccount_Account _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllAccount_AccountDefaultTypeInternal _QueryAllAccount_Account_default_instance_;

inline constexpr MailInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mailid_{0},
        state_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MailInfo::MailInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MailInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MailInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MailInfoDefaultTypeInternal() {}
  union {
    MailInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MailInfoDefaultTypeInternal _MailInfo_default_instance_;

inline constexpr MailCallBack::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gift_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        createtime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mailid_{0},
        mailtype_{0},
        objid_{::int64_t{0}},
        channel_{0},
        mgsid_{static_cast< ::DBToCS::MsgID >(6)} {}

template <typename>
PROTOBUF_CONSTEXPR MailCallBack::MailCallBack(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MailCallBackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MailCallBackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MailCallBackDefaultTypeInternal() {}
  union {
    MailCallBack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MailCallBackDefaultTypeInternal _MailCallBack_default_instance_;

inline constexpr ItemInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_id_{0},
        item_num_{0u},
        buy_time_{0},
        end_time_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ItemInfo::ItemInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ItemInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemInfoDefaultTypeInternal() {}
  union {
    ItemInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemInfoDefaultTypeInternal _ItemInfo_default_instance_;

inline constexpr HeroCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        buytime_{::int64_t{0}},
        expiredtime_{::int64_t{0}},
        commodityid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR HeroCfg::HeroCfg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HeroCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeroCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeroCfgDefaultTypeInternal() {}
  union {
    HeroCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeroCfgDefaultTypeInternal _HeroCfg_default_instance_;

inline constexpr CheckNameRsp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        completeinfo_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gsid_{0},
        gcnetid_{0},
        gsnetid_{0},
        checkres_{0},
        mgsid_{static_cast< ::DBToCS::MsgID >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR CheckNameRsp::CheckNameRsp(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CheckNameRspDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckNameRspDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckNameRspDefaultTypeInternal() {}
  union {
    CheckNameRsp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckNameRspDefaultTypeInternal _CheckNameRsp_default_instance_;

inline constexpr ChangeNickname::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        newnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        oldnickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        guid_{::uint64_t{0u}},
        reflag_{false},
        mgsid_{static_cast< ::DBToCS::MsgID >(4)} {}

template <typename>
PROTOBUF_CONSTEXPR ChangeNickname::ChangeNickname(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChangeNicknameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeNicknameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeNicknameDefaultTypeInternal() {}
  union {
    ChangeNickname _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeNicknameDefaultTypeInternal _ChangeNickname_default_instance_;

inline constexpr CDKeyEvents_event_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        platform_{0},
        end_time_{::uint64_t{0u}},
        gift_type_{0},
        code_num_{0},
        code_len_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CDKeyEvents_event_info::CDKeyEvents_event_info(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CDKeyEvents_event_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDKeyEvents_event_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDKeyEvents_event_infoDefaultTypeInternal() {}
  union {
    CDKeyEvents_event_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDKeyEvents_event_infoDefaultTypeInternal _CDKeyEvents_event_info_default_instance_;

inline constexpr BuyGoods::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        buygoodsmag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mgsid_{static_cast< ::DBToCS::MsgID >(3)} {}

template <typename>
PROTOBUF_CONSTEXPR BuyGoods::BuyGoods(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BuyGoodsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuyGoodsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuyGoodsDefaultTypeInternal() {}
  union {
    BuyGoods _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuyGoodsDefaultTypeInternal _BuyGoods_default_instance_;

inline constexpr QueryUser::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        herocfg_{},
        runeinfo_{},
        rsinfo_{},
        item_info_{},
        mail_info_{},
        db_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        login_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        guidestr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        taskdata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gsid_{0},
        gcnetid_{0},
        msgid_{static_cast< ::DBToCS::MsgID >(2)} {}

template <typename>
PROTOBUF_CONSTEXPR QueryUser::QueryUser(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUserDefaultTypeInternal() {}
  union {
    QueryUser _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUserDefaultTypeInternal _QueryUser_default_instance_;

inline constexpr QueryNotice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        notice_info_{},
        mgsid_{static_cast< ::DBToCS::MsgID >(5)} {}

template <typename>
PROTOBUF_CONSTEXPR QueryNotice::QueryNotice(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryNoticeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryNoticeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryNoticeDefaultTypeInternal() {}
  union {
    QueryNotice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryNoticeDefaultTypeInternal _QueryNotice_default_instance_;

inline constexpr QueryAllAccount::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_{},
        mgsid_{static_cast< ::DBToCS::MsgID >(7)} {}

template <typename>
PROTOBUF_CONSTEXPR QueryAllAccount::QueryAllAccount(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryAllAccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllAccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllAccountDefaultTypeInternal() {}
  union {
    QueryAllAccount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllAccountDefaultTypeInternal _QueryAllAccount_default_instance_;

inline constexpr CDKeyEvents::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        info_{},
        nsid_{0},
        mgsid_{static_cast< ::DBToCS::MsgID >(8)} {}

template <typename>
PROTOBUF_CONSTEXPR CDKeyEvents::CDKeyEvents(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CDKeyEventsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CDKeyEventsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CDKeyEventsDefaultTypeInternal() {}
  union {
    CDKeyEvents _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CDKeyEventsDefaultTypeInternal _CDKeyEvents_default_instance_;

inline constexpr QueryAllUser::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        squeryuser_{},
        msgid_{static_cast< ::DBToCS::MsgID >(9)} {}

template <typename>
PROTOBUF_CONSTEXPR QueryAllUser::QueryAllUser(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct QueryAllUserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllUserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllUserDefaultTypeInternal() {}
  union {
    QueryAllUser _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllUserDefaultTypeInternal _QueryAllUser_default_instance_;
}  // namespace DBToCS
static ::_pb::Metadata file_level_metadata_DBToCs_2eproto[17];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_DBToCs_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_DBToCs_2eproto = nullptr;
const ::uint32_t
    TableStruct_DBToCs_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents_event_info, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents_event_info, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents_event_info, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents_event_info, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents_event_info, _impl_.platform_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents_event_info, _impl_.end_time_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents_event_info, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents_event_info, _impl_.gift_type_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents_event_info, _impl_.item_info_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents_event_info, _impl_.code_num_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents_event_info, _impl_.code_len_),
        3,
        0,
        4,
        5,
        1,
        6,
        2,
        7,
        8,
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CDKeyEvents, _impl_.nsid_),
        1,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllAccount_Account, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllAccount_Account, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllAccount_Account, _impl_.user_name_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllAccount_Account, _impl_.csid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllAccount_Account, _impl_.sdkid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllAccount_Account, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllAccount_Account, _impl_.guid_),
        0,
        2,
        3,
        1,
        4,
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllAccount, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllAccount, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllAccount, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllAccount, _impl_.account_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _impl_.mailid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _impl_.mailtype_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _impl_.channel_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _impl_.gift_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _impl_.createtime_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailCallBack, _impl_.objid_),
        9,
        5,
        6,
        8,
        0,
        1,
        2,
        3,
        4,
        7,
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice_Notice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice_Notice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice_Notice, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice_Notice, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice_Notice, _impl_.eflag_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice_Notice, _impl_.estate_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice_Notice, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice_Notice, _impl_.notice_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice_Notice, _impl_.star_time_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice_Notice, _impl_.end_time_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice_Notice, _impl_.platform_),
        2,
        0,
        3,
        4,
        5,
        1,
        6,
        7,
        8,
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryNotice, _impl_.notice_info_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::DBToCS::ChangeNickname, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::ChangeNickname, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::ChangeNickname, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::ChangeNickname, _impl_.guid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::ChangeNickname, _impl_.reflag_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::ChangeNickname, _impl_.newnickname_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::ChangeNickname, _impl_.oldnickname_),
        4,
        2,
        3,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::DBToCS::BuyGoods, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::BuyGoods, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::BuyGoods, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::BuyGoods, _impl_.buygoodsmag_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::DBToCS::CheckNameRsp, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CheckNameRsp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::CheckNameRsp, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CheckNameRsp, _impl_.completeinfo_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CheckNameRsp, _impl_.gsid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CheckNameRsp, _impl_.gcnetid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CheckNameRsp, _impl_.gsnetid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::CheckNameRsp, _impl_.checkres_),
        5,
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::DBToCS::HeroCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::HeroCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::HeroCfg, _impl_.commodityid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::HeroCfg, _impl_.buytime_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::HeroCfg, _impl_.expiredtime_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::DBToCS::RuneInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::RuneInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::RuneInfo, _impl_.bagstr_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::RuneInfo, _impl_.slotstr_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::DBToCS::RSinfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::RSinfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::RSinfo, _impl_.related_id_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::RSinfo, _impl_.related_header_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::RSinfo, _impl_.related_name_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::RSinfo, _impl_.relation_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::RSinfo, _impl_.related_vip_),
        1,
        2,
        0,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::DBToCS::ItemInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::ItemInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::ItemInfo, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::ItemInfo, _impl_.item_num_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::ItemInfo, _impl_.buy_time_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::ItemInfo, _impl_.end_time_),
        0,
        1,
        2,
        3,
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailInfo, _impl_.mailid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::MailInfo, _impl_.state_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.db_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.login_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.gsid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.gcnetid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.herocfg_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.runeinfo_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.rsinfo_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.item_info_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.mail_info_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.guidestr_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryUser, _impl_.taskdata_),
        7,
        0,
        1,
        5,
        6,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllUser, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllUser, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllUser, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::DBToCS::QueryAllUser, _impl_.squeryuser_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 17, -1, sizeof(::DBToCS::CDKeyEvents_event_info)},
        {26, 37, -1, sizeof(::DBToCS::CDKeyEvents)},
        {40, 53, -1, sizeof(::DBToCS::QueryAllAccount_Account)},
        {58, 68, -1, sizeof(::DBToCS::QueryAllAccount)},
        {70, 88, -1, sizeof(::DBToCS::MailCallBack)},
        {98, 115, -1, sizeof(::DBToCS::QueryNotice_Notice)},
        {124, 134, -1, sizeof(::DBToCS::QueryNotice)},
        {136, 149, -1, sizeof(::DBToCS::ChangeNickname)},
        {154, 164, -1, sizeof(::DBToCS::BuyGoods)},
        {166, 180, -1, sizeof(::DBToCS::CheckNameRsp)},
        {186, 197, -1, sizeof(::DBToCS::HeroCfg)},
        {200, 210, -1, sizeof(::DBToCS::RuneInfo)},
        {212, 225, -1, sizeof(::DBToCS::RSinfo)},
        {230, 242, -1, sizeof(::DBToCS::ItemInfo)},
        {246, 256, -1, sizeof(::DBToCS::MailInfo)},
        {258, 279, -1, sizeof(::DBToCS::QueryUser)},
        {292, 302, -1, sizeof(::DBToCS::QueryAllUser)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::DBToCS::_CDKeyEvents_event_info_default_instance_._instance,
    &::DBToCS::_CDKeyEvents_default_instance_._instance,
    &::DBToCS::_QueryAllAccount_Account_default_instance_._instance,
    &::DBToCS::_QueryAllAccount_default_instance_._instance,
    &::DBToCS::_MailCallBack_default_instance_._instance,
    &::DBToCS::_QueryNotice_Notice_default_instance_._instance,
    &::DBToCS::_QueryNotice_default_instance_._instance,
    &::DBToCS::_ChangeNickname_default_instance_._instance,
    &::DBToCS::_BuyGoods_default_instance_._instance,
    &::DBToCS::_CheckNameRsp_default_instance_._instance,
    &::DBToCS::_HeroCfg_default_instance_._instance,
    &::DBToCS::_RuneInfo_default_instance_._instance,
    &::DBToCS::_RSinfo_default_instance_._instance,
    &::DBToCS::_ItemInfo_default_instance_._instance,
    &::DBToCS::_MailInfo_default_instance_._instance,
    &::DBToCS::_QueryUser_default_instance_._instance,
    &::DBToCS::_QueryAllUser_default_instance_._instance,
};
const char descriptor_table_protodef_DBToCs_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014DBToCs.proto\022\006DBToCS\"\254\002\n\013CDKeyEvents\0228"
    "\n\005mgsid\030\001 \001(\0162\r.DBToCS.MsgID:\032eQueryCDKe"
    "yEvents_CallBack\022,\n\004info\030\002 \003(\0132\036.DBToCS."
    "CDKeyEvents.event_info\022\014\n\004nsid\030\003 \001(\005\032\246\001\n"
    "\nevent_info\022\n\n\002id\030\001 \001(\005\022\r\n\005title\030\002 \001(\t\022\020"
    "\n\010platform\030\003 \001(\005\022\020\n\010end_time\030\004 \001(\004\022\017\n\007co"
    "ntent\030\005 \001(\t\022\021\n\tgift_type\030\006 \001(\005\022\021\n\titem_i"
    "nfo\030\007 \001(\t\022\020\n\010code_num\030\010 \001(\005\022\020\n\010code_len\030"
    "\t \001(\005\"\327\001\n\017QueryAllAccount\0227\n\005mgsid\030\001 \001(\016"
    "2\r.DBToCS.MsgID:\031eQueryAllAccount_CallBa"
    "ck\0220\n\007account\030\002 \003(\0132\037.DBToCS.QueryAllAcc"
    "ount.Account\032Y\n\007Account\022\021\n\tuser_name\030\001 \001"
    "(\t\022\014\n\004csid\030\002 \001(\005\022\r\n\005sdkid\030\003 \001(\005\022\020\n\010nickn"
    "ame\030\004 \001(\t\022\014\n\004guid\030\005 \001(\003\"\320\001\n\014MailCallBack"
    "\022,\n\005mgsid\030\001 \001(\0162\r.DBToCS.MsgID:\016eMail_Ca"
    "llBack\022\016\n\006mailid\030\002 \001(\005\022\020\n\010mailtype\030\003 \001(\005"
    "\022\017\n\007channel\030\004 \001(\005\022\r\n\005title\030\005 \001(\t\022\017\n\007cont"
    "ent\030\006 \001(\t\022\014\n\004gift\030\007 \001(\t\022\016\n\006sender\030\010 \001(\t\022"
    "\022\n\ncreatetime\030\t \001(\t\022\r\n\005objid\030\n \001(\003\"\221\002\n\013Q"
    "ueryNotice\0223\n\005mgsid\030\001 \001(\0162\r.DBToCS.MsgID"
    ":\025eQueryNotice_CallBack\022/\n\013notice_info\030\002"
    " \003(\0132\032.DBToCS.QueryNotice.Notice\032\233\001\n\006Not"
    "ice\022\n\n\002id\030\001 \001(\r\022\r\n\005title\030\002 \001(\t\022\r\n\005eflag\030"
    "\003 \001(\005\022\016\n\006estate\030\004 \001(\005\022\020\n\010priority\030\005 \001(\005\022"
    "\016\n\006notice\030\006 \001(\t\022\021\n\tstar_time\030\007 \001(\004\022\020\n\010en"
    "d_time\030\010 \001(\004\022\020\n\010platform\030\t \001(\r\"\220\001\n\016Chang"
    "eNickname\0226\n\005mgsid\030\001 \001(\0162\r.DBToCS.MsgID:"
    "\030eChangeNickname_CallBack\022\014\n\004guid\030\002 \001(\004\022"
    "\016\n\006reflag\030\003 \001(\010\022\023\n\013newnickname\030\004 \001(\t\022\023\n\013"
    "oldnickname\030\005 \001(\t\"P\n\010BuyGoods\022/\n\005mgsid\030\001"
    " \001(\0162\r.DBToCS.MsgID:\021eBuyGoodsCallBack\022\023"
    "\n\013buygoodsmag\030\002 \001(\t\"\241\001\n\014CheckNameRsp\0229\n\005"
    "mgsid\030\001 \001(\0162\r.DBToCS.MsgID:\033eCheckNickNa"
    "meLogicCallBack\022\024\n\014completeInfo\030\002 \001(\t\022\014\n"
    "\004gsid\030\003 \001(\005\022\017\n\007gcnetid\030\004 \001(\005\022\017\n\007gsnetid\030"
    "\005 \001(\005\022\020\n\010checkres\030\006 \001(\005\"D\n\007HeroCfg\022\023\n\013co"
    "mmodityid\030\001 \001(\r\022\017\n\007buytime\030\002 \001(\003\022\023\n\013expi"
    "redtime\030\003 \001(\003\"+\n\010RuneInfo\022\016\n\006bagStr\030\001 \001("
    "\t\022\017\n\007slotStr\030\002 \001(\t\"q\n\006RSinfo\022\022\n\nrelated_"
    "id\030\001 \001(\004\022\026\n\016related_header\030\002 \001(\r\022\024\n\014rela"
    "ted_name\030\003 \001(\t\022\020\n\010relation\030\004 \001(\r\022\023\n\013rela"
    "ted_vip\030\005 \001(\r\"Q\n\010ItemInfo\022\017\n\007item_id\030\001 \001"
    "(\005\022\020\n\010item_num\030\002 \001(\r\022\020\n\010buy_time\030\003 \001(\005\022\020"
    "\n\010end_time\030\004 \001(\005\")\n\010MailInfo\022\016\n\006mailid\030\001"
    " \001(\005\022\r\n\005state\030\002 \001(\005\"\340\002\n\tQueryUser\0223\n\005msg"
    "id\030\001 \001(\0162\r.DBToCS.MsgID:\025eQueryUser_DBCa"
    "llBack\022\n\n\002db\030\002 \001(\t\022\r\n\005login\030\003 \001(\t\022\014\n\004gsi"
    "d\030\004 \001(\005\022\017\n\007gcnetid\030\005 \001(\005\022\020\n\010nickname\030\006 \001"
    "(\t\022 \n\007herocfg\030\007 \003(\0132\017.DBToCS.HeroCfg\022\"\n\010"
    "runeinfo\030\010 \003(\0132\020.DBToCS.RuneInfo\022\036\n\006rsin"
    "fo\030\t \003(\0132\016.DBToCS.RSinfo\022#\n\titem_info\030\n "
    "\003(\0132\020.DBToCS.ItemInfo\022#\n\tmail_info\030\013 \003(\013"
    "2\020.DBToCS.MailInfo\022\020\n\010guidestr\030\014 \001(\t\022\020\n\010"
    "taskData\030\r \001(\t\"k\n\014QueryAllUser\0224\n\005msgid\030"
    "\001 \001(\0162\r.DBToCS.MsgID:\026eQueryAllUser_Call"
    "Back\022%\n\nsQueryUser\030\002 \003(\0132\021.DBToCS.QueryU"
    "ser*\202\002\n\005MsgID\022\037\n\033eCheckNickNameLogicCall"
    "Back\020\001\022\031\n\025eQueryUser_DBCallBack\020\002\022\025\n\021eBu"
    "yGoodsCallBack\020\003\022\034\n\030eChangeNickname_Call"
    "Back\020\004\022\031\n\025eQueryNotice_CallBack\020\005\022\022\n\016eMa"
    "il_CallBack\020\006\022\035\n\031eQueryAllAccount_CallBa"
    "ck\020\007\022\036\n\032eQueryCDKeyEvents_CallBack\020\010\022\032\n\026"
    "eQueryAllUser_CallBack\020\t"
};
static ::absl::once_flag descriptor_table_DBToCs_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_DBToCs_2eproto = {
    false,
    false,
    2504,
    descriptor_table_protodef_DBToCs_2eproto,
    "DBToCs.proto",
    &descriptor_table_DBToCs_2eproto_once,
    nullptr,
    0,
    17,
    schemas,
    file_default_instances,
    TableStruct_DBToCs_2eproto::offsets,
    file_level_metadata_DBToCs_2eproto,
    file_level_enum_descriptors_DBToCs_2eproto,
    file_level_service_descriptors_DBToCs_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_DBToCs_2eproto_getter() {
  return &descriptor_table_DBToCs_2eproto;
}
namespace DBToCS {
const ::google::protobuf::EnumDescriptor* MsgID_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_DBToCs_2eproto);
  return file_level_enum_descriptors_DBToCs_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MsgID_internal_data_[] = {
    589825u, 0u, };
bool MsgID_IsValid(int value) {
  return 1 <= value && value <= 9;
}
// ===================================================================

class CDKeyEvents_event_info::_Internal {
 public:
  using HasBits = decltype(std::declval<CDKeyEvents_event_info>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_._has_bits_);
};

CDKeyEvents_event_info::CDKeyEvents_event_info(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.CDKeyEvents.event_info)
}
inline PROTOBUF_NDEBUG_INLINE CDKeyEvents_event_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_),
        content_(arena, from.content_),
        item_info_(arena, from.item_info_) {}

CDKeyEvents_event_info::CDKeyEvents_event_info(
    ::google::protobuf::Arena* arena,
    const CDKeyEvents_event_info& from)
    : ::google::protobuf::Message(arena) {
  CDKeyEvents_event_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, code_len_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::code_len_));

  // @@protoc_insertion_point(copy_constructor:DBToCS.CDKeyEvents.event_info)
}
inline PROTOBUF_NDEBUG_INLINE CDKeyEvents_event_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena),
        content_(arena),
        item_info_(arena) {}

inline void CDKeyEvents_event_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, code_len_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::code_len_));
}
CDKeyEvents_event_info::~CDKeyEvents_event_info() {
  // @@protoc_insertion_point(destructor:DBToCS.CDKeyEvents.event_info)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDKeyEvents_event_info::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  _impl_.content_.Destroy();
  _impl_.item_info_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CDKeyEvents_event_info::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_._cached_size_),
              false,
          },
          &CDKeyEvents_event_info::MergeImpl,
          &CDKeyEvents_event_info::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CDKeyEvents_event_info::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.CDKeyEvents.event_info)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.content_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.item_info_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.code_num_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.code_num_));
  }
  _impl_.code_len_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDKeyEvents_event_info::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 67, 2> CDKeyEvents_event_info::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CDKeyEvents_event_info_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::CDKeyEvents_event_info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDKeyEvents_event_info, _impl_.id_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.id_)}},
    // optional string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.title_)}},
    // optional int32 platform = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDKeyEvents_event_info, _impl_.platform_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.platform_)}},
    // optional uint64 end_time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CDKeyEvents_event_info, _impl_.end_time_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.end_time_)}},
    // optional string content = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.content_)}},
    // optional int32 gift_type = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDKeyEvents_event_info, _impl_.gift_type_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.gift_type_)}},
    // optional string item_info = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.item_info_)}},
    // optional int32 code_num = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDKeyEvents_event_info, _impl_.code_num_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.code_num_)}},
    // optional int32 code_len = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDKeyEvents_event_info, _impl_.code_len_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.code_len_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string title = 2;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.title_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 platform = 3;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.platform_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint64 end_time = 4;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.end_time_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional string content = 5;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.content_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 gift_type = 6;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.gift_type_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string item_info = 7;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.item_info_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 code_num = 8;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.code_num_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 code_len = 9;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.code_len_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\35\0\5\0\0\7\0\11\0\0\0\0\0\0\0\0"
    "DBToCS.CDKeyEvents.event_info"
    "title"
    "content"
    "item_info"
  }},
};

::uint8_t* CDKeyEvents_event_info::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.CDKeyEvents.event_info)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.CDKeyEvents.event_info.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 platform = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_platform(), target);
  }

  // optional uint64 end_time = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_end_time(), target);
  }

  // optional string content = 5;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.CDKeyEvents.event_info.content");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional int32 gift_type = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_gift_type(), target);
  }

  // optional string item_info = 7;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_item_info();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.CDKeyEvents.event_info.item_info");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional int32 code_num = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_code_num(), target);
  }

  // optional int32 code_len = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_code_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.CDKeyEvents.event_info)
  return target;
}

::size_t CDKeyEvents_event_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.CDKeyEvents.event_info)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string title = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string content = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_content());
    }

    // optional string item_info = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_item_info());
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_id());
    }

    // optional int32 platform = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_platform());
    }

    // optional uint64 end_time = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_end_time());
    }

    // optional int32 gift_type = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gift_type());
    }

    // optional int32 code_num = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_code_num());
    }

  }
  // optional int32 code_len = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_code_len());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CDKeyEvents_event_info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CDKeyEvents_event_info*>(&to_msg);
  auto& from = static_cast<const CDKeyEvents_event_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.CDKeyEvents.event_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_content(from._internal_content());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_item_info(from._internal_item_info());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.platform_ = from._impl_.platform_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.end_time_ = from._impl_.end_time_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.gift_type_ = from._impl_.gift_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.code_num_ = from._impl_.code_num_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.code_len_ = from._impl_.code_len_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDKeyEvents_event_info::CopyFrom(const CDKeyEvents_event_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.CDKeyEvents.event_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDKeyEvents_event_info::IsInitialized() const {
  return true;
}

void CDKeyEvents_event_info::InternalSwap(CDKeyEvents_event_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_info_, &other->_impl_.item_info_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.code_len_)
      + sizeof(CDKeyEvents_event_info::_impl_.code_len_)
      - PROTOBUF_FIELD_OFFSET(CDKeyEvents_event_info, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata CDKeyEvents_event_info::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[0]);
}
// ===================================================================

class CDKeyEvents::_Internal {
 public:
  using HasBits = decltype(std::declval<CDKeyEvents>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_._has_bits_);
};

CDKeyEvents::CDKeyEvents(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.CDKeyEvents)
}
inline PROTOBUF_NDEBUG_INLINE CDKeyEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        info_{visibility, arena, from.info_} {}

CDKeyEvents::CDKeyEvents(
    ::google::protobuf::Arena* arena,
    const CDKeyEvents& from)
    : ::google::protobuf::Message(arena) {
  CDKeyEvents* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nsid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, nsid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, nsid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:DBToCS.CDKeyEvents)
}
inline PROTOBUF_NDEBUG_INLINE CDKeyEvents::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        info_{visibility, arena},
        mgsid_{static_cast< ::DBToCS::MsgID >(8)} {}

inline void CDKeyEvents::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.nsid_ = {};
}
CDKeyEvents::~CDKeyEvents() {
  // @@protoc_insertion_point(destructor:DBToCS.CDKeyEvents)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CDKeyEvents::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CDKeyEvents::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_._cached_size_),
              false,
          },
          &CDKeyEvents::MergeImpl,
          &CDKeyEvents::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CDKeyEvents::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.CDKeyEvents)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.info_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.nsid_ = 0;
    _impl_.mgsid_ = 8;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CDKeyEvents::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> CDKeyEvents::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CDKeyEvents_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::CDKeyEvents>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .DBToCS.MsgID mgsid = 1 [default = eQueryCDKeyEvents_CallBack];
    {::_pbi::TcParser::FastEr1S1,
     {8, 1, 9, PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.mgsid_)}},
    // repeated .DBToCS.CDKeyEvents.event_info info = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.info_)}},
    // optional int32 nsid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CDKeyEvents, _impl_.nsid_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.nsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .DBToCS.MsgID mgsid = 1 [default = eQueryCDKeyEvents_CallBack];
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .DBToCS.CDKeyEvents.event_info info = 2;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.info_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 nsid = 3;
    {PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.nsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {1, 9},
    {::_pbi::TcParser::GetTable<::DBToCS::CDKeyEvents_event_info>()},
  }}, {{
  }},
};

::uint8_t* CDKeyEvents::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.CDKeyEvents)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .DBToCS.MsgID mgsid = 1 [default = eQueryCDKeyEvents_CallBack];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // repeated .DBToCS.CDKeyEvents.event_info info = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_info().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional int32 nsid = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_nsid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.CDKeyEvents)
  return target;
}

::size_t CDKeyEvents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.CDKeyEvents)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DBToCS.CDKeyEvents.event_info info = 2;
  total_size += 1UL * this->_internal_info_size();
  for (const auto& msg : this->_internal_info()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 nsid = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_nsid());
    }

    // optional .DBToCS.MsgID mgsid = 1 [default = eQueryCDKeyEvents_CallBack];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CDKeyEvents::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CDKeyEvents*>(&to_msg);
  auto& from = static_cast<const CDKeyEvents&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.CDKeyEvents)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_info()->MergeFrom(
      from._internal_info());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.nsid_ = from._impl_.nsid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CDKeyEvents::CopyFrom(const CDKeyEvents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.CDKeyEvents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CDKeyEvents::IsInitialized() const {
  return true;
}

void CDKeyEvents::InternalSwap(CDKeyEvents* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.info_.InternalSwap(&other->_impl_.info_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.mgsid_)
      + sizeof(CDKeyEvents::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(CDKeyEvents, _impl_.nsid_)>(
          reinterpret_cast<char*>(&_impl_.nsid_),
          reinterpret_cast<char*>(&other->_impl_.nsid_));
}

::google::protobuf::Metadata CDKeyEvents::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[1]);
}
// ===================================================================

class QueryAllAccount_Account::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllAccount_Account>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_._has_bits_);
};

QueryAllAccount_Account::QueryAllAccount_Account(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.QueryAllAccount.Account)
}
inline PROTOBUF_NDEBUG_INLINE QueryAllAccount_Account::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        user_name_(arena, from.user_name_),
        nickname_(arena, from.nickname_) {}

QueryAllAccount_Account::QueryAllAccount_Account(
    ::google::protobuf::Arena* arena,
    const QueryAllAccount_Account& from)
    : ::google::protobuf::Message(arena) {
  QueryAllAccount_Account* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, csid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, csid_),
           offsetof(Impl_, guid_) -
               offsetof(Impl_, csid_) +
               sizeof(Impl_::guid_));

  // @@protoc_insertion_point(copy_constructor:DBToCS.QueryAllAccount.Account)
}
inline PROTOBUF_NDEBUG_INLINE QueryAllAccount_Account::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        user_name_(arena),
        nickname_(arena) {}

inline void QueryAllAccount_Account::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, csid_),
           0,
           offsetof(Impl_, guid_) -
               offsetof(Impl_, csid_) +
               sizeof(Impl_::guid_));
}
QueryAllAccount_Account::~QueryAllAccount_Account() {
  // @@protoc_insertion_point(destructor:DBToCS.QueryAllAccount.Account)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryAllAccount_Account::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.user_name_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QueryAllAccount_Account::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_._cached_size_),
              false,
          },
          &QueryAllAccount_Account::MergeImpl,
          &QueryAllAccount_Account::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QueryAllAccount_Account::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.QueryAllAccount.Account)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.user_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.nickname_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.csid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.guid_) -
        reinterpret_cast<char*>(&_impl_.csid_)) + sizeof(_impl_.guid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryAllAccount_Account::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 56, 2> QueryAllAccount_Account::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_QueryAllAccount_Account_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::QueryAllAccount_Account>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string user_name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.user_name_)}},
    // optional int32 csid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryAllAccount_Account, _impl_.csid_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.csid_)}},
    // optional int32 sdkid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryAllAccount_Account, _impl_.sdkid_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.sdkid_)}},
    // optional string nickname = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.nickname_)}},
    // optional int64 guid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryAllAccount_Account, _impl_.guid_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.guid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string user_name = 1;
    {PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.user_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 csid = 2;
    {PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.csid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 sdkid = 3;
    {PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.sdkid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string nickname = 4;
    {PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.nickname_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 guid = 5;
    {PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.guid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\36\11\0\0\10\0\0\0"
    "DBToCS.QueryAllAccount.Account"
    "user_name"
    "nickname"
  }},
};

::uint8_t* QueryAllAccount_Account::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.QueryAllAccount.Account)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string user_name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_user_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.QueryAllAccount.Account.user_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional int32 csid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_csid(), target);
  }

  // optional int32 sdkid = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_sdkid(), target);
  }

  // optional string nickname = 4;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.QueryAllAccount.Account.nickname");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional int64 guid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_guid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.QueryAllAccount.Account)
  return target;
}

::size_t QueryAllAccount_Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.QueryAllAccount.Account)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string user_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_user_name());
    }

    // optional string nickname = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_nickname());
    }

    // optional int32 csid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_csid());
    }

    // optional int32 sdkid = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sdkid());
    }

    // optional int64 guid = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_guid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QueryAllAccount_Account::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryAllAccount_Account*>(&to_msg);
  auto& from = static_cast<const QueryAllAccount_Account&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.QueryAllAccount.Account)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_user_name(from._internal_user_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_nickname(from._internal_nickname());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.csid_ = from._impl_.csid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.sdkid_ = from._impl_.sdkid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllAccount_Account::CopyFrom(const QueryAllAccount_Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.QueryAllAccount.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryAllAccount_Account::IsInitialized() const {
  return true;
}

void QueryAllAccount_Account::InternalSwap(QueryAllAccount_Account* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_name_, &other->_impl_.user_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.guid_)
      + sizeof(QueryAllAccount_Account::_impl_.guid_)
      - PROTOBUF_FIELD_OFFSET(QueryAllAccount_Account, _impl_.csid_)>(
          reinterpret_cast<char*>(&_impl_.csid_),
          reinterpret_cast<char*>(&other->_impl_.csid_));
}

::google::protobuf::Metadata QueryAllAccount_Account::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[2]);
}
// ===================================================================

class QueryAllAccount::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllAccount>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllAccount, _impl_._has_bits_);
};

QueryAllAccount::QueryAllAccount(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.QueryAllAccount)
}
inline PROTOBUF_NDEBUG_INLINE QueryAllAccount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_{visibility, arena, from.account_} {}

QueryAllAccount::QueryAllAccount(
    ::google::protobuf::Arena* arena,
    const QueryAllAccount& from)
    : ::google::protobuf::Message(arena) {
  QueryAllAccount* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.mgsid_ = from._impl_.mgsid_;

  // @@protoc_insertion_point(copy_constructor:DBToCS.QueryAllAccount)
}
inline PROTOBUF_NDEBUG_INLINE QueryAllAccount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_{visibility, arena},
        mgsid_{static_cast< ::DBToCS::MsgID >(7)} {}

inline void QueryAllAccount::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryAllAccount::~QueryAllAccount() {
  // @@protoc_insertion_point(destructor:DBToCS.QueryAllAccount)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryAllAccount::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QueryAllAccount::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QueryAllAccount, _impl_._cached_size_),
              false,
          },
          &QueryAllAccount::MergeImpl,
          &QueryAllAccount::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QueryAllAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.QueryAllAccount)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_.Clear();
  _impl_.mgsid_ = 7;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryAllAccount::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryAllAccount::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryAllAccount, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QueryAllAccount_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::QueryAllAccount>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DBToCS.QueryAllAccount.Account account = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(QueryAllAccount, _impl_.account_)}},
    // optional .DBToCS.MsgID mgsid = 1 [default = eQueryAllAccount_CallBack];
    {::_pbi::TcParser::FastEr1S1,
     {8, 0, 9, PROTOBUF_FIELD_OFFSET(QueryAllAccount, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .DBToCS.MsgID mgsid = 1 [default = eQueryAllAccount_CallBack];
    {PROTOBUF_FIELD_OFFSET(QueryAllAccount, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .DBToCS.QueryAllAccount.Account account = 2;
    {PROTOBUF_FIELD_OFFSET(QueryAllAccount, _impl_.account_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {1, 9},
    {::_pbi::TcParser::GetTable<::DBToCS::QueryAllAccount_Account>()},
  }}, {{
  }},
};

::uint8_t* QueryAllAccount::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.QueryAllAccount)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .DBToCS.MsgID mgsid = 1 [default = eQueryAllAccount_CallBack];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // repeated .DBToCS.QueryAllAccount.Account account = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_account_size()); i < n; i++) {
    const auto& repfield = this->_internal_account().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.QueryAllAccount)
  return target;
}

::size_t QueryAllAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.QueryAllAccount)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DBToCS.QueryAllAccount.Account account = 2;
  total_size += 1UL * this->_internal_account_size();
  for (const auto& msg : this->_internal_account()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional .DBToCS.MsgID mgsid = 1 [default = eQueryAllAccount_CallBack];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QueryAllAccount::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryAllAccount*>(&to_msg);
  auto& from = static_cast<const QueryAllAccount&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.QueryAllAccount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_account()->MergeFrom(
      from._internal_account());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllAccount::CopyFrom(const QueryAllAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.QueryAllAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryAllAccount::IsInitialized() const {
  return true;
}

void QueryAllAccount::InternalSwap(QueryAllAccount* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.account_.InternalSwap(&other->_impl_.account_);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata QueryAllAccount::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[3]);
}
// ===================================================================

class MailCallBack::_Internal {
 public:
  using HasBits = decltype(std::declval<MailCallBack>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_._has_bits_);
};

MailCallBack::MailCallBack(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.MailCallBack)
}
inline PROTOBUF_NDEBUG_INLINE MailCallBack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_),
        content_(arena, from.content_),
        gift_(arena, from.gift_),
        sender_(arena, from.sender_),
        createtime_(arena, from.createtime_) {}

MailCallBack::MailCallBack(
    ::google::protobuf::Arena* arena,
    const MailCallBack& from)
    : ::google::protobuf::Message(arena) {
  MailCallBack* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mailid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, mailid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, mailid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:DBToCS.MailCallBack)
}
inline PROTOBUF_NDEBUG_INLINE MailCallBack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena),
        content_(arena),
        gift_(arena),
        sender_(arena),
        createtime_(arena),
        mgsid_{static_cast< ::DBToCS::MsgID >(6)} {}

inline void MailCallBack::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mailid_),
           0,
           offsetof(Impl_, channel_) -
               offsetof(Impl_, mailid_) +
               sizeof(Impl_::channel_));
}
MailCallBack::~MailCallBack() {
  // @@protoc_insertion_point(destructor:DBToCS.MailCallBack)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MailCallBack::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  _impl_.content_.Destroy();
  _impl_.gift_.Destroy();
  _impl_.sender_.Destroy();
  _impl_.createtime_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MailCallBack::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_._cached_size_),
              false,
          },
          &MailCallBack::MergeImpl,
          &MailCallBack::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void MailCallBack::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.MailCallBack)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.content_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.gift_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.sender_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.createtime_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&_impl_.mailid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.objid_) -
        reinterpret_cast<char*>(&_impl_.mailid_)) + sizeof(_impl_.objid_));
  }
  if (cached_has_bits & 0x00000300u) {
    _impl_.channel_ = 0;
    _impl_.mgsid_ = 6;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MailCallBack::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 68, 2> MailCallBack::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MailCallBack_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::MailCallBack>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .DBToCS.MsgID mgsid = 1 [default = eMail_CallBack];
    {::_pbi::TcParser::FastEr1S1,
     {8, 9, 9, PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.mgsid_)}},
    // optional int32 mailid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MailCallBack, _impl_.mailid_), 5>(),
     {16, 5, 0, PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.mailid_)}},
    // optional int32 mailtype = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MailCallBack, _impl_.mailtype_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.mailtype_)}},
    // optional int32 channel = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MailCallBack, _impl_.channel_), 8>(),
     {32, 8, 0, PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.channel_)}},
    // optional string title = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.title_)}},
    // optional string content = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.content_)}},
    // optional string gift = 7;
    {::_pbi::TcParser::FastSS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.gift_)}},
    // optional string sender = 8;
    {::_pbi::TcParser::FastSS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.sender_)}},
    // optional string createtime = 9;
    {::_pbi::TcParser::FastSS1,
     {74, 4, 0, PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.createtime_)}},
    // optional int64 objid = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MailCallBack, _impl_.objid_), 7>(),
     {80, 7, 0, PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.objid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .DBToCS.MsgID mgsid = 1 [default = eMail_CallBack];
    {PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.mgsid_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional int32 mailid = 2;
    {PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.mailid_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 mailtype = 3;
    {PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.mailtype_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 channel = 4;
    {PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.channel_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string title = 5;
    {PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.title_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string content = 6;
    {PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.content_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string gift = 7;
    {PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.gift_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string sender = 8;
    {PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.sender_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string createtime = 9;
    {PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.createtime_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int64 objid = 10;
    {PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.objid_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }}, {{
    {1, 9},
  }}, {{
    "\23\0\0\0\0\5\7\4\6\12\0\0\0\0\0\0"
    "DBToCS.MailCallBack"
    "title"
    "content"
    "gift"
    "sender"
    "createtime"
  }},
};

::uint8_t* MailCallBack::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.MailCallBack)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .DBToCS.MsgID mgsid = 1 [default = eMail_CallBack];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int32 mailid = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_mailid(), target);
  }

  // optional int32 mailtype = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_mailtype(), target);
  }

  // optional int32 channel = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_channel(), target);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.MailCallBack.title");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string content = 6;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.MailCallBack.content");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string gift = 7;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_gift();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.MailCallBack.gift");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional string sender = 8;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_sender();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.MailCallBack.sender");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional string createtime = 9;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_createtime();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.MailCallBack.createtime");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // optional int64 objid = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<10>(
            stream, this->_internal_objid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.MailCallBack)
  return target;
}

::size_t MailCallBack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.MailCallBack)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string title = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string content = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_content());
    }

    // optional string gift = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_gift());
    }

    // optional string sender = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_sender());
    }

    // optional string createtime = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_createtime());
    }

    // optional int32 mailid = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_mailid());
    }

    // optional int32 mailtype = 3;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_mailtype());
    }

    // optional int64 objid = 10;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_objid());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional int32 channel = 4;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_channel());
    }

    // optional .DBToCS.MsgID mgsid = 1 [default = eMail_CallBack];
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MailCallBack::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MailCallBack*>(&to_msg);
  auto& from = static_cast<const MailCallBack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.MailCallBack)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_content(from._internal_content());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_gift(from._internal_gift());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_sender(from._internal_sender());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_createtime(from._internal_createtime());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.mailid_ = from._impl_.mailid_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.mailtype_ = from._impl_.mailtype_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.objid_ = from._impl_.objid_;
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.channel_ = from._impl_.channel_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MailCallBack::CopyFrom(const MailCallBack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.MailCallBack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MailCallBack::IsInitialized() const {
  return true;
}

void MailCallBack::InternalSwap(MailCallBack* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gift_, &other->_impl_.gift_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.createtime_, &other->_impl_.createtime_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.mgsid_)
      + sizeof(MailCallBack::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(MailCallBack, _impl_.mailid_)>(
          reinterpret_cast<char*>(&_impl_.mailid_),
          reinterpret_cast<char*>(&other->_impl_.mailid_));
}

::google::protobuf::Metadata MailCallBack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[4]);
}
// ===================================================================

class QueryNotice_Notice::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryNotice_Notice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_._has_bits_);
};

QueryNotice_Notice::QueryNotice_Notice(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.QueryNotice.Notice)
}
inline PROTOBUF_NDEBUG_INLINE QueryNotice_Notice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_),
        notice_(arena, from.notice_) {}

QueryNotice_Notice::QueryNotice_Notice(
    ::google::protobuf::Arena* arena,
    const QueryNotice_Notice& from)
    : ::google::protobuf::Message(arena) {
  QueryNotice_Notice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, platform_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::platform_));

  // @@protoc_insertion_point(copy_constructor:DBToCS.QueryNotice.Notice)
}
inline PROTOBUF_NDEBUG_INLINE QueryNotice_Notice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena),
        notice_(arena) {}

inline void QueryNotice_Notice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, platform_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::platform_));
}
QueryNotice_Notice::~QueryNotice_Notice() {
  // @@protoc_insertion_point(destructor:DBToCS.QueryNotice.Notice)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryNotice_Notice::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  _impl_.notice_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QueryNotice_Notice::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_._cached_size_),
              false,
          },
          &QueryNotice_Notice::MergeImpl,
          &QueryNotice_Notice::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QueryNotice_Notice::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.QueryNotice.Notice)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.notice_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.end_time_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.end_time_));
  }
  _impl_.platform_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryNotice_Notice::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 53, 2> QueryNotice_Notice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_QueryNotice_Notice_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::QueryNotice_Notice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryNotice_Notice, _impl_.id_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.id_)}},
    // optional string title = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.title_)}},
    // optional int32 eflag = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryNotice_Notice, _impl_.eflag_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.eflag_)}},
    // optional int32 estate = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryNotice_Notice, _impl_.estate_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.estate_)}},
    // optional int32 priority = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryNotice_Notice, _impl_.priority_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.priority_)}},
    // optional string notice = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.notice_)}},
    // optional uint64 star_time = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryNotice_Notice, _impl_.star_time_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.star_time_)}},
    // optional uint64 end_time = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(QueryNotice_Notice, _impl_.end_time_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.end_time_)}},
    // optional uint32 platform = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryNotice_Notice, _impl_.platform_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.platform_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string title = 2;
    {PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.title_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 eflag = 3;
    {PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.eflag_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 estate = 4;
    {PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.estate_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 priority = 5;
    {PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.priority_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string notice = 6;
    {PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.notice_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint64 star_time = 7;
    {PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.star_time_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint64 end_time = 8;
    {PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.end_time_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 platform = 9;
    {PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.platform_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\31\0\5\0\0\0\6\0\0\0\0\0\0\0\0\0"
    "DBToCS.QueryNotice.Notice"
    "title"
    "notice"
  }},
};

::uint8_t* QueryNotice_Notice::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.QueryNotice.Notice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // optional string title = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.QueryNotice.Notice.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 eflag = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_eflag(), target);
  }

  // optional int32 estate = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_estate(), target);
  }

  // optional int32 priority = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_priority(), target);
  }

  // optional string notice = 6;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_notice();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.QueryNotice.Notice.notice");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional uint64 star_time = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        7, this->_internal_star_time(), target);
  }

  // optional uint64 end_time = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        8, this->_internal_end_time(), target);
  }

  // optional uint32 platform = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_platform(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.QueryNotice.Notice)
  return target;
}

::size_t QueryNotice_Notice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.QueryNotice.Notice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string title = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_title());
    }

    // optional string notice = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_notice());
    }

    // optional uint32 id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_id());
    }

    // optional int32 eflag = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_eflag());
    }

    // optional int32 estate = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_estate());
    }

    // optional int32 priority = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_priority());
    }

    // optional uint64 star_time = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_star_time());
    }

    // optional uint64 end_time = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_end_time());
    }

  }
  // optional uint32 platform = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_platform());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QueryNotice_Notice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryNotice_Notice*>(&to_msg);
  auto& from = static_cast<const QueryNotice_Notice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.QueryNotice.Notice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_notice(from._internal_notice());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.eflag_ = from._impl_.eflag_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.estate_ = from._impl_.estate_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.priority_ = from._impl_.priority_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.star_time_ = from._impl_.star_time_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.end_time_ = from._impl_.end_time_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.platform_ = from._impl_.platform_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryNotice_Notice::CopyFrom(const QueryNotice_Notice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.QueryNotice.Notice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryNotice_Notice::IsInitialized() const {
  return true;
}

void QueryNotice_Notice::InternalSwap(QueryNotice_Notice* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.notice_, &other->_impl_.notice_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.platform_)
      + sizeof(QueryNotice_Notice::_impl_.platform_)
      - PROTOBUF_FIELD_OFFSET(QueryNotice_Notice, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata QueryNotice_Notice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[5]);
}
// ===================================================================

class QueryNotice::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryNotice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_._has_bits_);
};

QueryNotice::QueryNotice(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.QueryNotice)
}
inline PROTOBUF_NDEBUG_INLINE QueryNotice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        notice_info_{visibility, arena, from.notice_info_} {}

QueryNotice::QueryNotice(
    ::google::protobuf::Arena* arena,
    const QueryNotice& from)
    : ::google::protobuf::Message(arena) {
  QueryNotice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.mgsid_ = from._impl_.mgsid_;

  // @@protoc_insertion_point(copy_constructor:DBToCS.QueryNotice)
}
inline PROTOBUF_NDEBUG_INLINE QueryNotice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        notice_info_{visibility, arena},
        mgsid_{static_cast< ::DBToCS::MsgID >(5)} {}

inline void QueryNotice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryNotice::~QueryNotice() {
  // @@protoc_insertion_point(destructor:DBToCS.QueryNotice)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryNotice::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QueryNotice::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_._cached_size_),
              false,
          },
          &QueryNotice::MergeImpl,
          &QueryNotice::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QueryNotice::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.QueryNotice)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.notice_info_.Clear();
  _impl_.mgsid_ = 5;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryNotice::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryNotice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QueryNotice_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::QueryNotice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DBToCS.QueryNotice.Notice notice_info = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_.notice_info_)}},
    // optional .DBToCS.MsgID mgsid = 1 [default = eQueryNotice_CallBack];
    {::_pbi::TcParser::FastEr1S1,
     {8, 0, 9, PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .DBToCS.MsgID mgsid = 1 [default = eQueryNotice_CallBack];
    {PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_.mgsid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .DBToCS.QueryNotice.Notice notice_info = 2;
    {PROTOBUF_FIELD_OFFSET(QueryNotice, _impl_.notice_info_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {1, 9},
    {::_pbi::TcParser::GetTable<::DBToCS::QueryNotice_Notice>()},
  }}, {{
  }},
};

::uint8_t* QueryNotice::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.QueryNotice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .DBToCS.MsgID mgsid = 1 [default = eQueryNotice_CallBack];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // repeated .DBToCS.QueryNotice.Notice notice_info = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_notice_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_notice_info().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.QueryNotice)
  return target;
}

::size_t QueryNotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.QueryNotice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DBToCS.QueryNotice.Notice notice_info = 2;
  total_size += 1UL * this->_internal_notice_info_size();
  for (const auto& msg : this->_internal_notice_info()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional .DBToCS.MsgID mgsid = 1 [default = eQueryNotice_CallBack];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QueryNotice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryNotice*>(&to_msg);
  auto& from = static_cast<const QueryNotice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.QueryNotice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_notice_info()->MergeFrom(
      from._internal_notice_info());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.mgsid_ = from._impl_.mgsid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryNotice::CopyFrom(const QueryNotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.QueryNotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryNotice::IsInitialized() const {
  return true;
}

void QueryNotice::InternalSwap(QueryNotice* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.notice_info_.InternalSwap(&other->_impl_.notice_info_);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata QueryNotice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[6]);
}
// ===================================================================

class ChangeNickname::_Internal {
 public:
  using HasBits = decltype(std::declval<ChangeNickname>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_._has_bits_);
};

ChangeNickname::ChangeNickname(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.ChangeNickname)
}
inline PROTOBUF_NDEBUG_INLINE ChangeNickname::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        newnickname_(arena, from.newnickname_),
        oldnickname_(arena, from.oldnickname_) {}

ChangeNickname::ChangeNickname(
    ::google::protobuf::Arena* arena,
    const ChangeNickname& from)
    : ::google::protobuf::Message(arena) {
  ChangeNickname* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, guid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:DBToCS.ChangeNickname)
}
inline PROTOBUF_NDEBUG_INLINE ChangeNickname::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        newnickname_(arena),
        oldnickname_(arena),
        mgsid_{static_cast< ::DBToCS::MsgID >(4)} {}

inline void ChangeNickname::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, guid_),
           0,
           offsetof(Impl_, reflag_) -
               offsetof(Impl_, guid_) +
               sizeof(Impl_::reflag_));
}
ChangeNickname::~ChangeNickname() {
  // @@protoc_insertion_point(destructor:DBToCS.ChangeNickname)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChangeNickname::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.newnickname_.Destroy();
  _impl_.oldnickname_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ChangeNickname::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_._cached_size_),
              false,
          },
          &ChangeNickname::MergeImpl,
          &ChangeNickname::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ChangeNickname::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.ChangeNickname)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.newnickname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.oldnickname_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.guid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.reflag_) -
        reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.reflag_));
    _impl_.mgsid_ = 4;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ChangeNickname::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 52, 2> ChangeNickname::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ChangeNickname_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::ChangeNickname>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .DBToCS.MsgID mgsid = 1 [default = eChangeNickname_CallBack];
    {::_pbi::TcParser::FastEr1S1,
     {8, 4, 9, PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.mgsid_)}},
    // optional uint64 guid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ChangeNickname, _impl_.guid_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.guid_)}},
    // optional bool reflag = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ChangeNickname, _impl_.reflag_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.reflag_)}},
    // optional string newnickname = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.newnickname_)}},
    // optional string oldnickname = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.oldnickname_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .DBToCS.MsgID mgsid = 1 [default = eChangeNickname_CallBack];
    {PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.mgsid_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint64 guid = 2;
    {PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.guid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional bool reflag = 3;
    {PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.reflag_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string newnickname = 4;
    {PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.newnickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string oldnickname = 5;
    {PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.oldnickname_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {1, 9},
  }}, {{
    "\25\0\0\0\13\13\0\0"
    "DBToCS.ChangeNickname"
    "newnickname"
    "oldnickname"
  }},
};

::uint8_t* ChangeNickname::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.ChangeNickname)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .DBToCS.MsgID mgsid = 1 [default = eChangeNickname_CallBack];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional uint64 guid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_guid(), target);
  }

  // optional bool reflag = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_reflag(), target);
  }

  // optional string newnickname = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_newnickname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.ChangeNickname.newnickname");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string oldnickname = 5;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_oldnickname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.ChangeNickname.oldnickname");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.ChangeNickname)
  return target;
}

::size_t ChangeNickname::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.ChangeNickname)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string newnickname = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_newnickname());
    }

    // optional string oldnickname = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_oldnickname());
    }

    // optional uint64 guid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_guid());
    }

    // optional bool reflag = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional .DBToCS.MsgID mgsid = 1 [default = eChangeNickname_CallBack];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ChangeNickname::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChangeNickname*>(&to_msg);
  auto& from = static_cast<const ChangeNickname&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.ChangeNickname)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_newnickname(from._internal_newnickname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_oldnickname(from._internal_oldnickname());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.guid_ = from._impl_.guid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.reflag_ = from._impl_.reflag_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeNickname::CopyFrom(const ChangeNickname& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.ChangeNickname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ChangeNickname::IsInitialized() const {
  return true;
}

void ChangeNickname::InternalSwap(ChangeNickname* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.newnickname_, &other->_impl_.newnickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.oldnickname_, &other->_impl_.oldnickname_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.mgsid_)
      + sizeof(ChangeNickname::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(ChangeNickname, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::google::protobuf::Metadata ChangeNickname::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[7]);
}
// ===================================================================

class BuyGoods::_Internal {
 public:
  using HasBits = decltype(std::declval<BuyGoods>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_._has_bits_);
};

BuyGoods::BuyGoods(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.BuyGoods)
}
inline PROTOBUF_NDEBUG_INLINE BuyGoods::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        buygoodsmag_(arena, from.buygoodsmag_) {}

BuyGoods::BuyGoods(
    ::google::protobuf::Arena* arena,
    const BuyGoods& from)
    : ::google::protobuf::Message(arena) {
  BuyGoods* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.mgsid_ = from._impl_.mgsid_;

  // @@protoc_insertion_point(copy_constructor:DBToCS.BuyGoods)
}
inline PROTOBUF_NDEBUG_INLINE BuyGoods::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        buygoodsmag_(arena),
        mgsid_{static_cast< ::DBToCS::MsgID >(3)} {}

inline void BuyGoods::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BuyGoods::~BuyGoods() {
  // @@protoc_insertion_point(destructor:DBToCS.BuyGoods)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BuyGoods::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.buygoodsmag_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
BuyGoods::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_._cached_size_),
              false,
          },
          &BuyGoods::MergeImpl,
          &BuyGoods::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void BuyGoods::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.BuyGoods)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.buygoodsmag_.ClearNonDefaultToEmpty();
    }
    _impl_.mgsid_ = 3;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BuyGoods::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 35, 2> BuyGoods::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BuyGoods_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::BuyGoods>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string buygoodsmag = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_.buygoodsmag_)}},
    // optional .DBToCS.MsgID mgsid = 1 [default = eBuyGoodsCallBack];
    {::_pbi::TcParser::FastEr1S1,
     {8, 1, 9, PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .DBToCS.MsgID mgsid = 1 [default = eBuyGoodsCallBack];
    {PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string buygoodsmag = 2;
    {PROTOBUF_FIELD_OFFSET(BuyGoods, _impl_.buygoodsmag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {1, 9},
  }}, {{
    "\17\0\13\0\0\0\0\0"
    "DBToCS.BuyGoods"
    "buygoodsmag"
  }},
};

::uint8_t* BuyGoods::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.BuyGoods)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .DBToCS.MsgID mgsid = 1 [default = eBuyGoodsCallBack];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional string buygoodsmag = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_buygoodsmag();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.BuyGoods.buygoodsmag");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.BuyGoods)
  return target;
}

::size_t BuyGoods::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.BuyGoods)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string buygoodsmag = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_buygoodsmag());
    }

    // optional .DBToCS.MsgID mgsid = 1 [default = eBuyGoodsCallBack];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BuyGoods::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BuyGoods*>(&to_msg);
  auto& from = static_cast<const BuyGoods&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.BuyGoods)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_buygoodsmag(from._internal_buygoodsmag());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BuyGoods::CopyFrom(const BuyGoods& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.BuyGoods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BuyGoods::IsInitialized() const {
  return true;
}

void BuyGoods::InternalSwap(BuyGoods* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.buygoodsmag_, &other->_impl_.buygoodsmag_, arena);
  swap(_impl_.mgsid_, other->_impl_.mgsid_);
}

::google::protobuf::Metadata BuyGoods::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[8]);
}
// ===================================================================

class CheckNameRsp::_Internal {
 public:
  using HasBits = decltype(std::declval<CheckNameRsp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_._has_bits_);
};

CheckNameRsp::CheckNameRsp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.CheckNameRsp)
}
inline PROTOBUF_NDEBUG_INLINE CheckNameRsp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        completeinfo_(arena, from.completeinfo_) {}

CheckNameRsp::CheckNameRsp(
    ::google::protobuf::Arena* arena,
    const CheckNameRsp& from)
    : ::google::protobuf::Message(arena) {
  CheckNameRsp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gsid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:DBToCS.CheckNameRsp)
}
inline PROTOBUF_NDEBUG_INLINE CheckNameRsp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        completeinfo_(arena),
        mgsid_{static_cast< ::DBToCS::MsgID >(1)} {}

inline void CheckNameRsp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           0,
           offsetof(Impl_, checkres_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::checkres_));
}
CheckNameRsp::~CheckNameRsp() {
  // @@protoc_insertion_point(destructor:DBToCS.CheckNameRsp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CheckNameRsp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.completeinfo_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CheckNameRsp::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_._cached_size_),
              false,
          },
          &CheckNameRsp::MergeImpl,
          &CheckNameRsp::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CheckNameRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.CheckNameRsp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.completeinfo_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&_impl_.gsid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.checkres_) -
        reinterpret_cast<char*>(&_impl_.gsid_)) + sizeof(_impl_.checkres_));
    _impl_.mgsid_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CheckNameRsp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 40, 2> CheckNameRsp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CheckNameRsp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::CheckNameRsp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .DBToCS.MsgID mgsid = 1 [default = eCheckNickNameLogicCallBack];
    {::_pbi::TcParser::FastEr1S1,
     {8, 5, 9, PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.mgsid_)}},
    // optional string completeInfo = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.completeinfo_)}},
    // optional int32 gsid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CheckNameRsp, _impl_.gsid_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.gsid_)}},
    // optional int32 gcnetid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CheckNameRsp, _impl_.gcnetid_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.gcnetid_)}},
    // optional int32 gsnetid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CheckNameRsp, _impl_.gsnetid_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.gsnetid_)}},
    // optional int32 checkres = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CheckNameRsp, _impl_.checkres_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.checkres_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .DBToCS.MsgID mgsid = 1 [default = eCheckNickNameLogicCallBack];
    {PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.mgsid_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string completeInfo = 2;
    {PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.completeinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 gsid = 3;
    {PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.gsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 gcnetid = 4;
    {PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.gcnetid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 gsnetid = 5;
    {PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.gsnetid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 checkres = 6;
    {PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.checkres_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {1, 9},
  }}, {{
    "\23\0\14\0\0\0\0\0"
    "DBToCS.CheckNameRsp"
    "completeInfo"
  }},
};

::uint8_t* CheckNameRsp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.CheckNameRsp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .DBToCS.MsgID mgsid = 1 [default = eCheckNickNameLogicCallBack];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional string completeInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_completeinfo();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.CheckNameRsp.completeInfo");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional int32 gsid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_gsid(), target);
  }

  // optional int32 gcnetid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_gcnetid(), target);
  }

  // optional int32 gsnetid = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_gsnetid(), target);
  }

  // optional int32 checkres = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_checkres(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.CheckNameRsp)
  return target;
}

::size_t CheckNameRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.CheckNameRsp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string completeInfo = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_completeinfo());
    }

    // optional int32 gsid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gsid());
    }

    // optional int32 gcnetid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gcnetid());
    }

    // optional int32 gsnetid = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gsnetid());
    }

    // optional int32 checkres = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_checkres());
    }

    // optional .DBToCS.MsgID mgsid = 1 [default = eCheckNickNameLogicCallBack];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CheckNameRsp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CheckNameRsp*>(&to_msg);
  auto& from = static_cast<const CheckNameRsp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.CheckNameRsp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_completeinfo(from._internal_completeinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.gsid_ = from._impl_.gsid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.gcnetid_ = from._impl_.gcnetid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.gsnetid_ = from._impl_.gsnetid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.checkres_ = from._impl_.checkres_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckNameRsp::CopyFrom(const CheckNameRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.CheckNameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CheckNameRsp::IsInitialized() const {
  return true;
}

void CheckNameRsp::InternalSwap(CheckNameRsp* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.completeinfo_, &other->_impl_.completeinfo_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.mgsid_)
      + sizeof(CheckNameRsp::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(CheckNameRsp, _impl_.gsid_)>(
          reinterpret_cast<char*>(&_impl_.gsid_),
          reinterpret_cast<char*>(&other->_impl_.gsid_));
}

::google::protobuf::Metadata CheckNameRsp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[9]);
}
// ===================================================================

class HeroCfg::_Internal {
 public:
  using HasBits = decltype(std::declval<HeroCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(HeroCfg, _impl_._has_bits_);
};

HeroCfg::HeroCfg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.HeroCfg)
}
HeroCfg::HeroCfg(
    ::google::protobuf::Arena* arena, const HeroCfg& from)
    : HeroCfg(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE HeroCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HeroCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buytime_),
           0,
           offsetof(Impl_, commodityid_) -
               offsetof(Impl_, buytime_) +
               sizeof(Impl_::commodityid_));
}
HeroCfg::~HeroCfg() {
  // @@protoc_insertion_point(destructor:DBToCS.HeroCfg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void HeroCfg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
HeroCfg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(HeroCfg, _impl_._cached_size_),
              false,
          },
          &HeroCfg::MergeImpl,
          &HeroCfg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void HeroCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.HeroCfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.buytime_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.commodityid_) -
        reinterpret_cast<char*>(&_impl_.buytime_)) + sizeof(_impl_.commodityid_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* HeroCfg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> HeroCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HeroCfg, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_HeroCfg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::HeroCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 commodityid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HeroCfg, _impl_.commodityid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(HeroCfg, _impl_.commodityid_)}},
    // optional int64 buytime = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HeroCfg, _impl_.buytime_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(HeroCfg, _impl_.buytime_)}},
    // optional int64 expiredtime = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(HeroCfg, _impl_.expiredtime_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(HeroCfg, _impl_.expiredtime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 commodityid = 1;
    {PROTOBUF_FIELD_OFFSET(HeroCfg, _impl_.commodityid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int64 buytime = 2;
    {PROTOBUF_FIELD_OFFSET(HeroCfg, _impl_.buytime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int64 expiredtime = 3;
    {PROTOBUF_FIELD_OFFSET(HeroCfg, _impl_.expiredtime_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* HeroCfg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.HeroCfg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 commodityid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_commodityid(), target);
  }

  // optional int64 buytime = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_buytime(), target);
  }

  // optional int64 expiredtime = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_expiredtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.HeroCfg)
  return target;
}

::size_t HeroCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.HeroCfg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional int64 buytime = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_buytime());
    }

    // optional int64 expiredtime = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_expiredtime());
    }

    // optional uint32 commodityid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_commodityid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void HeroCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeroCfg*>(&to_msg);
  auto& from = static_cast<const HeroCfg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.HeroCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.buytime_ = from._impl_.buytime_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.expiredtime_ = from._impl_.expiredtime_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.commodityid_ = from._impl_.commodityid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeroCfg::CopyFrom(const HeroCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.HeroCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool HeroCfg::IsInitialized() const {
  return true;
}

void HeroCfg::InternalSwap(HeroCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HeroCfg, _impl_.commodityid_)
      + sizeof(HeroCfg::_impl_.commodityid_)
      - PROTOBUF_FIELD_OFFSET(HeroCfg, _impl_.buytime_)>(
          reinterpret_cast<char*>(&_impl_.buytime_),
          reinterpret_cast<char*>(&other->_impl_.buytime_));
}

::google::protobuf::Metadata HeroCfg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[10]);
}
// ===================================================================

class RuneInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<RuneInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RuneInfo, _impl_._has_bits_);
};

RuneInfo::RuneInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.RuneInfo)
}
inline PROTOBUF_NDEBUG_INLINE RuneInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        bagstr_(arena, from.bagstr_),
        slotstr_(arena, from.slotstr_) {}

RuneInfo::RuneInfo(
    ::google::protobuf::Arena* arena,
    const RuneInfo& from)
    : ::google::protobuf::Message(arena) {
  RuneInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:DBToCS.RuneInfo)
}
inline PROTOBUF_NDEBUG_INLINE RuneInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        bagstr_(arena),
        slotstr_(arena) {}

inline void RuneInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RuneInfo::~RuneInfo() {
  // @@protoc_insertion_point(destructor:DBToCS.RuneInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RuneInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.bagstr_.Destroy();
  _impl_.slotstr_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RuneInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RuneInfo, _impl_._cached_size_),
              false,
          },
          &RuneInfo::MergeImpl,
          &RuneInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RuneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.RuneInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.bagstr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.slotstr_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RuneInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2> RuneInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RuneInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RuneInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::RuneInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string slotStr = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RuneInfo, _impl_.slotstr_)}},
    // optional string bagStr = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RuneInfo, _impl_.bagstr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string bagStr = 1;
    {PROTOBUF_FIELD_OFFSET(RuneInfo, _impl_.bagstr_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string slotStr = 2;
    {PROTOBUF_FIELD_OFFSET(RuneInfo, _impl_.slotstr_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\6\7\0\0\0\0\0"
    "DBToCS.RuneInfo"
    "bagStr"
    "slotStr"
  }},
};

::uint8_t* RuneInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.RuneInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string bagStr = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_bagstr();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.RuneInfo.bagStr");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string slotStr = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_slotstr();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.RuneInfo.slotStr");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.RuneInfo)
  return target;
}

::size_t RuneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.RuneInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string bagStr = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_bagstr());
    }

    // optional string slotStr = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_slotstr());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RuneInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RuneInfo*>(&to_msg);
  auto& from = static_cast<const RuneInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.RuneInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_bagstr(from._internal_bagstr());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_slotstr(from._internal_slotstr());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RuneInfo::CopyFrom(const RuneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.RuneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RuneInfo::IsInitialized() const {
  return true;
}

void RuneInfo::InternalSwap(RuneInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bagstr_, &other->_impl_.bagstr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.slotstr_, &other->_impl_.slotstr_, arena);
}

::google::protobuf::Metadata RuneInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[11]);
}
// ===================================================================

class RSinfo::_Internal {
 public:
  using HasBits = decltype(std::declval<RSinfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(RSinfo, _impl_._has_bits_);
};

RSinfo::RSinfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.RSinfo)
}
inline PROTOBUF_NDEBUG_INLINE RSinfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        related_name_(arena, from.related_name_) {}

RSinfo::RSinfo(
    ::google::protobuf::Arena* arena,
    const RSinfo& from)
    : ::google::protobuf::Message(arena) {
  RSinfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, related_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, related_id_),
           offsetof(Impl_, related_vip_) -
               offsetof(Impl_, related_id_) +
               sizeof(Impl_::related_vip_));

  // @@protoc_insertion_point(copy_constructor:DBToCS.RSinfo)
}
inline PROTOBUF_NDEBUG_INLINE RSinfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        related_name_(arena) {}

inline void RSinfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, related_id_),
           0,
           offsetof(Impl_, related_vip_) -
               offsetof(Impl_, related_id_) +
               sizeof(Impl_::related_vip_));
}
RSinfo::~RSinfo() {
  // @@protoc_insertion_point(destructor:DBToCS.RSinfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RSinfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.related_name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RSinfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RSinfo, _impl_._cached_size_),
              false,
          },
          &RSinfo::MergeImpl,
          &RSinfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RSinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.RSinfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.related_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.related_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.related_vip_) -
        reinterpret_cast<char*>(&_impl_.related_id_)) + sizeof(_impl_.related_vip_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RSinfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 34, 2> RSinfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RSinfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RSinfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::RSinfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint64 related_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RSinfo, _impl_.related_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.related_id_)}},
    // optional uint32 related_header = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RSinfo, _impl_.related_header_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.related_header_)}},
    // optional string related_name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.related_name_)}},
    // optional uint32 relation = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RSinfo, _impl_.relation_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.relation_)}},
    // optional uint32 related_vip = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RSinfo, _impl_.related_vip_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.related_vip_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 related_id = 1;
    {PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.related_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 related_header = 2;
    {PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.related_header_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string related_name = 3;
    {PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.related_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 relation = 4;
    {PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.relation_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 related_vip = 5;
    {PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.related_vip_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\15\0\0\14\0\0\0\0"
    "DBToCS.RSinfo"
    "related_name"
  }},
};

::uint8_t* RSinfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.RSinfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 related_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_related_id(), target);
  }

  // optional uint32 related_header = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_related_header(), target);
  }

  // optional string related_name = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_related_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.RSinfo.related_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional uint32 relation = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_relation(), target);
  }

  // optional uint32 related_vip = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_related_vip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.RSinfo)
  return target;
}

::size_t RSinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.RSinfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string related_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_related_name());
    }

    // optional uint64 related_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_related_id());
    }

    // optional uint32 related_header = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_related_header());
    }

    // optional uint32 relation = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_relation());
    }

    // optional uint32 related_vip = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_related_vip());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RSinfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RSinfo*>(&to_msg);
  auto& from = static_cast<const RSinfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.RSinfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_related_name(from._internal_related_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.related_id_ = from._impl_.related_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.related_header_ = from._impl_.related_header_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.relation_ = from._impl_.relation_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.related_vip_ = from._impl_.related_vip_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RSinfo::CopyFrom(const RSinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.RSinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RSinfo::IsInitialized() const {
  return true;
}

void RSinfo::InternalSwap(RSinfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.related_name_, &other->_impl_.related_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.related_vip_)
      + sizeof(RSinfo::_impl_.related_vip_)
      - PROTOBUF_FIELD_OFFSET(RSinfo, _impl_.related_id_)>(
          reinterpret_cast<char*>(&_impl_.related_id_),
          reinterpret_cast<char*>(&other->_impl_.related_id_));
}

::google::protobuf::Metadata RSinfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[12]);
}
// ===================================================================

class ItemInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<ItemInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_._has_bits_);
};

ItemInfo::ItemInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.ItemInfo)
}
ItemInfo::ItemInfo(
    ::google::protobuf::Arena* arena, const ItemInfo& from)
    : ItemInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ItemInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ItemInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, item_id_),
           0,
           offsetof(Impl_, end_time_) -
               offsetof(Impl_, item_id_) +
               sizeof(Impl_::end_time_));
}
ItemInfo::~ItemInfo() {
  // @@protoc_insertion_point(destructor:DBToCS.ItemInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ItemInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ItemInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_._cached_size_),
              false,
          },
          &ItemInfo::MergeImpl,
          &ItemInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.ItemInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.item_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.end_time_) -
        reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.end_time_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ItemInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> ItemInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ItemInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::ItemInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 end_time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ItemInfo, _impl_.end_time_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_.end_time_)}},
    // optional int32 item_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ItemInfo, _impl_.item_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_.item_id_)}},
    // optional uint32 item_num = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ItemInfo, _impl_.item_num_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_.item_num_)}},
    // optional int32 buy_time = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ItemInfo, _impl_.buy_time_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_.buy_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 item_id = 1;
    {PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_.item_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 item_num = 2;
    {PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_.item_num_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 buy_time = 3;
    {PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_.buy_time_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 end_time = 4;
    {PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_.end_time_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ItemInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.ItemInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_item_id(), target);
  }

  // optional uint32 item_num = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_item_num(), target);
  }

  // optional int32 buy_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_buy_time(), target);
  }

  // optional int32 end_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_end_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.ItemInfo)
  return target;
}

::size_t ItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.ItemInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional int32 item_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_item_id());
    }

    // optional uint32 item_num = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_item_num());
    }

    // optional int32 buy_time = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_buy_time());
    }

    // optional int32 end_time = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_end_time());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ItemInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ItemInfo*>(&to_msg);
  auto& from = static_cast<const ItemInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.ItemInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.item_id_ = from._impl_.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.item_num_ = from._impl_.item_num_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.buy_time_ = from._impl_.buy_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.end_time_ = from._impl_.end_time_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ItemInfo::CopyFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ItemInfo::IsInitialized() const {
  return true;
}

void ItemInfo::InternalSwap(ItemInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_.end_time_)
      + sizeof(ItemInfo::_impl_.end_time_)
      - PROTOBUF_FIELD_OFFSET(ItemInfo, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
}

::google::protobuf::Metadata ItemInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[13]);
}
// ===================================================================

class MailInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<MailInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MailInfo, _impl_._has_bits_);
};

MailInfo::MailInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.MailInfo)
}
MailInfo::MailInfo(
    ::google::protobuf::Arena* arena, const MailInfo& from)
    : MailInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MailInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MailInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mailid_),
           0,
           offsetof(Impl_, state_) -
               offsetof(Impl_, mailid_) +
               sizeof(Impl_::state_));
}
MailInfo::~MailInfo() {
  // @@protoc_insertion_point(destructor:DBToCS.MailInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MailInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MailInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(MailInfo, _impl_._cached_size_),
              false,
          },
          &MailInfo::MergeImpl,
          &MailInfo::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void MailInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.MailInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.mailid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.state_) -
        reinterpret_cast<char*>(&_impl_.mailid_)) + sizeof(_impl_.state_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MailInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MailInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MailInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MailInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::MailInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 state = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MailInfo, _impl_.state_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(MailInfo, _impl_.state_)}},
    // optional int32 mailid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MailInfo, _impl_.mailid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(MailInfo, _impl_.mailid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 mailid = 1;
    {PROTOBUF_FIELD_OFFSET(MailInfo, _impl_.mailid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 state = 2;
    {PROTOBUF_FIELD_OFFSET(MailInfo, _impl_.state_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* MailInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.MailInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 mailid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_mailid(), target);
  }

  // optional int32 state = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.MailInfo)
  return target;
}

::size_t MailInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.MailInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 mailid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_mailid());
    }

    // optional int32 state = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_state());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MailInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MailInfo*>(&to_msg);
  auto& from = static_cast<const MailInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.MailInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.mailid_ = from._impl_.mailid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.state_ = from._impl_.state_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MailInfo::CopyFrom(const MailInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.MailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MailInfo::IsInitialized() const {
  return true;
}

void MailInfo::InternalSwap(MailInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MailInfo, _impl_.state_)
      + sizeof(MailInfo::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(MailInfo, _impl_.mailid_)>(
          reinterpret_cast<char*>(&_impl_.mailid_),
          reinterpret_cast<char*>(&other->_impl_.mailid_));
}

::google::protobuf::Metadata MailInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[14]);
}
// ===================================================================

class QueryUser::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryUser>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryUser, _impl_._has_bits_);
};

QueryUser::QueryUser(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.QueryUser)
}
inline PROTOBUF_NDEBUG_INLINE QueryUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        herocfg_{visibility, arena, from.herocfg_},
        runeinfo_{visibility, arena, from.runeinfo_},
        rsinfo_{visibility, arena, from.rsinfo_},
        item_info_{visibility, arena, from.item_info_},
        mail_info_{visibility, arena, from.mail_info_},
        db_(arena, from.db_),
        login_(arena, from.login_),
        nickname_(arena, from.nickname_),
        guidestr_(arena, from.guidestr_),
        taskdata_(arena, from.taskdata_) {}

QueryUser::QueryUser(
    ::google::protobuf::Arena* arena,
    const QueryUser& from)
    : ::google::protobuf::Message(arena) {
  QueryUser* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gsid_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:DBToCS.QueryUser)
}
inline PROTOBUF_NDEBUG_INLINE QueryUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        herocfg_{visibility, arena},
        runeinfo_{visibility, arena},
        rsinfo_{visibility, arena},
        item_info_{visibility, arena},
        mail_info_{visibility, arena},
        db_(arena),
        login_(arena),
        nickname_(arena),
        guidestr_(arena),
        taskdata_(arena),
        msgid_{static_cast< ::DBToCS::MsgID >(2)} {}

inline void QueryUser::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           0,
           offsetof(Impl_, gcnetid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::gcnetid_));
}
QueryUser::~QueryUser() {
  // @@protoc_insertion_point(destructor:DBToCS.QueryUser)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryUser::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.db_.Destroy();
  _impl_.login_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.guidestr_.Destroy();
  _impl_.taskdata_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QueryUser::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QueryUser, _impl_._cached_size_),
              false,
          },
          &QueryUser::MergeImpl,
          &QueryUser::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QueryUser::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.QueryUser)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.herocfg_.Clear();
  _impl_.runeinfo_.Clear();
  _impl_.rsinfo_.Clear();
  _impl_.item_info_.Clear();
  _impl_.mail_info_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.db_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.login_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.nickname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.guidestr_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.taskdata_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&_impl_.gsid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.gcnetid_) -
        reinterpret_cast<char*>(&_impl_.gsid_)) + sizeof(_impl_.gcnetid_));
    _impl_.msgid_ = 2;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryUser::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 6, 64, 2> QueryUser::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryUser, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QueryUser_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::QueryUser>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .DBToCS.MsgID msgid = 1 [default = eQueryUser_DBCallBack];
    {::_pbi::TcParser::FastEr1S1,
     {8, 7, 9, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.msgid_)}},
    // optional string db = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.db_)}},
    // optional string login = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.login_)}},
    // optional int32 gsid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryUser, _impl_.gsid_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.gsid_)}},
    // optional int32 gcnetid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(QueryUser, _impl_.gcnetid_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.gcnetid_)}},
    // optional string nickname = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.nickname_)}},
    // repeated .DBToCS.HeroCfg herocfg = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 1, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.herocfg_)}},
    // repeated .DBToCS.RuneInfo runeinfo = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 2, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.runeinfo_)}},
    // repeated .DBToCS.RSinfo rsinfo = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 3, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.rsinfo_)}},
    // repeated .DBToCS.ItemInfo item_info = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 4, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.item_info_)}},
    // repeated .DBToCS.MailInfo mail_info = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 5, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.mail_info_)}},
    // optional string guidestr = 12;
    {::_pbi::TcParser::FastSS1,
     {98, 3, 0, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.guidestr_)}},
    // optional string taskData = 13;
    {::_pbi::TcParser::FastSS1,
     {106, 4, 0, PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.taskdata_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .DBToCS.MsgID msgid = 1 [default = eQueryUser_DBCallBack];
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.msgid_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string db = 2;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.db_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string login = 3;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.login_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 gsid = 4;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.gsid_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 gcnetid = 5;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.gcnetid_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string nickname = 6;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.nickname_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .DBToCS.HeroCfg herocfg = 7;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.herocfg_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DBToCS.RuneInfo runeinfo = 8;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.runeinfo_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DBToCS.RSinfo rsinfo = 9;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.rsinfo_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DBToCS.ItemInfo item_info = 10;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.item_info_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .DBToCS.MailInfo mail_info = 11;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.mail_info_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string guidestr = 12;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.guidestr_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string taskData = 13;
    {PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.taskdata_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {1, 9},
    {::_pbi::TcParser::GetTable<::DBToCS::HeroCfg>()},
    {::_pbi::TcParser::GetTable<::DBToCS::RuneInfo>()},
    {::_pbi::TcParser::GetTable<::DBToCS::RSinfo>()},
    {::_pbi::TcParser::GetTable<::DBToCS::ItemInfo>()},
    {::_pbi::TcParser::GetTable<::DBToCS::MailInfo>()},
  }}, {{
    "\20\0\2\5\0\0\10\0\0\0\0\0\10\10\0\0"
    "DBToCS.QueryUser"
    "db"
    "login"
    "nickname"
    "guidestr"
    "taskData"
  }},
};

::uint8_t* QueryUser::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.QueryUser)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .DBToCS.MsgID msgid = 1 [default = eQueryUser_DBCallBack];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional string db = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_db();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.QueryUser.db");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string login = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_login();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.QueryUser.login");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional int32 gsid = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_gsid(), target);
  }

  // optional int32 gcnetid = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_gcnetid(), target);
  }

  // optional string nickname = 6;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.QueryUser.nickname");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // repeated .DBToCS.HeroCfg herocfg = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_herocfg_size()); i < n; i++) {
    const auto& repfield = this->_internal_herocfg().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .DBToCS.RuneInfo runeinfo = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_runeinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_runeinfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .DBToCS.RSinfo rsinfo = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_rsinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_rsinfo().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .DBToCS.ItemInfo item_info = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_item_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_item_info().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .DBToCS.MailInfo mail_info = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mail_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_mail_info().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional string guidestr = 12;
  if (cached_has_bits & 0x00000008u) {
    const std::string& _s = this->_internal_guidestr();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.QueryUser.guidestr");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // optional string taskData = 13;
  if (cached_has_bits & 0x00000010u) {
    const std::string& _s = this->_internal_taskdata();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "DBToCS.QueryUser.taskData");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.QueryUser)
  return target;
}

::size_t QueryUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.QueryUser)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DBToCS.HeroCfg herocfg = 7;
  total_size += 1UL * this->_internal_herocfg_size();
  for (const auto& msg : this->_internal_herocfg()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .DBToCS.RuneInfo runeinfo = 8;
  total_size += 1UL * this->_internal_runeinfo_size();
  for (const auto& msg : this->_internal_runeinfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .DBToCS.RSinfo rsinfo = 9;
  total_size += 1UL * this->_internal_rsinfo_size();
  for (const auto& msg : this->_internal_rsinfo()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .DBToCS.ItemInfo item_info = 10;
  total_size += 1UL * this->_internal_item_info_size();
  for (const auto& msg : this->_internal_item_info()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .DBToCS.MailInfo mail_info = 11;
  total_size += 1UL * this->_internal_mail_info_size();
  for (const auto& msg : this->_internal_mail_info()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string db = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_db());
    }

    // optional string login = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_login());
    }

    // optional string nickname = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_nickname());
    }

    // optional string guidestr = 12;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_guidestr());
    }

    // optional string taskData = 13;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_taskdata());
    }

    // optional int32 gsid = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gsid());
    }

    // optional int32 gcnetid = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gcnetid());
    }

    // optional .DBToCS.MsgID msgid = 1 [default = eQueryUser_DBCallBack];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QueryUser::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryUser*>(&to_msg);
  auto& from = static_cast<const QueryUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.QueryUser)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_herocfg()->MergeFrom(
      from._internal_herocfg());
  _this->_internal_mutable_runeinfo()->MergeFrom(
      from._internal_runeinfo());
  _this->_internal_mutable_rsinfo()->MergeFrom(
      from._internal_rsinfo());
  _this->_internal_mutable_item_info()->MergeFrom(
      from._internal_item_info());
  _this->_internal_mutable_mail_info()->MergeFrom(
      from._internal_mail_info());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_db(from._internal_db());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_login(from._internal_login());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_nickname(from._internal_nickname());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_guidestr(from._internal_guidestr());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_taskdata(from._internal_taskdata());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.gsid_ = from._impl_.gsid_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.gcnetid_ = from._impl_.gcnetid_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUser::CopyFrom(const QueryUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.QueryUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryUser::IsInitialized() const {
  return true;
}

void QueryUser::InternalSwap(QueryUser* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.herocfg_.InternalSwap(&other->_impl_.herocfg_);
  _impl_.runeinfo_.InternalSwap(&other->_impl_.runeinfo_);
  _impl_.rsinfo_.InternalSwap(&other->_impl_.rsinfo_);
  _impl_.item_info_.InternalSwap(&other->_impl_.item_info_);
  _impl_.mail_info_.InternalSwap(&other->_impl_.mail_info_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.db_, &other->_impl_.db_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.login_, &other->_impl_.login_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.guidestr_, &other->_impl_.guidestr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.taskdata_, &other->_impl_.taskdata_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.msgid_)
      + sizeof(QueryUser::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(QueryUser, _impl_.gsid_)>(
          reinterpret_cast<char*>(&_impl_.gsid_),
          reinterpret_cast<char*>(&other->_impl_.gsid_));
}

::google::protobuf::Metadata QueryUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[15]);
}
// ===================================================================

class QueryAllUser::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllUser>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllUser, _impl_._has_bits_);
};

QueryAllUser::QueryAllUser(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DBToCS.QueryAllUser)
}
inline PROTOBUF_NDEBUG_INLINE QueryAllUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        squeryuser_{visibility, arena, from.squeryuser_} {}

QueryAllUser::QueryAllUser(
    ::google::protobuf::Arena* arena,
    const QueryAllUser& from)
    : ::google::protobuf::Message(arena) {
  QueryAllUser* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.msgid_ = from._impl_.msgid_;

  // @@protoc_insertion_point(copy_constructor:DBToCS.QueryAllUser)
}
inline PROTOBUF_NDEBUG_INLINE QueryAllUser::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        squeryuser_{visibility, arena},
        msgid_{static_cast< ::DBToCS::MsgID >(9)} {}

inline void QueryAllUser::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryAllUser::~QueryAllUser() {
  // @@protoc_insertion_point(destructor:DBToCS.QueryAllUser)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void QueryAllUser::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
QueryAllUser::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(QueryAllUser, _impl_._cached_size_),
              false,
          },
          &QueryAllUser::MergeImpl,
          &QueryAllUser::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void QueryAllUser::Clear() {
// @@protoc_insertion_point(message_clear_start:DBToCS.QueryAllUser)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.squeryuser_.Clear();
  _impl_.msgid_ = 9;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* QueryAllUser::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> QueryAllUser::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryAllUser, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_QueryAllUser_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::DBToCS::QueryAllUser>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .DBToCS.QueryUser sQueryUser = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(QueryAllUser, _impl_.squeryuser_)}},
    // optional .DBToCS.MsgID msgid = 1 [default = eQueryAllUser_CallBack];
    {::_pbi::TcParser::FastEr1S1,
     {8, 0, 9, PROTOBUF_FIELD_OFFSET(QueryAllUser, _impl_.msgid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .DBToCS.MsgID msgid = 1 [default = eQueryAllUser_CallBack];
    {PROTOBUF_FIELD_OFFSET(QueryAllUser, _impl_.msgid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // repeated .DBToCS.QueryUser sQueryUser = 2;
    {PROTOBUF_FIELD_OFFSET(QueryAllUser, _impl_.squeryuser_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {1, 9},
    {::_pbi::TcParser::GetTable<::DBToCS::QueryUser>()},
  }}, {{
  }},
};

::uint8_t* QueryAllUser::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DBToCS.QueryAllUser)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .DBToCS.MsgID msgid = 1 [default = eQueryAllUser_CallBack];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // repeated .DBToCS.QueryUser sQueryUser = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_squeryuser_size()); i < n; i++) {
    const auto& repfield = this->_internal_squeryuser().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBToCS.QueryAllUser)
  return target;
}

::size_t QueryAllUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBToCS.QueryAllUser)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DBToCS.QueryUser sQueryUser = 2;
  total_size += 1UL * this->_internal_squeryuser_size();
  for (const auto& msg : this->_internal_squeryuser()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional .DBToCS.MsgID msgid = 1 [default = eQueryAllUser_CallBack];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void QueryAllUser::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryAllUser*>(&to_msg);
  auto& from = static_cast<const QueryAllUser&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DBToCS.QueryAllUser)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_squeryuser()->MergeFrom(
      from._internal_squeryuser());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.msgid_ = from._impl_.msgid_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllUser::CopyFrom(const QueryAllUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBToCS.QueryAllUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool QueryAllUser::IsInitialized() const {
  return true;
}

void QueryAllUser::InternalSwap(QueryAllUser* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.squeryuser_.InternalSwap(&other->_impl_.squeryuser_);
  swap(_impl_.msgid_, other->_impl_.msgid_);
}

::google::protobuf::Metadata QueryAllUser::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_DBToCs_2eproto_getter,
                                   &descriptor_table_DBToCs_2eproto_once,
                                   file_level_metadata_DBToCs_2eproto[16]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace DBToCS
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_DBToCs_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
