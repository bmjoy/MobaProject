// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSToSS.proto
// Protobuf C++ Version: 4.26.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_CSToSS_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_CSToSS_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 4026000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_CSToSS_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_CSToSS_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_CSToSS_2eproto;
namespace CSToSS {
class AskRegisteRet;
struct AskRegisteRetDefaultTypeInternal;
extern AskRegisteRetDefaultTypeInternal _AskRegisteRet_default_instance_;
class AskRegisteRet_GSInfo;
struct AskRegisteRet_GSInfoDefaultTypeInternal;
extern AskRegisteRet_GSInfoDefaultTypeInternal _AskRegisteRet_GSInfo_default_instance_;
class BattleKickOneUser;
struct BattleKickOneUserDefaultTypeInternal;
extern BattleKickOneUserDefaultTypeInternal _BattleKickOneUser_default_instance_;
class CreateBattle;
struct CreateBattleDefaultTypeInternal;
extern CreateBattleDefaultTypeInternal _CreateBattle_default_instance_;
class CreateBattle_AiRobotInfo;
struct CreateBattle_AiRobotInfoDefaultTypeInternal;
extern CreateBattle_AiRobotInfoDefaultTypeInternal _CreateBattle_AiRobotInfo_default_instance_;
class CreateBattle_CreateBattleUserInfo;
struct CreateBattle_CreateBattleUserInfoDefaultTypeInternal;
extern CreateBattle_CreateBattleUserInfoDefaultTypeInternal _CreateBattle_CreateBattleUserInfo_default_instance_;
class CreateBattle_CreateBattleUserInfo_RunePage;
struct CreateBattle_CreateBattleUserInfo_RunePageDefaultTypeInternal;
extern CreateBattle_CreateBattleUserInfo_RunePageDefaultTypeInternal _CreateBattle_CreateBattleUserInfo_RunePage_default_instance_;
class CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo;
struct CreateBattle_CreateBattleUserInfo_RunePage_RuneInfoDefaultTypeInternal;
extern CreateBattle_CreateBattleUserInfo_RunePage_RuneInfoDefaultTypeInternal _CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_default_instance_;
class FinishBattleResponse;
struct FinishBattleResponseDefaultTypeInternal;
extern FinishBattleResponseDefaultTypeInternal _FinishBattleResponse_default_instance_;
class NotifyBattleStateChange;
struct NotifyBattleStateChangeDefaultTypeInternal;
extern NotifyBattleStateChangeDefaultTypeInternal _NotifyBattleStateChange_default_instance_;
class NotifyBuffCfgList;
struct NotifyBuffCfgListDefaultTypeInternal;
extern NotifyBuffCfgListDefaultTypeInternal _NotifyBuffCfgList_default_instance_;
class NotifyGoodsCfgList;
struct NotifyGoodsCfgListDefaultTypeInternal;
extern NotifyGoodsCfgListDefaultTypeInternal _NotifyGoodsCfgList_default_instance_;
class NotifyHeroCfgList;
struct NotifyHeroCfgListDefaultTypeInternal;
extern NotifyHeroCfgListDefaultTypeInternal _NotifyHeroCfgList_default_instance_;
class NotifyNPCCfgList;
struct NotifyNPCCfgListDefaultTypeInternal;
extern NotifyNPCCfgListDefaultTypeInternal _NotifyNPCCfgList_default_instance_;
class NotifyNewSkillCfgList;
struct NotifyNewSkillCfgListDefaultTypeInternal;
extern NotifyNewSkillCfgListDefaultTypeInternal _NotifyNewSkillCfgList_default_instance_;
class NotifyOBUser;
struct NotifyOBUserDefaultTypeInternal;
extern NotifyOBUserDefaultTypeInternal _NotifyOBUser_default_instance_;
class NotifyOBUser_OBPosInfo;
struct NotifyOBUser_OBPosInfoDefaultTypeInternal;
extern NotifyOBUser_OBPosInfoDefaultTypeInternal _NotifyOBUser_OBPosInfo_default_instance_;
class NotifyPassitiveEffectBloodSeekCfgList;
struct NotifyPassitiveEffectBloodSeekCfgListDefaultTypeInternal;
extern NotifyPassitiveEffectBloodSeekCfgListDefaultTypeInternal _NotifyPassitiveEffectBloodSeekCfgList_default_instance_;
class NotifyPassitiveEffectReboundCfgList;
struct NotifyPassitiveEffectReboundCfgListDefaultTypeInternal;
extern NotifyPassitiveEffectReboundCfgListDefaultTypeInternal _NotifyPassitiveEffectReboundCfgList_default_instance_;
class NotifyPassitiveEffectReliveCfgList;
struct NotifyPassitiveEffectReliveCfgListDefaultTypeInternal;
extern NotifyPassitiveEffectReliveCfgListDefaultTypeInternal _NotifyPassitiveEffectReliveCfgList_default_instance_;
class NotifyPassitiveSkillCfgList;
struct NotifyPassitiveSkillCfgListDefaultTypeInternal;
extern NotifyPassitiveSkillCfgListDefaultTypeInternal _NotifyPassitiveSkillCfgList_default_instance_;
class NotifyPublicLuaStr;
struct NotifyPublicLuaStrDefaultTypeInternal;
extern NotifyPublicLuaStrDefaultTypeInternal _NotifyPublicLuaStr_default_instance_;
class NotifyRobotAICfgList;
struct NotifyRobotAICfgListDefaultTypeInternal;
extern NotifyRobotAICfgListDefaultTypeInternal _NotifyRobotAICfgList_default_instance_;
class NotifyRobotAIPathCfgList;
struct NotifyRobotAIPathCfgListDefaultTypeInternal;
extern NotifyRobotAIPathCfgListDefaultTypeInternal _NotifyRobotAIPathCfgList_default_instance_;
class NotifyRunesCfgList;
struct NotifyRunesCfgListDefaultTypeInternal;
extern NotifyRunesCfgListDefaultTypeInternal _NotifyRunesCfgList_default_instance_;
class NotifyRunesSlotCfgList;
struct NotifyRunesSlotCfgListDefaultTypeInternal;
extern NotifyRunesSlotCfgListDefaultTypeInternal _NotifyRunesSlotCfgList_default_instance_;
class NotifySSGuideBattleEnd;
struct NotifySSGuideBattleEndDefaultTypeInternal;
extern NotifySSGuideBattleEndDefaultTypeInternal _NotifySSGuideBattleEnd_default_instance_;
class NotifyShopCfgList;
struct NotifyShopCfgListDefaultTypeInternal;
extern NotifyShopCfgListDefaultTypeInternal _NotifyShopCfgList_default_instance_;
class NotifySkillCfgList;
struct NotifySkillCfgListDefaultTypeInternal;
extern NotifySkillCfgListDefaultTypeInternal _NotifySkillCfgList_default_instance_;
class NotifySkillModelAccountCfgCfgList;
struct NotifySkillModelAccountCfgCfgListDefaultTypeInternal;
extern NotifySkillModelAccountCfgCfgListDefaultTypeInternal _NotifySkillModelAccountCfgCfgList_default_instance_;
class NotifySkillModelBufCfgList;
struct NotifySkillModelBufCfgListDefaultTypeInternal;
extern NotifySkillModelBufCfgListDefaultTypeInternal _NotifySkillModelBufCfgList_default_instance_;
class NotifySkillModelEmitCfgList;
struct NotifySkillModelEmitCfgListDefaultTypeInternal;
extern NotifySkillModelEmitCfgListDefaultTypeInternal _NotifySkillModelEmitCfgList_default_instance_;
class NotifySkillModelLeadingCfgList;
struct NotifySkillModelLeadingCfgListDefaultTypeInternal;
extern NotifySkillModelLeadingCfgListDefaultTypeInternal _NotifySkillModelLeadingCfgList_default_instance_;
class NotifySkillModelLinkCfgList;
struct NotifySkillModelLinkCfgListDefaultTypeInternal;
extern NotifySkillModelLinkCfgListDefaultTypeInternal _NotifySkillModelLinkCfgList_default_instance_;
class NotifySkillModelMoveCfgList;
struct NotifySkillModelMoveCfgListDefaultTypeInternal;
extern NotifySkillModelMoveCfgListDefaultTypeInternal _NotifySkillModelMoveCfgList_default_instance_;
class NotifySkillModelPurificationCfgList;
struct NotifySkillModelPurificationCfgListDefaultTypeInternal;
extern NotifySkillModelPurificationCfgListDefaultTypeInternal _NotifySkillModelPurificationCfgList_default_instance_;
class NotifySkillModelRangeCfgList;
struct NotifySkillModelRangeCfgListDefaultTypeInternal;
extern NotifySkillModelRangeCfgListDefaultTypeInternal _NotifySkillModelRangeCfgList_default_instance_;
class NotifySkillModelSummonCfgList;
struct NotifySkillModelSummonCfgListDefaultTypeInternal;
extern NotifySkillModelSummonCfgListDefaultTypeInternal _NotifySkillModelSummonCfgList_default_instance_;
class NotifySkillModelSwitchCfgList;
struct NotifySkillModelSwitchCfgListDefaultTypeInternal;
extern NotifySkillModelSwitchCfgListDefaultTypeInternal _NotifySkillModelSwitchCfgList_default_instance_;
class NotifyUserInfoChange;
struct NotifyUserInfoChangeDefaultTypeInternal;
extern NotifyUserInfoChangeDefaultTypeInternal _NotifyUserInfoChange_default_instance_;
class NotifyUserOffline;
struct NotifyUserOfflineDefaultTypeInternal;
extern NotifyUserOfflineDefaultTypeInternal _NotifyUserOffline_default_instance_;
class NotifyUserOnline;
struct NotifyUserOnlineDefaultTypeInternal;
extern NotifyUserOnlineDefaultTypeInternal _NotifyUserOnline_default_instance_;
class NotifyUserReconnectGame;
struct NotifyUserReconnectGameDefaultTypeInternal;
extern NotifyUserReconnectGameDefaultTypeInternal _NotifyUserReconnectGame_default_instance_;
class NotifyUsetNetInfoChange;
struct NotifyUsetNetInfoChangeDefaultTypeInternal;
extern NotifyUsetNetInfoChangeDefaultTypeInternal _NotifyUsetNetInfoChange_default_instance_;
class NotifyWildMonsterCfgList;
struct NotifyWildMonsterCfgListDefaultTypeInternal;
extern NotifyWildMonsterCfgListDefaultTypeInternal _NotifyWildMonsterCfgList_default_instance_;
class OrderBeginNewBattle;
struct OrderBeginNewBattleDefaultTypeInternal;
extern OrderBeginNewBattleDefaultTypeInternal _OrderBeginNewBattle_default_instance_;
class PingRet;
struct PingRetDefaultTypeInternal;
extern PingRetDefaultTypeInternal _PingRet_default_instance_;
class ReportSSMsg;
struct ReportSSMsgDefaultTypeInternal;
extern ReportSSMsgDefaultTypeInternal _ReportSSMsg_default_instance_;
class SSGameFuncSwitch;
struct SSGameFuncSwitchDefaultTypeInternal;
extern SSGameFuncSwitchDefaultTypeInternal _SSGameFuncSwitch_default_instance_;
class SUserNetInfo;
struct SUserNetInfoDefaultTypeInternal;
extern SUserNetInfoDefaultTypeInternal _SUserNetInfo_default_instance_;
class UserInfo;
struct UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class UserInfo_SUserDBData;
struct UserInfo_SUserDBDataDefaultTypeInternal;
extern UserInfo_SUserDBDataDefaultTypeInternal _UserInfo_SUserDBData_default_instance_;
class UserInfo_SUserDBData_SUserGuideSteps;
struct UserInfo_SUserDBData_SUserGuideStepsDefaultTypeInternal;
extern UserInfo_SUserDBData_SUserGuideStepsDefaultTypeInternal _UserInfo_SUserDBData_SUserGuideSteps_default_instance_;
class UserInfo_SUserRunesRuntimeData;
struct UserInfo_SUserRunesRuntimeDataDefaultTypeInternal;
extern UserInfo_SUserRunesRuntimeDataDefaultTypeInternal _UserInfo_SUserRunesRuntimeData_default_instance_;
class UserRoomInfo;
struct UserRoomInfoDefaultTypeInternal;
extern UserRoomInfoDefaultTypeInternal _UserRoomInfo_default_instance_;
}  // namespace CSToSS
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace CSToSS {
enum UserInfo_SUserDBData_EObjectType : int {
  UserInfo_SUserDBData_EObjectType_eObjectType_None = 0,
  UserInfo_SUserDBData_EObjectType_eObjectType_Guild = 1,
  UserInfo_SUserDBData_EObjectType_eObjectType_User = 2,
  UserInfo_SUserDBData_EObjectType_eObjectType_HeroBegin = 10000,
  UserInfo_SUserDBData_EObjectType_eObjectType_NPCBegin = 20000,
  UserInfo_SUserDBData_EObjectType_eObjectType_GoodsBegin = 30000,
};

bool UserInfo_SUserDBData_EObjectType_IsValid(int value);
extern const uint32_t UserInfo_SUserDBData_EObjectType_internal_data_[];
constexpr UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData_EObjectType_EObjectType_MIN = static_cast<UserInfo_SUserDBData_EObjectType>(0);
constexpr UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData_EObjectType_EObjectType_MAX = static_cast<UserInfo_SUserDBData_EObjectType>(30000);
constexpr int UserInfo_SUserDBData_EObjectType_EObjectType_ARRAYSIZE = 30000 + 1;
const ::google::protobuf::EnumDescriptor*
UserInfo_SUserDBData_EObjectType_descriptor();
template <typename T>
const std::string& UserInfo_SUserDBData_EObjectType_Name(T value) {
  static_assert(std::is_same<T, UserInfo_SUserDBData_EObjectType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EObjectType_Name().");
  return ::google::protobuf::internal::NameOfEnum(UserInfo_SUserDBData_EObjectType_descriptor(), value);
}
inline bool UserInfo_SUserDBData_EObjectType_Parse(absl::string_view name, UserInfo_SUserDBData_EObjectType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserInfo_SUserDBData_EObjectType>(
      UserInfo_SUserDBData_EObjectType_descriptor(), name, value);
}
enum UserInfo_SUserDBData_EUserCate : int {
  UserInfo_SUserDBData_EUserCate_eUserCate_Admin = 0,
  UserInfo_SUserDBData_EUserCate_eUserCate_GM = 1,
  UserInfo_SUserDBData_EUserCate_eUserCate_Robot = 2,
  UserInfo_SUserDBData_EUserCate_eUserCate_DiamondVIP = 3,
  UserInfo_SUserDBData_EUserCate_eUserCate_GloldVIP = 4,
  UserInfo_SUserDBData_EUserCate_eUserCate_SilverVIP = 5,
  UserInfo_SUserDBData_EUserCate_eUserCate_CopperVIP = 6,
  UserInfo_SUserDBData_EUserCate_eUserCate_Normal = 7,
};

bool UserInfo_SUserDBData_EUserCate_IsValid(int value);
extern const uint32_t UserInfo_SUserDBData_EUserCate_internal_data_[];
constexpr UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData_EUserCate_EUserCate_MIN = static_cast<UserInfo_SUserDBData_EUserCate>(0);
constexpr UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData_EUserCate_EUserCate_MAX = static_cast<UserInfo_SUserDBData_EUserCate>(7);
constexpr int UserInfo_SUserDBData_EUserCate_EUserCate_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
UserInfo_SUserDBData_EUserCate_descriptor();
template <typename T>
const std::string& UserInfo_SUserDBData_EUserCate_Name(T value) {
  static_assert(std::is_same<T, UserInfo_SUserDBData_EUserCate>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EUserCate_Name().");
  return UserInfo_SUserDBData_EUserCate_Name(static_cast<UserInfo_SUserDBData_EUserCate>(value));
}
template <>
inline const std::string& UserInfo_SUserDBData_EUserCate_Name(UserInfo_SUserDBData_EUserCate value) {
  return ::google::protobuf::internal::NameOfDenseEnum<UserInfo_SUserDBData_EUserCate_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool UserInfo_SUserDBData_EUserCate_Parse(absl::string_view name, UserInfo_SUserDBData_EUserCate* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserInfo_SUserDBData_EUserCate>(
      UserInfo_SUserDBData_EUserCate_descriptor(), name, value);
}
enum UserInfo_SUserDBData_EUserPlatform : int {
  UserInfo_SUserDBData_EUserPlatform_eUP_None = 0,
  UserInfo_SUserDBData_EUserPlatform_eUP_Apple = 1,
  UserInfo_SUserDBData_EUserPlatform_eUP_QQ = 2,
  UserInfo_SUserDBData_EUserPlatform_eUP_360 = 3,
};

bool UserInfo_SUserDBData_EUserPlatform_IsValid(int value);
extern const uint32_t UserInfo_SUserDBData_EUserPlatform_internal_data_[];
constexpr UserInfo_SUserDBData_EUserPlatform UserInfo_SUserDBData_EUserPlatform_EUserPlatform_MIN = static_cast<UserInfo_SUserDBData_EUserPlatform>(0);
constexpr UserInfo_SUserDBData_EUserPlatform UserInfo_SUserDBData_EUserPlatform_EUserPlatform_MAX = static_cast<UserInfo_SUserDBData_EUserPlatform>(3);
constexpr int UserInfo_SUserDBData_EUserPlatform_EUserPlatform_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
UserInfo_SUserDBData_EUserPlatform_descriptor();
template <typename T>
const std::string& UserInfo_SUserDBData_EUserPlatform_Name(T value) {
  static_assert(std::is_same<T, UserInfo_SUserDBData_EUserPlatform>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EUserPlatform_Name().");
  return UserInfo_SUserDBData_EUserPlatform_Name(static_cast<UserInfo_SUserDBData_EUserPlatform>(value));
}
template <>
inline const std::string& UserInfo_SUserDBData_EUserPlatform_Name(UserInfo_SUserDBData_EUserPlatform value) {
  return ::google::protobuf::internal::NameOfDenseEnum<UserInfo_SUserDBData_EUserPlatform_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool UserInfo_SUserDBData_EUserPlatform_Parse(absl::string_view name, UserInfo_SUserDBData_EUserPlatform* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserInfo_SUserDBData_EUserPlatform>(
      UserInfo_SUserDBData_EUserPlatform_descriptor(), name, value);
}
enum CreateBattle_BattleType : int {
  CreateBattle_BattleType_eBattleType_Free = 0,
  CreateBattle_BattleType_eBattleType_Room = 1,
  CreateBattle_BattleType_eBattleType_Match = 2,
  CreateBattle_BattleType_eBattleType_Guide1 = 3,
  CreateBattle_BattleType_eBattleType_Guide2 = 4,
};

bool CreateBattle_BattleType_IsValid(int value);
extern const uint32_t CreateBattle_BattleType_internal_data_[];
constexpr CreateBattle_BattleType CreateBattle_BattleType_BattleType_MIN = static_cast<CreateBattle_BattleType>(0);
constexpr CreateBattle_BattleType CreateBattle_BattleType_BattleType_MAX = static_cast<CreateBattle_BattleType>(4);
constexpr int CreateBattle_BattleType_BattleType_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
CreateBattle_BattleType_descriptor();
template <typename T>
const std::string& CreateBattle_BattleType_Name(T value) {
  static_assert(std::is_same<T, CreateBattle_BattleType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BattleType_Name().");
  return CreateBattle_BattleType_Name(static_cast<CreateBattle_BattleType>(value));
}
template <>
inline const std::string& CreateBattle_BattleType_Name(CreateBattle_BattleType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CreateBattle_BattleType_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool CreateBattle_BattleType_Parse(absl::string_view name, CreateBattle_BattleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateBattle_BattleType>(
      CreateBattle_BattleType_descriptor(), name, value);
}
enum MsgId : int {
  eMsgToSSFromCS_Begin = 16384,
  eMsgToSSFromCS_AskPingRet = 16385,
  eMsgToSSFromCS_AskRegisteRet = 16386,
  eMsgToSSFromCS_NotifyUserInfo = 16387,
  eMsgToSSFromCS_OrderBeginNewBattle = 16388,
  eMsgToSSFromCS_NotifyBattleStateChange = 16389,
  eMsgToSSFromCS_NotifyUsetNetInfoChange = 16390,
  eMsgToSSFromCS_NotifyBuffCfgList = 16391,
  eMsgToSSFromCS_NotifySkillCfgList = 16392,
  eMsgToSSFromCS_NotifyNPCCfgList = 16393,
  eMsgToSSFromCS_NotifyHeroCfgList = 16394,
  eMsgToSSFromCS_NotifyShopCfgList = 16395,
  eMsgToSSFromCS_NotifyGoodsCfgList = 16396,
  eMsgToSSFromCS_NotifyPublicLuaStr = 16397,
  eMsgToSSFromCS_NotifyMapCfgList = 16398,
  eMsgToSSFromCS_NotifyMapCfgData = 16399,
  eMsgToSSFromCS_NotifyRunesCfgList = 16400,
  eMsgToSSFromCS_NotifyRunesSlotCfgList = 16401,
  eMsgToSSFromCS_NotifyWildMonsterCfgList = 16402,
  eMsgToSSFromCS_NotifyNewSkillCfgList = 16404,
  eMsgToSSFromCS_NotifySkillModelAccountCfgCfgList = 16405,
  eMsgToSSFromCS_NotifySkillModelEmitCfgList = 16406,
  eMsgToSSFromCS_NotifySkillModelRangeCfgList = 16407,
  eMsgToSSFromCS_NotifySkillModelLeadingCfgList = 16408,
  eMsgToSSFromCS_NotifySkillModelBufCfgList = 16409,
  eMsgToSSFromCS_NotifySkillModelSummonCfgList = 16410,
  eMsgToSSFromCS_NotifySkillModelMoveCfgList = 16411,
  eMsgToSSFromCS_NotifySkillModelSwitchCfgList = 16412,
  eMsgToSSFromCS_NotifyPassitiveSkillCfgList = 16413,
  eMsgToSSFromCS_NotifyPassitiveEffectBloodSeekCfgList = 16414,
  eMsgToSSFromCS_NotifyPassitiveEffectReboundCfgList = 16415,
  eMsgToSSFromCS_NotifyPassitiveEffectReliveCfgList = 16416,
  eMsgToSSFromCS_NotifyRobotAICfgList = 16417,
  eMsgToSSFromCS_NotifySkillModelPurificationCfgList = 16418,
  eMsgToSSFromCS_NotifyRobotAIPathCfgList = 16419,
  eMsgToSSFromCS_NotifySkillModelLinkCfgList = 16420,
  eMsgToSSFromCS_NotifySSGameSwitch = 16426,
  eMsgToSSFromCS_NotifyOBEnterBattle = 16427,
  eMsgToSSFromCS_NotifyUserReconnect = 16428,
  eMsgToSSFromCS_NotifyOBUser = 16429,
  eMsgToSSFromCS_NotifyUserReconnectGame = 16430,
  eMsgToSSFromCS_NotifyUserOffline = 16431,
  eMsgToSSFromCS_ReportSSMsg = 16432,
  eMsgToSSFromCS_BattleKickOneUser = 16433,
  eMsgToSSFromCS_NotifySSGuideBattleEnd = 16434,
  eMsgToSSFromCS_NotifyUserInfoChange = 16436,
  eMsgToSSFromCS_CreateBattle = 16500,
  eMsgToSSFromCS_OneUserOnline = 16501,
  eMsgToSSFromCS_OneUserOffline = 16502,
  eMsgToSSFromCS_FinishBattleResponse = 16510,
  eMsgToSSFromCS_End = 17000,
};

bool MsgId_IsValid(int value);
extern const uint32_t MsgId_internal_data_[];
constexpr MsgId MsgId_MIN = static_cast<MsgId>(16384);
constexpr MsgId MsgId_MAX = static_cast<MsgId>(17000);
constexpr int MsgId_ARRAYSIZE = 17000 + 1;
const ::google::protobuf::EnumDescriptor*
MsgId_descriptor();
template <typename T>
const std::string& MsgId_Name(T value) {
  static_assert(std::is_same<T, MsgId>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MsgId_Name().");
  return ::google::protobuf::internal::NameOfEnum(MsgId_descriptor(), value);
}
inline bool MsgId_Parse(absl::string_view name, MsgId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgId>(
      MsgId_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UserRoomInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.UserRoomInfo) */ {
 public:
  inline UserRoomInfo() : UserRoomInfo(nullptr) {}
  ~UserRoomInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UserRoomInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline UserRoomInfo(const UserRoomInfo& from) : UserRoomInfo(nullptr, from) {}
  inline UserRoomInfo(UserRoomInfo&& from) noexcept
      : UserRoomInfo(nullptr, std::move(from)) {}
  inline UserRoomInfo& operator=(const UserRoomInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserRoomInfo& operator=(UserRoomInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserRoomInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserRoomInfo* internal_default_instance() {
    return reinterpret_cast<const UserRoomInfo*>(
        &_UserRoomInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(UserRoomInfo& a, UserRoomInfo& b) { a.Swap(&b); }
  inline void Swap(UserRoomInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserRoomInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserRoomInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UserRoomInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserRoomInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UserRoomInfo& from) { UserRoomInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserRoomInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.UserRoomInfo"; }

 protected:
  explicit UserRoomInfo(::google::protobuf::Arena* arena);
  UserRoomInfo(::google::protobuf::Arena* arena, const UserRoomInfo& from);
  UserRoomInfo(::google::protobuf::Arena* arena, UserRoomInfo&& from) noexcept
      : UserRoomInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIfmasterFieldNumber = 1,
    kHeroidFieldNumber = 2,
    kGuidFieldNumber = 3,
    kPosFieldNumber = 4,
  };
  // optional bool ifmaster = 1;
  bool has_ifmaster() const;
  void clear_ifmaster() ;
  bool ifmaster() const;
  void set_ifmaster(bool value);

  private:
  bool _internal_ifmaster() const;
  void _internal_set_ifmaster(bool value);

  public:
  // optional uint32 heroid = 2;
  bool has_heroid() const;
  void clear_heroid() ;
  ::uint32_t heroid() const;
  void set_heroid(::uint32_t value);

  private:
  ::uint32_t _internal_heroid() const;
  void _internal_set_heroid(::uint32_t value);

  public:
  // optional uint64 guid = 3;
  bool has_guid() const;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // optional int32 pos = 4;
  bool has_pos() const;
  void clear_pos() ;
  ::int32_t pos() const;
  void set_pos(::int32_t value);

  private:
  ::int32_t _internal_pos() const;
  void _internal_set_pos(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.UserRoomInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    bool ifmaster_;
    ::uint32_t heroid_;
    ::uint64_t guid_;
    ::int32_t pos_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class UserInfo_SUserRunesRuntimeData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.UserInfo.SUserRunesRuntimeData) */ {
 public:
  inline UserInfo_SUserRunesRuntimeData() : UserInfo_SUserRunesRuntimeData(nullptr) {}
  ~UserInfo_SUserRunesRuntimeData() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UserInfo_SUserRunesRuntimeData(
      ::google::protobuf::internal::ConstantInitialized);

  inline UserInfo_SUserRunesRuntimeData(const UserInfo_SUserRunesRuntimeData& from) : UserInfo_SUserRunesRuntimeData(nullptr, from) {}
  inline UserInfo_SUserRunesRuntimeData(UserInfo_SUserRunesRuntimeData&& from) noexcept
      : UserInfo_SUserRunesRuntimeData(nullptr, std::move(from)) {}
  inline UserInfo_SUserRunesRuntimeData& operator=(const UserInfo_SUserRunesRuntimeData& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserInfo_SUserRunesRuntimeData& operator=(UserInfo_SUserRunesRuntimeData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserInfo_SUserRunesRuntimeData& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserInfo_SUserRunesRuntimeData* internal_default_instance() {
    return reinterpret_cast<const UserInfo_SUserRunesRuntimeData*>(
        &_UserInfo_SUserRunesRuntimeData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(UserInfo_SUserRunesRuntimeData& a, UserInfo_SUserRunesRuntimeData& b) { a.Swap(&b); }
  inline void Swap(UserInfo_SUserRunesRuntimeData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserInfo_SUserRunesRuntimeData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserInfo_SUserRunesRuntimeData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UserInfo_SUserRunesRuntimeData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserInfo_SUserRunesRuntimeData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UserInfo_SUserRunesRuntimeData& from) { UserInfo_SUserRunesRuntimeData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserInfo_SUserRunesRuntimeData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.UserInfo.SUserRunesRuntimeData"; }

 protected:
  explicit UserInfo_SUserRunesRuntimeData(::google::protobuf::Arena* arena);
  UserInfo_SUserRunesRuntimeData(::google::protobuf::Arena* arena, const UserInfo_SUserRunesRuntimeData& from);
  UserInfo_SUserRunesRuntimeData(::google::protobuf::Arena* arena, UserInfo_SUserRunesRuntimeData&& from) noexcept
      : UserInfo_SUserRunesRuntimeData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUn32RunesTypeIDFieldNumber = 1,
    kN16PosFieldNumber = 2,
    kN16NumFieldNumber = 3,
    kN16RemainTimesFieldNumber = 4,
  };
  // optional int32 un32RunesTypeID = 1;
  bool has_un32runestypeid() const;
  void clear_un32runestypeid() ;
  ::int32_t un32runestypeid() const;
  void set_un32runestypeid(::int32_t value);

  private:
  ::int32_t _internal_un32runestypeid() const;
  void _internal_set_un32runestypeid(::int32_t value);

  public:
  // optional int32 n16Pos = 2;
  bool has_n16pos() const;
  void clear_n16pos() ;
  ::int32_t n16pos() const;
  void set_n16pos(::int32_t value);

  private:
  ::int32_t _internal_n16pos() const;
  void _internal_set_n16pos(::int32_t value);

  public:
  // optional int32 n16Num = 3;
  bool has_n16num() const;
  void clear_n16num() ;
  ::int32_t n16num() const;
  void set_n16num(::int32_t value);

  private:
  ::int32_t _internal_n16num() const;
  void _internal_set_n16num(::int32_t value);

  public:
  // optional int32 n16RemainTimes = 4;
  bool has_n16remaintimes() const;
  void clear_n16remaintimes() ;
  ::int32_t n16remaintimes() const;
  void set_n16remaintimes(::int32_t value);

  private:
  ::int32_t _internal_n16remaintimes() const;
  void _internal_set_n16remaintimes(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.UserInfo.SUserRunesRuntimeData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t un32runestypeid_;
    ::int32_t n16pos_;
    ::int32_t n16num_;
    ::int32_t n16remaintimes_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class UserInfo_SUserDBData_SUserGuideSteps final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.UserInfo.SUserDBData.SUserGuideSteps) */ {
 public:
  inline UserInfo_SUserDBData_SUserGuideSteps() : UserInfo_SUserDBData_SUserGuideSteps(nullptr) {}
  ~UserInfo_SUserDBData_SUserGuideSteps() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UserInfo_SUserDBData_SUserGuideSteps(
      ::google::protobuf::internal::ConstantInitialized);

  inline UserInfo_SUserDBData_SUserGuideSteps(const UserInfo_SUserDBData_SUserGuideSteps& from) : UserInfo_SUserDBData_SUserGuideSteps(nullptr, from) {}
  inline UserInfo_SUserDBData_SUserGuideSteps(UserInfo_SUserDBData_SUserGuideSteps&& from) noexcept
      : UserInfo_SUserDBData_SUserGuideSteps(nullptr, std::move(from)) {}
  inline UserInfo_SUserDBData_SUserGuideSteps& operator=(const UserInfo_SUserDBData_SUserGuideSteps& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserInfo_SUserDBData_SUserGuideSteps& operator=(UserInfo_SUserDBData_SUserGuideSteps&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserInfo_SUserDBData_SUserGuideSteps& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserInfo_SUserDBData_SUserGuideSteps* internal_default_instance() {
    return reinterpret_cast<const UserInfo_SUserDBData_SUserGuideSteps*>(
        &_UserInfo_SUserDBData_SUserGuideSteps_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(UserInfo_SUserDBData_SUserGuideSteps& a, UserInfo_SUserDBData_SUserGuideSteps& b) { a.Swap(&b); }
  inline void Swap(UserInfo_SUserDBData_SUserGuideSteps* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserInfo_SUserDBData_SUserGuideSteps* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserInfo_SUserDBData_SUserGuideSteps* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UserInfo_SUserDBData_SUserGuideSteps>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserInfo_SUserDBData_SUserGuideSteps& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UserInfo_SUserDBData_SUserGuideSteps& from) { UserInfo_SUserDBData_SUserGuideSteps::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserInfo_SUserDBData_SUserGuideSteps* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.UserInfo.SUserDBData.SUserGuideSteps"; }

 protected:
  explicit UserInfo_SUserDBData_SUserGuideSteps(::google::protobuf::Arena* arena);
  UserInfo_SUserDBData_SUserGuideSteps(::google::protobuf::Arena* arena, const UserInfo_SUserDBData_SUserGuideSteps& from);
  UserInfo_SUserDBData_SUserGuideSteps(::google::protobuf::Arena* arena, UserInfo_SUserDBData_SUserGuideSteps&& from) noexcept
      : UserInfo_SUserDBData_SUserGuideSteps(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSzCSContinueGuideFieldNumber = 1,
    kSzCSNoContinueGuideFieldNumber = 2,
    kSzSSGuidesFieldNumber = 3,
  };
  // optional string szCSContinueGuide = 1;
  bool has_szcscontinueguide() const;
  void clear_szcscontinueguide() ;
  const std::string& szcscontinueguide() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_szcscontinueguide(Arg_&& arg, Args_... args);
  std::string* mutable_szcscontinueguide();
  PROTOBUF_NODISCARD std::string* release_szcscontinueguide();
  void set_allocated_szcscontinueguide(std::string* value);

  private:
  const std::string& _internal_szcscontinueguide() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_szcscontinueguide(
      const std::string& value);
  std::string* _internal_mutable_szcscontinueguide();

  public:
  // optional string szCSNoContinueGuide = 2;
  bool has_szcsnocontinueguide() const;
  void clear_szcsnocontinueguide() ;
  const std::string& szcsnocontinueguide() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_szcsnocontinueguide(Arg_&& arg, Args_... args);
  std::string* mutable_szcsnocontinueguide();
  PROTOBUF_NODISCARD std::string* release_szcsnocontinueguide();
  void set_allocated_szcsnocontinueguide(std::string* value);

  private:
  const std::string& _internal_szcsnocontinueguide() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_szcsnocontinueguide(
      const std::string& value);
  std::string* _internal_mutable_szcsnocontinueguide();

  public:
  // optional string szSSGuides = 3;
  bool has_szssguides() const;
  void clear_szssguides() ;
  const std::string& szssguides() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_szssguides(Arg_&& arg, Args_... args);
  std::string* mutable_szssguides();
  PROTOBUF_NODISCARD std::string* release_szssguides();
  void set_allocated_szssguides(std::string* value);

  private:
  const std::string& _internal_szssguides() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_szssguides(
      const std::string& value);
  std::string* _internal_mutable_szssguides();

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.UserInfo.SUserDBData.SUserGuideSteps)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      98, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr szcscontinueguide_;
    ::google::protobuf::internal::ArenaStringPtr szcsnocontinueguide_;
    ::google::protobuf::internal::ArenaStringPtr szssguides_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class SUserNetInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.SUserNetInfo) */ {
 public:
  inline SUserNetInfo() : SUserNetInfo(nullptr) {}
  ~SUserNetInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SUserNetInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline SUserNetInfo(const SUserNetInfo& from) : SUserNetInfo(nullptr, from) {}
  inline SUserNetInfo(SUserNetInfo&& from) noexcept
      : SUserNetInfo(nullptr, std::move(from)) {}
  inline SUserNetInfo& operator=(const SUserNetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SUserNetInfo& operator=(SUserNetInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SUserNetInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const SUserNetInfo* internal_default_instance() {
    return reinterpret_cast<const SUserNetInfo*>(
        &_SUserNetInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SUserNetInfo& a, SUserNetInfo& b) { a.Swap(&b); }
  inline void Swap(SUserNetInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SUserNetInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SUserNetInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SUserNetInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SUserNetInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SUserNetInfo& from) { SUserNetInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SUserNetInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.SUserNetInfo"; }

 protected:
  explicit SUserNetInfo(::google::protobuf::Arena* arena);
  SUserNetInfo(::google::protobuf::Arena* arena, const SUserNetInfo& from);
  SUserNetInfo(::google::protobuf::Arena* arena, SUserNetInfo&& from) noexcept
      : SUserNetInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kN32GSIDFieldNumber = 1,
    kN32GCNSIDFieldNumber = 2,
  };
  // optional int32 n32GSID = 1;
  bool has_n32gsid() const;
  void clear_n32gsid() ;
  ::int32_t n32gsid() const;
  void set_n32gsid(::int32_t value);

  private:
  ::int32_t _internal_n32gsid() const;
  void _internal_set_n32gsid(::int32_t value);

  public:
  // optional int32 n32GCNSID = 2;
  bool has_n32gcnsid() const;
  void clear_n32gcnsid() ;
  ::int32_t n32gcnsid() const;
  void set_n32gcnsid(::int32_t value);

  private:
  ::int32_t _internal_n32gcnsid() const;
  void _internal_set_n32gcnsid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.SUserNetInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t n32gsid_;
    ::int32_t n32gcnsid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class SSGameFuncSwitch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.SSGameFuncSwitch) */ {
 public:
  inline SSGameFuncSwitch() : SSGameFuncSwitch(nullptr) {}
  ~SSGameFuncSwitch() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SSGameFuncSwitch(
      ::google::protobuf::internal::ConstantInitialized);

  inline SSGameFuncSwitch(const SSGameFuncSwitch& from) : SSGameFuncSwitch(nullptr, from) {}
  inline SSGameFuncSwitch(SSGameFuncSwitch&& from) noexcept
      : SSGameFuncSwitch(nullptr, std::move(from)) {}
  inline SSGameFuncSwitch& operator=(const SSGameFuncSwitch& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGameFuncSwitch& operator=(SSGameFuncSwitch&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SSGameFuncSwitch& default_instance() {
    return *internal_default_instance();
  }
  static inline const SSGameFuncSwitch* internal_default_instance() {
    return reinterpret_cast<const SSGameFuncSwitch*>(
        &_SSGameFuncSwitch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SSGameFuncSwitch& a, SSGameFuncSwitch& b) { a.Swap(&b); }
  inline void Swap(SSGameFuncSwitch* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGameFuncSwitch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SSGameFuncSwitch* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SSGameFuncSwitch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SSGameFuncSwitch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SSGameFuncSwitch& from) { SSGameFuncSwitch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SSGameFuncSwitch* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.SSGameFuncSwitch"; }

 protected:
  explicit SSGameFuncSwitch(::google::protobuf::Arena* arena);
  SSGameFuncSwitch(::google::protobuf::Arena* arena, const SSGameFuncSwitch& from);
  SSGameFuncSwitch(::google::protobuf::Arena* arena, SSGameFuncSwitch&& from) noexcept
      : SSGameFuncSwitch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogWitchFieldNumber = 2,
    kGmWitchFieldNumber = 3,
    kSolderwitchFieldNumber = 4,
    kMonsterwitchFieldNumber = 5,
    kAltarsolderwitchFieldNumber = 6,
    kLogrefshtimeFieldNumber = 7,
    kMsgidFieldNumber = 1,
  };
  // optional uint32 log_witch = 2;
  bool has_log_witch() const;
  void clear_log_witch() ;
  ::uint32_t log_witch() const;
  void set_log_witch(::uint32_t value);

  private:
  ::uint32_t _internal_log_witch() const;
  void _internal_set_log_witch(::uint32_t value);

  public:
  // optional uint32 gm_witch = 3;
  bool has_gm_witch() const;
  void clear_gm_witch() ;
  ::uint32_t gm_witch() const;
  void set_gm_witch(::uint32_t value);

  private:
  ::uint32_t _internal_gm_witch() const;
  void _internal_set_gm_witch(::uint32_t value);

  public:
  // optional uint32 solderwitch = 4;
  bool has_solderwitch() const;
  void clear_solderwitch() ;
  ::uint32_t solderwitch() const;
  void set_solderwitch(::uint32_t value);

  private:
  ::uint32_t _internal_solderwitch() const;
  void _internal_set_solderwitch(::uint32_t value);

  public:
  // optional uint32 monsterwitch = 5;
  bool has_monsterwitch() const;
  void clear_monsterwitch() ;
  ::uint32_t monsterwitch() const;
  void set_monsterwitch(::uint32_t value);

  private:
  ::uint32_t _internal_monsterwitch() const;
  void _internal_set_monsterwitch(::uint32_t value);

  public:
  // optional uint32 altarsolderwitch = 6;
  bool has_altarsolderwitch() const;
  void clear_altarsolderwitch() ;
  ::uint32_t altarsolderwitch() const;
  void set_altarsolderwitch(::uint32_t value);

  private:
  ::uint32_t _internal_altarsolderwitch() const;
  void _internal_set_altarsolderwitch(::uint32_t value);

  public:
  // optional uint32 logrefshtime = 7;
  bool has_logrefshtime() const;
  void clear_logrefshtime() ;
  ::uint32_t logrefshtime() const;
  void set_logrefshtime(::uint32_t value);

  private:
  ::uint32_t _internal_logrefshtime() const;
  void _internal_set_logrefshtime(::uint32_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGameSwitch];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.SSGameFuncSwitch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t log_witch_;
    ::uint32_t gm_witch_;
    ::uint32_t solderwitch_;
    ::uint32_t monsterwitch_;
    ::uint32_t altarsolderwitch_;
    ::uint32_t logrefshtime_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class ReportSSMsg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.ReportSSMsg) */ {
 public:
  inline ReportSSMsg() : ReportSSMsg(nullptr) {}
  ~ReportSSMsg() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReportSSMsg(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReportSSMsg(const ReportSSMsg& from) : ReportSSMsg(nullptr, from) {}
  inline ReportSSMsg(ReportSSMsg&& from) noexcept
      : ReportSSMsg(nullptr, std::move(from)) {}
  inline ReportSSMsg& operator=(const ReportSSMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReportSSMsg& operator=(ReportSSMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReportSSMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReportSSMsg* internal_default_instance() {
    return reinterpret_cast<const ReportSSMsg*>(
        &_ReportSSMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ReportSSMsg& a, ReportSSMsg& b) { a.Swap(&b); }
  inline void Swap(ReportSSMsg* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReportSSMsg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReportSSMsg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ReportSSMsg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReportSSMsg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReportSSMsg& from) { ReportSSMsg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReportSSMsg* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.ReportSSMsg"; }

 protected:
  explicit ReportSSMsg(::google::protobuf::Arena* arena);
  ReportSSMsg(::google::protobuf::Arena* arena, const ReportSSMsg& from);
  ReportSSMsg(::google::protobuf::Arena* arena, ReportSSMsg&& from) noexcept
      : ReportSSMsg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOthermsgFieldNumber = 3,
    kBattleidFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // optional string othermsg = 3;
  bool has_othermsg() const;
  void clear_othermsg() ;
  const std::string& othermsg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_othermsg(Arg_&& arg, Args_... args);
  std::string* mutable_othermsg();
  PROTOBUF_NODISCARD std::string* release_othermsg();
  void set_allocated_othermsg(std::string* value);

  private:
  const std::string& _internal_othermsg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_othermsg(
      const std::string& value);
  std::string* _internal_mutable_othermsg();

  public:
  // optional uint64 battleid = 2;
  bool has_battleid() const;
  void clear_battleid() ;
  ::uint64_t battleid() const;
  void set_battleid(::uint64_t value);

  private:
  ::uint64_t _internal_battleid() const;
  void _internal_set_battleid(::uint64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_ReportSSMsg];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.ReportSSMsg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      35, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr othermsg_;
    ::uint64_t battleid_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class PingRet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.PingRet) */ {
 public:
  inline PingRet() : PingRet(nullptr) {}
  ~PingRet() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PingRet(
      ::google::protobuf::internal::ConstantInitialized);

  inline PingRet(const PingRet& from) : PingRet(nullptr, from) {}
  inline PingRet(PingRet&& from) noexcept
      : PingRet(nullptr, std::move(from)) {}
  inline PingRet& operator=(const PingRet& from) {
    CopyFrom(from);
    return *this;
  }
  inline PingRet& operator=(PingRet&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PingRet& default_instance() {
    return *internal_default_instance();
  }
  static inline const PingRet* internal_default_instance() {
    return reinterpret_cast<const PingRet*>(
        &_PingRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(PingRet& a, PingRet& b) { a.Swap(&b); }
  inline void Swap(PingRet* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PingRet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PingRet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PingRet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PingRet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PingRet& from) { PingRet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PingRet* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.PingRet"; }

 protected:
  explicit PingRet(::google::protobuf::Arena* arena);
  PingRet(::google::protobuf::Arena* arena, const PingRet& from);
  PingRet(::google::protobuf::Arena* arena, PingRet&& from) noexcept
      : PingRet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // optional int64 time = 2;
  bool has_time() const;
  void clear_time() ;
  ::int64_t time() const;
  void set_time(::int64_t value);

  private:
  ::int64_t _internal_time() const;
  void _internal_set_time(::int64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskPingRet];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.PingRet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t time_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyWildMonsterCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyWildMonsterCfgList) */ {
 public:
  inline NotifyWildMonsterCfgList() : NotifyWildMonsterCfgList(nullptr) {}
  ~NotifyWildMonsterCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyWildMonsterCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyWildMonsterCfgList(const NotifyWildMonsterCfgList& from) : NotifyWildMonsterCfgList(nullptr, from) {}
  inline NotifyWildMonsterCfgList(NotifyWildMonsterCfgList&& from) noexcept
      : NotifyWildMonsterCfgList(nullptr, std::move(from)) {}
  inline NotifyWildMonsterCfgList& operator=(const NotifyWildMonsterCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyWildMonsterCfgList& operator=(NotifyWildMonsterCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyWildMonsterCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyWildMonsterCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyWildMonsterCfgList*>(
        &_NotifyWildMonsterCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(NotifyWildMonsterCfgList& a, NotifyWildMonsterCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyWildMonsterCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyWildMonsterCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyWildMonsterCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyWildMonsterCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyWildMonsterCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyWildMonsterCfgList& from) { NotifyWildMonsterCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyWildMonsterCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyWildMonsterCfgList"; }

 protected:
  explicit NotifyWildMonsterCfgList(::google::protobuf::Arena* arena);
  NotifyWildMonsterCfgList(::google::protobuf::Arena* arena, const NotifyWildMonsterCfgList& from);
  NotifyWildMonsterCfgList(::google::protobuf::Arena* arena, NotifyWildMonsterCfgList&& from) noexcept
      : NotifyWildMonsterCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyWildMonsterCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyWildMonsterCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      43, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyUserReconnectGame final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyUserReconnectGame) */ {
 public:
  inline NotifyUserReconnectGame() : NotifyUserReconnectGame(nullptr) {}
  ~NotifyUserReconnectGame() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyUserReconnectGame(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyUserReconnectGame(const NotifyUserReconnectGame& from) : NotifyUserReconnectGame(nullptr, from) {}
  inline NotifyUserReconnectGame(NotifyUserReconnectGame&& from) noexcept
      : NotifyUserReconnectGame(nullptr, std::move(from)) {}
  inline NotifyUserReconnectGame& operator=(const NotifyUserReconnectGame& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyUserReconnectGame& operator=(NotifyUserReconnectGame&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyUserReconnectGame& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyUserReconnectGame* internal_default_instance() {
    return reinterpret_cast<const NotifyUserReconnectGame*>(
        &_NotifyUserReconnectGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(NotifyUserReconnectGame& a, NotifyUserReconnectGame& b) { a.Swap(&b); }
  inline void Swap(NotifyUserReconnectGame* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyUserReconnectGame* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyUserReconnectGame* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyUserReconnectGame>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyUserReconnectGame& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyUserReconnectGame& from) { NotifyUserReconnectGame::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyUserReconnectGame* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyUserReconnectGame"; }

 protected:
  explicit NotifyUserReconnectGame(::google::protobuf::Arena* arena);
  NotifyUserReconnectGame(::google::protobuf::Arena* arena, const NotifyUserReconnectGame& from);
  NotifyUserReconnectGame(::google::protobuf::Arena* arena, NotifyUserReconnectGame&& from) noexcept
      : NotifyUserReconnectGame(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGuidFieldNumber = 2,
    kBattleidFieldNumber = 3,
    kMsgidFieldNumber = 1,
  };
  // optional uint64 guid = 2;
  bool has_guid() const;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // optional uint64 battleid = 3;
  bool has_battleid() const;
  void clear_battleid() ;
  ::uint64_t battleid() const;
  void set_battleid(::uint64_t value);

  private:
  ::uint64_t _internal_battleid() const;
  void _internal_set_battleid(::uint64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserReconnectGame];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyUserReconnectGame)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t guid_;
    ::uint64_t battleid_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyUserOffline final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyUserOffline) */ {
 public:
  inline NotifyUserOffline() : NotifyUserOffline(nullptr) {}
  ~NotifyUserOffline() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyUserOffline(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyUserOffline(const NotifyUserOffline& from) : NotifyUserOffline(nullptr, from) {}
  inline NotifyUserOffline(NotifyUserOffline&& from) noexcept
      : NotifyUserOffline(nullptr, std::move(from)) {}
  inline NotifyUserOffline& operator=(const NotifyUserOffline& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyUserOffline& operator=(NotifyUserOffline&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyUserOffline& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyUserOffline* internal_default_instance() {
    return reinterpret_cast<const NotifyUserOffline*>(
        &_NotifyUserOffline_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(NotifyUserOffline& a, NotifyUserOffline& b) { a.Swap(&b); }
  inline void Swap(NotifyUserOffline* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyUserOffline* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyUserOffline* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyUserOffline>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyUserOffline& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyUserOffline& from) { NotifyUserOffline::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyUserOffline* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyUserOffline"; }

 protected:
  explicit NotifyUserOffline(::google::protobuf::Arena* arena);
  NotifyUserOffline(::google::protobuf::Arena* arena, const NotifyUserOffline& from);
  NotifyUserOffline(::google::protobuf::Arena* arena, NotifyUserOffline&& from) noexcept
      : NotifyUserOffline(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBattleidFieldNumber = 2,
    kUserguidFieldNumber = 3,
    kMsgidFieldNumber = 1,
  };
  // optional uint64 battleid = 2;
  bool has_battleid() const;
  void clear_battleid() ;
  ::uint64_t battleid() const;
  void set_battleid(::uint64_t value);

  private:
  ::uint64_t _internal_battleid() const;
  void _internal_set_battleid(::uint64_t value);

  public:
  // optional uint64 userguid = 3;
  bool has_userguid() const;
  void clear_userguid() ;
  ::uint64_t userguid() const;
  void set_userguid(::uint64_t value);

  private:
  ::uint64_t _internal_userguid() const;
  void _internal_set_userguid(::uint64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOffline];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyUserOffline)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t battleid_;
    ::uint64_t userguid_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyUserInfoChange final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyUserInfoChange) */ {
 public:
  inline NotifyUserInfoChange() : NotifyUserInfoChange(nullptr) {}
  ~NotifyUserInfoChange() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyUserInfoChange(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyUserInfoChange(const NotifyUserInfoChange& from) : NotifyUserInfoChange(nullptr, from) {}
  inline NotifyUserInfoChange(NotifyUserInfoChange&& from) noexcept
      : NotifyUserInfoChange(nullptr, std::move(from)) {}
  inline NotifyUserInfoChange& operator=(const NotifyUserInfoChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyUserInfoChange& operator=(NotifyUserInfoChange&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyUserInfoChange& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyUserInfoChange* internal_default_instance() {
    return reinterpret_cast<const NotifyUserInfoChange*>(
        &_NotifyUserInfoChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(NotifyUserInfoChange& a, NotifyUserInfoChange& b) { a.Swap(&b); }
  inline void Swap(NotifyUserInfoChange* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyUserInfoChange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyUserInfoChange* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyUserInfoChange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyUserInfoChange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyUserInfoChange& from) { NotifyUserInfoChange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyUserInfoChange* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyUserInfoChange"; }

 protected:
  explicit NotifyUserInfoChange(::google::protobuf::Arena* arena);
  NotifyUserInfoChange(::google::protobuf::Arena* arena, const NotifyUserInfoChange& from);
  NotifyUserInfoChange(::google::protobuf::Arena* arena, NotifyUserInfoChange&& from) noexcept
      : NotifyUserInfoChange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGuidFieldNumber = 2,
    kGoldFieldNumber = 3,
    kMsgidFieldNumber = 1,
  };
  // optional uint64 guid = 2;
  bool has_guid() const;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // optional int64 gold = 3;
  bool has_gold() const;
  void clear_gold() ;
  ::int64_t gold() const;
  void set_gold(::int64_t value);

  private:
  ::int64_t _internal_gold() const;
  void _internal_set_gold(::int64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserInfoChange];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyUserInfoChange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t guid_;
    ::int64_t gold_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySkillModelSwitchCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySkillModelSwitchCfgList) */ {
 public:
  inline NotifySkillModelSwitchCfgList() : NotifySkillModelSwitchCfgList(nullptr) {}
  ~NotifySkillModelSwitchCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySkillModelSwitchCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySkillModelSwitchCfgList(const NotifySkillModelSwitchCfgList& from) : NotifySkillModelSwitchCfgList(nullptr, from) {}
  inline NotifySkillModelSwitchCfgList(NotifySkillModelSwitchCfgList&& from) noexcept
      : NotifySkillModelSwitchCfgList(nullptr, std::move(from)) {}
  inline NotifySkillModelSwitchCfgList& operator=(const NotifySkillModelSwitchCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySkillModelSwitchCfgList& operator=(NotifySkillModelSwitchCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySkillModelSwitchCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySkillModelSwitchCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifySkillModelSwitchCfgList*>(
        &_NotifySkillModelSwitchCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(NotifySkillModelSwitchCfgList& a, NotifySkillModelSwitchCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifySkillModelSwitchCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySkillModelSwitchCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySkillModelSwitchCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySkillModelSwitchCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySkillModelSwitchCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySkillModelSwitchCfgList& from) { NotifySkillModelSwitchCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySkillModelSwitchCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySkillModelSwitchCfgList"; }

 protected:
  explicit NotifySkillModelSwitchCfgList(::google::protobuf::Arena* arena);
  NotifySkillModelSwitchCfgList(::google::protobuf::Arena* arena, const NotifySkillModelSwitchCfgList& from);
  NotifySkillModelSwitchCfgList(::google::protobuf::Arena* arena, NotifySkillModelSwitchCfgList&& from) noexcept
      : NotifySkillModelSwitchCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSwitchCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySkillModelSwitchCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySkillModelSummonCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySkillModelSummonCfgList) */ {
 public:
  inline NotifySkillModelSummonCfgList() : NotifySkillModelSummonCfgList(nullptr) {}
  ~NotifySkillModelSummonCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySkillModelSummonCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySkillModelSummonCfgList(const NotifySkillModelSummonCfgList& from) : NotifySkillModelSummonCfgList(nullptr, from) {}
  inline NotifySkillModelSummonCfgList(NotifySkillModelSummonCfgList&& from) noexcept
      : NotifySkillModelSummonCfgList(nullptr, std::move(from)) {}
  inline NotifySkillModelSummonCfgList& operator=(const NotifySkillModelSummonCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySkillModelSummonCfgList& operator=(NotifySkillModelSummonCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySkillModelSummonCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySkillModelSummonCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifySkillModelSummonCfgList*>(
        &_NotifySkillModelSummonCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(NotifySkillModelSummonCfgList& a, NotifySkillModelSummonCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifySkillModelSummonCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySkillModelSummonCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySkillModelSummonCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySkillModelSummonCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySkillModelSummonCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySkillModelSummonCfgList& from) { NotifySkillModelSummonCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySkillModelSummonCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySkillModelSummonCfgList"; }

 protected:
  explicit NotifySkillModelSummonCfgList(::google::protobuf::Arena* arena);
  NotifySkillModelSummonCfgList(::google::protobuf::Arena* arena, const NotifySkillModelSummonCfgList& from);
  NotifySkillModelSummonCfgList(::google::protobuf::Arena* arena, NotifySkillModelSummonCfgList&& from) noexcept
      : NotifySkillModelSummonCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSummonCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySkillModelSummonCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySkillModelRangeCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySkillModelRangeCfgList) */ {
 public:
  inline NotifySkillModelRangeCfgList() : NotifySkillModelRangeCfgList(nullptr) {}
  ~NotifySkillModelRangeCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySkillModelRangeCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySkillModelRangeCfgList(const NotifySkillModelRangeCfgList& from) : NotifySkillModelRangeCfgList(nullptr, from) {}
  inline NotifySkillModelRangeCfgList(NotifySkillModelRangeCfgList&& from) noexcept
      : NotifySkillModelRangeCfgList(nullptr, std::move(from)) {}
  inline NotifySkillModelRangeCfgList& operator=(const NotifySkillModelRangeCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySkillModelRangeCfgList& operator=(NotifySkillModelRangeCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySkillModelRangeCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySkillModelRangeCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifySkillModelRangeCfgList*>(
        &_NotifySkillModelRangeCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(NotifySkillModelRangeCfgList& a, NotifySkillModelRangeCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifySkillModelRangeCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySkillModelRangeCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySkillModelRangeCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySkillModelRangeCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySkillModelRangeCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySkillModelRangeCfgList& from) { NotifySkillModelRangeCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySkillModelRangeCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySkillModelRangeCfgList"; }

 protected:
  explicit NotifySkillModelRangeCfgList(::google::protobuf::Arena* arena);
  NotifySkillModelRangeCfgList(::google::protobuf::Arena* arena, const NotifySkillModelRangeCfgList& from);
  NotifySkillModelRangeCfgList(::google::protobuf::Arena* arena, NotifySkillModelRangeCfgList&& from) noexcept
      : NotifySkillModelRangeCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelRangeCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySkillModelRangeCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySkillModelPurificationCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySkillModelPurificationCfgList) */ {
 public:
  inline NotifySkillModelPurificationCfgList() : NotifySkillModelPurificationCfgList(nullptr) {}
  ~NotifySkillModelPurificationCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySkillModelPurificationCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySkillModelPurificationCfgList(const NotifySkillModelPurificationCfgList& from) : NotifySkillModelPurificationCfgList(nullptr, from) {}
  inline NotifySkillModelPurificationCfgList(NotifySkillModelPurificationCfgList&& from) noexcept
      : NotifySkillModelPurificationCfgList(nullptr, std::move(from)) {}
  inline NotifySkillModelPurificationCfgList& operator=(const NotifySkillModelPurificationCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySkillModelPurificationCfgList& operator=(NotifySkillModelPurificationCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySkillModelPurificationCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySkillModelPurificationCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifySkillModelPurificationCfgList*>(
        &_NotifySkillModelPurificationCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(NotifySkillModelPurificationCfgList& a, NotifySkillModelPurificationCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifySkillModelPurificationCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySkillModelPurificationCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySkillModelPurificationCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySkillModelPurificationCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySkillModelPurificationCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySkillModelPurificationCfgList& from) { NotifySkillModelPurificationCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySkillModelPurificationCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySkillModelPurificationCfgList"; }

 protected:
  explicit NotifySkillModelPurificationCfgList(::google::protobuf::Arena* arena);
  NotifySkillModelPurificationCfgList(::google::protobuf::Arena* arena, const NotifySkillModelPurificationCfgList& from);
  NotifySkillModelPurificationCfgList(::google::protobuf::Arena* arena, NotifySkillModelPurificationCfgList&& from) noexcept
      : NotifySkillModelPurificationCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelPurificationCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySkillModelPurificationCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySkillModelMoveCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySkillModelMoveCfgList) */ {
 public:
  inline NotifySkillModelMoveCfgList() : NotifySkillModelMoveCfgList(nullptr) {}
  ~NotifySkillModelMoveCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySkillModelMoveCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySkillModelMoveCfgList(const NotifySkillModelMoveCfgList& from) : NotifySkillModelMoveCfgList(nullptr, from) {}
  inline NotifySkillModelMoveCfgList(NotifySkillModelMoveCfgList&& from) noexcept
      : NotifySkillModelMoveCfgList(nullptr, std::move(from)) {}
  inline NotifySkillModelMoveCfgList& operator=(const NotifySkillModelMoveCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySkillModelMoveCfgList& operator=(NotifySkillModelMoveCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySkillModelMoveCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySkillModelMoveCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifySkillModelMoveCfgList*>(
        &_NotifySkillModelMoveCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(NotifySkillModelMoveCfgList& a, NotifySkillModelMoveCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifySkillModelMoveCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySkillModelMoveCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySkillModelMoveCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySkillModelMoveCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySkillModelMoveCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySkillModelMoveCfgList& from) { NotifySkillModelMoveCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySkillModelMoveCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySkillModelMoveCfgList"; }

 protected:
  explicit NotifySkillModelMoveCfgList(::google::protobuf::Arena* arena);
  NotifySkillModelMoveCfgList(::google::protobuf::Arena* arena, const NotifySkillModelMoveCfgList& from);
  NotifySkillModelMoveCfgList(::google::protobuf::Arena* arena, NotifySkillModelMoveCfgList&& from) noexcept
      : NotifySkillModelMoveCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelMoveCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySkillModelMoveCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      46, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySkillModelLinkCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySkillModelLinkCfgList) */ {
 public:
  inline NotifySkillModelLinkCfgList() : NotifySkillModelLinkCfgList(nullptr) {}
  ~NotifySkillModelLinkCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySkillModelLinkCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySkillModelLinkCfgList(const NotifySkillModelLinkCfgList& from) : NotifySkillModelLinkCfgList(nullptr, from) {}
  inline NotifySkillModelLinkCfgList(NotifySkillModelLinkCfgList&& from) noexcept
      : NotifySkillModelLinkCfgList(nullptr, std::move(from)) {}
  inline NotifySkillModelLinkCfgList& operator=(const NotifySkillModelLinkCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySkillModelLinkCfgList& operator=(NotifySkillModelLinkCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySkillModelLinkCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySkillModelLinkCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifySkillModelLinkCfgList*>(
        &_NotifySkillModelLinkCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(NotifySkillModelLinkCfgList& a, NotifySkillModelLinkCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifySkillModelLinkCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySkillModelLinkCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySkillModelLinkCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySkillModelLinkCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySkillModelLinkCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySkillModelLinkCfgList& from) { NotifySkillModelLinkCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySkillModelLinkCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySkillModelLinkCfgList"; }

 protected:
  explicit NotifySkillModelLinkCfgList(::google::protobuf::Arena* arena);
  NotifySkillModelLinkCfgList(::google::protobuf::Arena* arena, const NotifySkillModelLinkCfgList& from);
  NotifySkillModelLinkCfgList(::google::protobuf::Arena* arena, NotifySkillModelLinkCfgList&& from) noexcept
      : NotifySkillModelLinkCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLinkCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySkillModelLinkCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      46, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySkillModelLeadingCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySkillModelLeadingCfgList) */ {
 public:
  inline NotifySkillModelLeadingCfgList() : NotifySkillModelLeadingCfgList(nullptr) {}
  ~NotifySkillModelLeadingCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySkillModelLeadingCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySkillModelLeadingCfgList(const NotifySkillModelLeadingCfgList& from) : NotifySkillModelLeadingCfgList(nullptr, from) {}
  inline NotifySkillModelLeadingCfgList(NotifySkillModelLeadingCfgList&& from) noexcept
      : NotifySkillModelLeadingCfgList(nullptr, std::move(from)) {}
  inline NotifySkillModelLeadingCfgList& operator=(const NotifySkillModelLeadingCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySkillModelLeadingCfgList& operator=(NotifySkillModelLeadingCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySkillModelLeadingCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySkillModelLeadingCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifySkillModelLeadingCfgList*>(
        &_NotifySkillModelLeadingCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(NotifySkillModelLeadingCfgList& a, NotifySkillModelLeadingCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifySkillModelLeadingCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySkillModelLeadingCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySkillModelLeadingCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySkillModelLeadingCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySkillModelLeadingCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySkillModelLeadingCfgList& from) { NotifySkillModelLeadingCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySkillModelLeadingCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySkillModelLeadingCfgList"; }

 protected:
  explicit NotifySkillModelLeadingCfgList(::google::protobuf::Arena* arena);
  NotifySkillModelLeadingCfgList(::google::protobuf::Arena* arena, const NotifySkillModelLeadingCfgList& from);
  NotifySkillModelLeadingCfgList(::google::protobuf::Arena* arena, NotifySkillModelLeadingCfgList&& from) noexcept
      : NotifySkillModelLeadingCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLeadingCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySkillModelLeadingCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySkillModelEmitCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySkillModelEmitCfgList) */ {
 public:
  inline NotifySkillModelEmitCfgList() : NotifySkillModelEmitCfgList(nullptr) {}
  ~NotifySkillModelEmitCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySkillModelEmitCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySkillModelEmitCfgList(const NotifySkillModelEmitCfgList& from) : NotifySkillModelEmitCfgList(nullptr, from) {}
  inline NotifySkillModelEmitCfgList(NotifySkillModelEmitCfgList&& from) noexcept
      : NotifySkillModelEmitCfgList(nullptr, std::move(from)) {}
  inline NotifySkillModelEmitCfgList& operator=(const NotifySkillModelEmitCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySkillModelEmitCfgList& operator=(NotifySkillModelEmitCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySkillModelEmitCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySkillModelEmitCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifySkillModelEmitCfgList*>(
        &_NotifySkillModelEmitCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(NotifySkillModelEmitCfgList& a, NotifySkillModelEmitCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifySkillModelEmitCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySkillModelEmitCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySkillModelEmitCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySkillModelEmitCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySkillModelEmitCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySkillModelEmitCfgList& from) { NotifySkillModelEmitCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySkillModelEmitCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySkillModelEmitCfgList"; }

 protected:
  explicit NotifySkillModelEmitCfgList(::google::protobuf::Arena* arena);
  NotifySkillModelEmitCfgList(::google::protobuf::Arena* arena, const NotifySkillModelEmitCfgList& from);
  NotifySkillModelEmitCfgList(::google::protobuf::Arena* arena, NotifySkillModelEmitCfgList&& from) noexcept
      : NotifySkillModelEmitCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelEmitCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySkillModelEmitCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      46, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySkillModelBufCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySkillModelBufCfgList) */ {
 public:
  inline NotifySkillModelBufCfgList() : NotifySkillModelBufCfgList(nullptr) {}
  ~NotifySkillModelBufCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySkillModelBufCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySkillModelBufCfgList(const NotifySkillModelBufCfgList& from) : NotifySkillModelBufCfgList(nullptr, from) {}
  inline NotifySkillModelBufCfgList(NotifySkillModelBufCfgList&& from) noexcept
      : NotifySkillModelBufCfgList(nullptr, std::move(from)) {}
  inline NotifySkillModelBufCfgList& operator=(const NotifySkillModelBufCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySkillModelBufCfgList& operator=(NotifySkillModelBufCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySkillModelBufCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySkillModelBufCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifySkillModelBufCfgList*>(
        &_NotifySkillModelBufCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(NotifySkillModelBufCfgList& a, NotifySkillModelBufCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifySkillModelBufCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySkillModelBufCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySkillModelBufCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySkillModelBufCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySkillModelBufCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySkillModelBufCfgList& from) { NotifySkillModelBufCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySkillModelBufCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySkillModelBufCfgList"; }

 protected:
  explicit NotifySkillModelBufCfgList(::google::protobuf::Arena* arena);
  NotifySkillModelBufCfgList(::google::protobuf::Arena* arena, const NotifySkillModelBufCfgList& from);
  NotifySkillModelBufCfgList(::google::protobuf::Arena* arena, NotifySkillModelBufCfgList&& from) noexcept
      : NotifySkillModelBufCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelBufCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySkillModelBufCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySkillModelAccountCfgCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySkillModelAccountCfgCfgList) */ {
 public:
  inline NotifySkillModelAccountCfgCfgList() : NotifySkillModelAccountCfgCfgList(nullptr) {}
  ~NotifySkillModelAccountCfgCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySkillModelAccountCfgCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySkillModelAccountCfgCfgList(const NotifySkillModelAccountCfgCfgList& from) : NotifySkillModelAccountCfgCfgList(nullptr, from) {}
  inline NotifySkillModelAccountCfgCfgList(NotifySkillModelAccountCfgCfgList&& from) noexcept
      : NotifySkillModelAccountCfgCfgList(nullptr, std::move(from)) {}
  inline NotifySkillModelAccountCfgCfgList& operator=(const NotifySkillModelAccountCfgCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySkillModelAccountCfgCfgList& operator=(NotifySkillModelAccountCfgCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySkillModelAccountCfgCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySkillModelAccountCfgCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifySkillModelAccountCfgCfgList*>(
        &_NotifySkillModelAccountCfgCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(NotifySkillModelAccountCfgCfgList& a, NotifySkillModelAccountCfgCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifySkillModelAccountCfgCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySkillModelAccountCfgCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySkillModelAccountCfgCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySkillModelAccountCfgCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySkillModelAccountCfgCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySkillModelAccountCfgCfgList& from) { NotifySkillModelAccountCfgCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySkillModelAccountCfgCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySkillModelAccountCfgCfgList"; }

 protected:
  explicit NotifySkillModelAccountCfgCfgList(::google::protobuf::Arena* arena);
  NotifySkillModelAccountCfgCfgList(::google::protobuf::Arena* arena, const NotifySkillModelAccountCfgCfgList& from);
  NotifySkillModelAccountCfgCfgList(::google::protobuf::Arena* arena, NotifySkillModelAccountCfgCfgList&& from) noexcept
      : NotifySkillModelAccountCfgCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelAccountCfgCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySkillModelAccountCfgCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySkillCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySkillCfgList) */ {
 public:
  inline NotifySkillCfgList() : NotifySkillCfgList(nullptr) {}
  ~NotifySkillCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySkillCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySkillCfgList(const NotifySkillCfgList& from) : NotifySkillCfgList(nullptr, from) {}
  inline NotifySkillCfgList(NotifySkillCfgList&& from) noexcept
      : NotifySkillCfgList(nullptr, std::move(from)) {}
  inline NotifySkillCfgList& operator=(const NotifySkillCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySkillCfgList& operator=(NotifySkillCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySkillCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySkillCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifySkillCfgList*>(
        &_NotifySkillCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(NotifySkillCfgList& a, NotifySkillCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifySkillCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySkillCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySkillCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySkillCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySkillCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySkillCfgList& from) { NotifySkillCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySkillCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySkillCfgList"; }

 protected:
  explicit NotifySkillCfgList(::google::protobuf::Arena* arena);
  NotifySkillCfgList(::google::protobuf::Arena* arena, const NotifySkillCfgList& from);
  NotifySkillCfgList(::google::protobuf::Arena* arena, NotifySkillCfgList&& from) noexcept
      : NotifySkillCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // optional int64 time = 2;
  bool has_time() const;
  void clear_time() ;
  ::int64_t time() const;
  void set_time(::int64_t value);

  private:
  ::int64_t _internal_time() const;
  void _internal_set_time(::int64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySkillCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t time_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyShopCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyShopCfgList) */ {
 public:
  inline NotifyShopCfgList() : NotifyShopCfgList(nullptr) {}
  ~NotifyShopCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyShopCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyShopCfgList(const NotifyShopCfgList& from) : NotifyShopCfgList(nullptr, from) {}
  inline NotifyShopCfgList(NotifyShopCfgList&& from) noexcept
      : NotifyShopCfgList(nullptr, std::move(from)) {}
  inline NotifyShopCfgList& operator=(const NotifyShopCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyShopCfgList& operator=(NotifyShopCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyShopCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyShopCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyShopCfgList*>(
        &_NotifyShopCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(NotifyShopCfgList& a, NotifyShopCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyShopCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyShopCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyShopCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyShopCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyShopCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyShopCfgList& from) { NotifyShopCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyShopCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyShopCfgList"; }

 protected:
  explicit NotifyShopCfgList(::google::protobuf::Arena* arena);
  NotifyShopCfgList(::google::protobuf::Arena* arena, const NotifyShopCfgList& from);
  NotifyShopCfgList(::google::protobuf::Arena* arena, NotifyShopCfgList&& from) noexcept
      : NotifyShopCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyShopCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyShopCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      36, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifySSGuideBattleEnd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifySSGuideBattleEnd) */ {
 public:
  inline NotifySSGuideBattleEnd() : NotifySSGuideBattleEnd(nullptr) {}
  ~NotifySSGuideBattleEnd() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySSGuideBattleEnd(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySSGuideBattleEnd(const NotifySSGuideBattleEnd& from) : NotifySSGuideBattleEnd(nullptr, from) {}
  inline NotifySSGuideBattleEnd(NotifySSGuideBattleEnd&& from) noexcept
      : NotifySSGuideBattleEnd(nullptr, std::move(from)) {}
  inline NotifySSGuideBattleEnd& operator=(const NotifySSGuideBattleEnd& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySSGuideBattleEnd& operator=(NotifySSGuideBattleEnd&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySSGuideBattleEnd& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySSGuideBattleEnd* internal_default_instance() {
    return reinterpret_cast<const NotifySSGuideBattleEnd*>(
        &_NotifySSGuideBattleEnd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(NotifySSGuideBattleEnd& a, NotifySSGuideBattleEnd& b) { a.Swap(&b); }
  inline void Swap(NotifySSGuideBattleEnd* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySSGuideBattleEnd* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySSGuideBattleEnd* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifySSGuideBattleEnd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySSGuideBattleEnd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySSGuideBattleEnd& from) { NotifySSGuideBattleEnd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifySSGuideBattleEnd* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifySSGuideBattleEnd"; }

 protected:
  explicit NotifySSGuideBattleEnd(::google::protobuf::Arena* arena);
  NotifySSGuideBattleEnd(::google::protobuf::Arena* arena, const NotifySSGuideBattleEnd& from);
  NotifySSGuideBattleEnd(::google::protobuf::Arena* arena, NotifySSGuideBattleEnd&& from) noexcept
      : NotifySSGuideBattleEnd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBattleidFieldNumber = 2,
    kGuidFieldNumber = 3,
    kMsgidFieldNumber = 1,
  };
  // optional uint64 battleid = 2;
  bool has_battleid() const;
  void clear_battleid() ;
  ::uint64_t battleid() const;
  void set_battleid(::uint64_t value);

  private:
  ::uint64_t _internal_battleid() const;
  void _internal_set_battleid(::uint64_t value);

  public:
  // optional uint64 guid = 3;
  bool has_guid() const;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGuideBattleEnd];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifySSGuideBattleEnd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t battleid_;
    ::uint64_t guid_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyRunesSlotCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyRunesSlotCfgList) */ {
 public:
  inline NotifyRunesSlotCfgList() : NotifyRunesSlotCfgList(nullptr) {}
  ~NotifyRunesSlotCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyRunesSlotCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyRunesSlotCfgList(const NotifyRunesSlotCfgList& from) : NotifyRunesSlotCfgList(nullptr, from) {}
  inline NotifyRunesSlotCfgList(NotifyRunesSlotCfgList&& from) noexcept
      : NotifyRunesSlotCfgList(nullptr, std::move(from)) {}
  inline NotifyRunesSlotCfgList& operator=(const NotifyRunesSlotCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyRunesSlotCfgList& operator=(NotifyRunesSlotCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyRunesSlotCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyRunesSlotCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyRunesSlotCfgList*>(
        &_NotifyRunesSlotCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(NotifyRunesSlotCfgList& a, NotifyRunesSlotCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyRunesSlotCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyRunesSlotCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyRunesSlotCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyRunesSlotCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyRunesSlotCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyRunesSlotCfgList& from) { NotifyRunesSlotCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyRunesSlotCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyRunesSlotCfgList"; }

 protected:
  explicit NotifyRunesSlotCfgList(::google::protobuf::Arena* arena);
  NotifyRunesSlotCfgList(::google::protobuf::Arena* arena, const NotifyRunesSlotCfgList& from);
  NotifyRunesSlotCfgList(::google::protobuf::Arena* arena, NotifyRunesSlotCfgList&& from) noexcept
      : NotifyRunesSlotCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesSlotCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyRunesSlotCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyRunesCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyRunesCfgList) */ {
 public:
  inline NotifyRunesCfgList() : NotifyRunesCfgList(nullptr) {}
  ~NotifyRunesCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyRunesCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyRunesCfgList(const NotifyRunesCfgList& from) : NotifyRunesCfgList(nullptr, from) {}
  inline NotifyRunesCfgList(NotifyRunesCfgList&& from) noexcept
      : NotifyRunesCfgList(nullptr, std::move(from)) {}
  inline NotifyRunesCfgList& operator=(const NotifyRunesCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyRunesCfgList& operator=(NotifyRunesCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyRunesCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyRunesCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyRunesCfgList*>(
        &_NotifyRunesCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(NotifyRunesCfgList& a, NotifyRunesCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyRunesCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyRunesCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyRunesCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyRunesCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyRunesCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyRunesCfgList& from) { NotifyRunesCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyRunesCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyRunesCfgList"; }

 protected:
  explicit NotifyRunesCfgList(::google::protobuf::Arena* arena);
  NotifyRunesCfgList(::google::protobuf::Arena* arena, const NotifyRunesCfgList& from);
  NotifyRunesCfgList(::google::protobuf::Arena* arena, NotifyRunesCfgList&& from) noexcept
      : NotifyRunesCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyRunesCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      37, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyRobotAIPathCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyRobotAIPathCfgList) */ {
 public:
  inline NotifyRobotAIPathCfgList() : NotifyRobotAIPathCfgList(nullptr) {}
  ~NotifyRobotAIPathCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyRobotAIPathCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyRobotAIPathCfgList(const NotifyRobotAIPathCfgList& from) : NotifyRobotAIPathCfgList(nullptr, from) {}
  inline NotifyRobotAIPathCfgList(NotifyRobotAIPathCfgList&& from) noexcept
      : NotifyRobotAIPathCfgList(nullptr, std::move(from)) {}
  inline NotifyRobotAIPathCfgList& operator=(const NotifyRobotAIPathCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyRobotAIPathCfgList& operator=(NotifyRobotAIPathCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyRobotAIPathCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyRobotAIPathCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyRobotAIPathCfgList*>(
        &_NotifyRobotAIPathCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(NotifyRobotAIPathCfgList& a, NotifyRobotAIPathCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyRobotAIPathCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyRobotAIPathCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyRobotAIPathCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyRobotAIPathCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyRobotAIPathCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyRobotAIPathCfgList& from) { NotifyRobotAIPathCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyRobotAIPathCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyRobotAIPathCfgList"; }

 protected:
  explicit NotifyRobotAIPathCfgList(::google::protobuf::Arena* arena);
  NotifyRobotAIPathCfgList(::google::protobuf::Arena* arena, const NotifyRobotAIPathCfgList& from);
  NotifyRobotAIPathCfgList(::google::protobuf::Arena* arena, NotifyRobotAIPathCfgList&& from) noexcept
      : NotifyRobotAIPathCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAIPathCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyRobotAIPathCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      43, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyRobotAICfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyRobotAICfgList) */ {
 public:
  inline NotifyRobotAICfgList() : NotifyRobotAICfgList(nullptr) {}
  ~NotifyRobotAICfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyRobotAICfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyRobotAICfgList(const NotifyRobotAICfgList& from) : NotifyRobotAICfgList(nullptr, from) {}
  inline NotifyRobotAICfgList(NotifyRobotAICfgList&& from) noexcept
      : NotifyRobotAICfgList(nullptr, std::move(from)) {}
  inline NotifyRobotAICfgList& operator=(const NotifyRobotAICfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyRobotAICfgList& operator=(NotifyRobotAICfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyRobotAICfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyRobotAICfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyRobotAICfgList*>(
        &_NotifyRobotAICfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(NotifyRobotAICfgList& a, NotifyRobotAICfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyRobotAICfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyRobotAICfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyRobotAICfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyRobotAICfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyRobotAICfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyRobotAICfgList& from) { NotifyRobotAICfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyRobotAICfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyRobotAICfgList"; }

 protected:
  explicit NotifyRobotAICfgList(::google::protobuf::Arena* arena);
  NotifyRobotAICfgList(::google::protobuf::Arena* arena, const NotifyRobotAICfgList& from);
  NotifyRobotAICfgList(::google::protobuf::Arena* arena, NotifyRobotAICfgList&& from) noexcept
      : NotifyRobotAICfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAICfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyRobotAICfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      39, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyPublicLuaStr final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyPublicLuaStr) */ {
 public:
  inline NotifyPublicLuaStr() : NotifyPublicLuaStr(nullptr) {}
  ~NotifyPublicLuaStr() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyPublicLuaStr(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyPublicLuaStr(const NotifyPublicLuaStr& from) : NotifyPublicLuaStr(nullptr, from) {}
  inline NotifyPublicLuaStr(NotifyPublicLuaStr&& from) noexcept
      : NotifyPublicLuaStr(nullptr, std::move(from)) {}
  inline NotifyPublicLuaStr& operator=(const NotifyPublicLuaStr& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyPublicLuaStr& operator=(NotifyPublicLuaStr&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyPublicLuaStr& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyPublicLuaStr* internal_default_instance() {
    return reinterpret_cast<const NotifyPublicLuaStr*>(
        &_NotifyPublicLuaStr_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(NotifyPublicLuaStr& a, NotifyPublicLuaStr& b) { a.Swap(&b); }
  inline void Swap(NotifyPublicLuaStr* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyPublicLuaStr* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyPublicLuaStr* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyPublicLuaStr>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyPublicLuaStr& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyPublicLuaStr& from) { NotifyPublicLuaStr::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyPublicLuaStr* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyPublicLuaStr"; }

 protected:
  explicit NotifyPublicLuaStr(::google::protobuf::Arena* arena);
  NotifyPublicLuaStr(::google::protobuf::Arena* arena, const NotifyPublicLuaStr& from);
  NotifyPublicLuaStr(::google::protobuf::Arena* arena, NotifyPublicLuaStr&& from) noexcept
      : NotifyPublicLuaStr(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPublicLuaStr];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyPublicLuaStr)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      37, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyPassitiveSkillCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyPassitiveSkillCfgList) */ {
 public:
  inline NotifyPassitiveSkillCfgList() : NotifyPassitiveSkillCfgList(nullptr) {}
  ~NotifyPassitiveSkillCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyPassitiveSkillCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyPassitiveSkillCfgList(const NotifyPassitiveSkillCfgList& from) : NotifyPassitiveSkillCfgList(nullptr, from) {}
  inline NotifyPassitiveSkillCfgList(NotifyPassitiveSkillCfgList&& from) noexcept
      : NotifyPassitiveSkillCfgList(nullptr, std::move(from)) {}
  inline NotifyPassitiveSkillCfgList& operator=(const NotifyPassitiveSkillCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyPassitiveSkillCfgList& operator=(NotifyPassitiveSkillCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyPassitiveSkillCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyPassitiveSkillCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyPassitiveSkillCfgList*>(
        &_NotifyPassitiveSkillCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(NotifyPassitiveSkillCfgList& a, NotifyPassitiveSkillCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyPassitiveSkillCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyPassitiveSkillCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyPassitiveSkillCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyPassitiveSkillCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyPassitiveSkillCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyPassitiveSkillCfgList& from) { NotifyPassitiveSkillCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyPassitiveSkillCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyPassitiveSkillCfgList"; }

 protected:
  explicit NotifyPassitiveSkillCfgList(::google::protobuf::Arena* arena);
  NotifyPassitiveSkillCfgList(::google::protobuf::Arena* arena, const NotifyPassitiveSkillCfgList& from);
  NotifyPassitiveSkillCfgList(::google::protobuf::Arena* arena, NotifyPassitiveSkillCfgList&& from) noexcept
      : NotifyPassitiveSkillCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveSkillCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyPassitiveSkillCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      46, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyPassitiveEffectReliveCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyPassitiveEffectReliveCfgList) */ {
 public:
  inline NotifyPassitiveEffectReliveCfgList() : NotifyPassitiveEffectReliveCfgList(nullptr) {}
  ~NotifyPassitiveEffectReliveCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyPassitiveEffectReliveCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyPassitiveEffectReliveCfgList(const NotifyPassitiveEffectReliveCfgList& from) : NotifyPassitiveEffectReliveCfgList(nullptr, from) {}
  inline NotifyPassitiveEffectReliveCfgList(NotifyPassitiveEffectReliveCfgList&& from) noexcept
      : NotifyPassitiveEffectReliveCfgList(nullptr, std::move(from)) {}
  inline NotifyPassitiveEffectReliveCfgList& operator=(const NotifyPassitiveEffectReliveCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyPassitiveEffectReliveCfgList& operator=(NotifyPassitiveEffectReliveCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyPassitiveEffectReliveCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyPassitiveEffectReliveCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyPassitiveEffectReliveCfgList*>(
        &_NotifyPassitiveEffectReliveCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(NotifyPassitiveEffectReliveCfgList& a, NotifyPassitiveEffectReliveCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyPassitiveEffectReliveCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyPassitiveEffectReliveCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyPassitiveEffectReliveCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyPassitiveEffectReliveCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyPassitiveEffectReliveCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyPassitiveEffectReliveCfgList& from) { NotifyPassitiveEffectReliveCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyPassitiveEffectReliveCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyPassitiveEffectReliveCfgList"; }

 protected:
  explicit NotifyPassitiveEffectReliveCfgList(::google::protobuf::Arena* arena);
  NotifyPassitiveEffectReliveCfgList(::google::protobuf::Arena* arena, const NotifyPassitiveEffectReliveCfgList& from);
  NotifyPassitiveEffectReliveCfgList(::google::protobuf::Arena* arena, NotifyPassitiveEffectReliveCfgList&& from) noexcept
      : NotifyPassitiveEffectReliveCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReliveCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyPassitiveEffectReliveCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      53, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyPassitiveEffectReboundCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyPassitiveEffectReboundCfgList) */ {
 public:
  inline NotifyPassitiveEffectReboundCfgList() : NotifyPassitiveEffectReboundCfgList(nullptr) {}
  ~NotifyPassitiveEffectReboundCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyPassitiveEffectReboundCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyPassitiveEffectReboundCfgList(const NotifyPassitiveEffectReboundCfgList& from) : NotifyPassitiveEffectReboundCfgList(nullptr, from) {}
  inline NotifyPassitiveEffectReboundCfgList(NotifyPassitiveEffectReboundCfgList&& from) noexcept
      : NotifyPassitiveEffectReboundCfgList(nullptr, std::move(from)) {}
  inline NotifyPassitiveEffectReboundCfgList& operator=(const NotifyPassitiveEffectReboundCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyPassitiveEffectReboundCfgList& operator=(NotifyPassitiveEffectReboundCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyPassitiveEffectReboundCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyPassitiveEffectReboundCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyPassitiveEffectReboundCfgList*>(
        &_NotifyPassitiveEffectReboundCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(NotifyPassitiveEffectReboundCfgList& a, NotifyPassitiveEffectReboundCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyPassitiveEffectReboundCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyPassitiveEffectReboundCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyPassitiveEffectReboundCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyPassitiveEffectReboundCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyPassitiveEffectReboundCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyPassitiveEffectReboundCfgList& from) { NotifyPassitiveEffectReboundCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyPassitiveEffectReboundCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyPassitiveEffectReboundCfgList"; }

 protected:
  explicit NotifyPassitiveEffectReboundCfgList(::google::protobuf::Arena* arena);
  NotifyPassitiveEffectReboundCfgList(::google::protobuf::Arena* arena, const NotifyPassitiveEffectReboundCfgList& from);
  NotifyPassitiveEffectReboundCfgList(::google::protobuf::Arena* arena, NotifyPassitiveEffectReboundCfgList&& from) noexcept
      : NotifyPassitiveEffectReboundCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReboundCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyPassitiveEffectReboundCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyPassitiveEffectBloodSeekCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyPassitiveEffectBloodSeekCfgList) */ {
 public:
  inline NotifyPassitiveEffectBloodSeekCfgList() : NotifyPassitiveEffectBloodSeekCfgList(nullptr) {}
  ~NotifyPassitiveEffectBloodSeekCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyPassitiveEffectBloodSeekCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyPassitiveEffectBloodSeekCfgList(const NotifyPassitiveEffectBloodSeekCfgList& from) : NotifyPassitiveEffectBloodSeekCfgList(nullptr, from) {}
  inline NotifyPassitiveEffectBloodSeekCfgList(NotifyPassitiveEffectBloodSeekCfgList&& from) noexcept
      : NotifyPassitiveEffectBloodSeekCfgList(nullptr, std::move(from)) {}
  inline NotifyPassitiveEffectBloodSeekCfgList& operator=(const NotifyPassitiveEffectBloodSeekCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyPassitiveEffectBloodSeekCfgList& operator=(NotifyPassitiveEffectBloodSeekCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyPassitiveEffectBloodSeekCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyPassitiveEffectBloodSeekCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyPassitiveEffectBloodSeekCfgList*>(
        &_NotifyPassitiveEffectBloodSeekCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(NotifyPassitiveEffectBloodSeekCfgList& a, NotifyPassitiveEffectBloodSeekCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyPassitiveEffectBloodSeekCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyPassitiveEffectBloodSeekCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyPassitiveEffectBloodSeekCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyPassitiveEffectBloodSeekCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyPassitiveEffectBloodSeekCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyPassitiveEffectBloodSeekCfgList& from) { NotifyPassitiveEffectBloodSeekCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyPassitiveEffectBloodSeekCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyPassitiveEffectBloodSeekCfgList"; }

 protected:
  explicit NotifyPassitiveEffectBloodSeekCfgList(::google::protobuf::Arena* arena);
  NotifyPassitiveEffectBloodSeekCfgList(::google::protobuf::Arena* arena, const NotifyPassitiveEffectBloodSeekCfgList& from);
  NotifyPassitiveEffectBloodSeekCfgList(::google::protobuf::Arena* arena, NotifyPassitiveEffectBloodSeekCfgList&& from) noexcept
      : NotifyPassitiveEffectBloodSeekCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectBloodSeekCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyPassitiveEffectBloodSeekCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyOBUser_OBPosInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyOBUser.OBPosInfo) */ {
 public:
  inline NotifyOBUser_OBPosInfo() : NotifyOBUser_OBPosInfo(nullptr) {}
  ~NotifyOBUser_OBPosInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyOBUser_OBPosInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyOBUser_OBPosInfo(const NotifyOBUser_OBPosInfo& from) : NotifyOBUser_OBPosInfo(nullptr, from) {}
  inline NotifyOBUser_OBPosInfo(NotifyOBUser_OBPosInfo&& from) noexcept
      : NotifyOBUser_OBPosInfo(nullptr, std::move(from)) {}
  inline NotifyOBUser_OBPosInfo& operator=(const NotifyOBUser_OBPosInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyOBUser_OBPosInfo& operator=(NotifyOBUser_OBPosInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyOBUser_OBPosInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyOBUser_OBPosInfo* internal_default_instance() {
    return reinterpret_cast<const NotifyOBUser_OBPosInfo*>(
        &_NotifyOBUser_OBPosInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(NotifyOBUser_OBPosInfo& a, NotifyOBUser_OBPosInfo& b) { a.Swap(&b); }
  inline void Swap(NotifyOBUser_OBPosInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyOBUser_OBPosInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyOBUser_OBPosInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyOBUser_OBPosInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyOBUser_OBPosInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyOBUser_OBPosInfo& from) { NotifyOBUser_OBPosInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyOBUser_OBPosInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyOBUser.OBPosInfo"; }

 protected:
  explicit NotifyOBUser_OBPosInfo(::google::protobuf::Arena* arena);
  NotifyOBUser_OBPosInfo(::google::protobuf::Arena* arena, const NotifyOBUser_OBPosInfo& from);
  NotifyOBUser_OBPosInfo(::google::protobuf::Arena* arena, NotifyOBUser_OBPosInfo&& from) noexcept
      : NotifyOBUser_OBPosInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGuidFieldNumber = 2,
    kPosFieldNumber = 1,
  };
  // optional uint64 guid = 2;
  bool has_guid() const;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // optional int32 pos = 1;
  bool has_pos() const;
  void clear_pos() ;
  ::int32_t pos() const;
  void set_pos(::int32_t value);

  private:
  ::int32_t _internal_pos() const;
  void _internal_set_pos(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyOBUser.OBPosInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t guid_;
    ::int32_t pos_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyNewSkillCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyNewSkillCfgList) */ {
 public:
  inline NotifyNewSkillCfgList() : NotifyNewSkillCfgList(nullptr) {}
  ~NotifyNewSkillCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyNewSkillCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyNewSkillCfgList(const NotifyNewSkillCfgList& from) : NotifyNewSkillCfgList(nullptr, from) {}
  inline NotifyNewSkillCfgList(NotifyNewSkillCfgList&& from) noexcept
      : NotifyNewSkillCfgList(nullptr, std::move(from)) {}
  inline NotifyNewSkillCfgList& operator=(const NotifyNewSkillCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyNewSkillCfgList& operator=(NotifyNewSkillCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyNewSkillCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyNewSkillCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyNewSkillCfgList*>(
        &_NotifyNewSkillCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(NotifyNewSkillCfgList& a, NotifyNewSkillCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyNewSkillCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyNewSkillCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyNewSkillCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyNewSkillCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyNewSkillCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyNewSkillCfgList& from) { NotifyNewSkillCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyNewSkillCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyNewSkillCfgList"; }

 protected:
  explicit NotifyNewSkillCfgList(::google::protobuf::Arena* arena);
  NotifyNewSkillCfgList(::google::protobuf::Arena* arena, const NotifyNewSkillCfgList& from);
  NotifyNewSkillCfgList(::google::protobuf::Arena* arena, NotifyNewSkillCfgList&& from) noexcept
      : NotifyNewSkillCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNewSkillCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyNewSkillCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      40, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyNPCCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyNPCCfgList) */ {
 public:
  inline NotifyNPCCfgList() : NotifyNPCCfgList(nullptr) {}
  ~NotifyNPCCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyNPCCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyNPCCfgList(const NotifyNPCCfgList& from) : NotifyNPCCfgList(nullptr, from) {}
  inline NotifyNPCCfgList(NotifyNPCCfgList&& from) noexcept
      : NotifyNPCCfgList(nullptr, std::move(from)) {}
  inline NotifyNPCCfgList& operator=(const NotifyNPCCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyNPCCfgList& operator=(NotifyNPCCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyNPCCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyNPCCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyNPCCfgList*>(
        &_NotifyNPCCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(NotifyNPCCfgList& a, NotifyNPCCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyNPCCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyNPCCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyNPCCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyNPCCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyNPCCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyNPCCfgList& from) { NotifyNPCCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyNPCCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyNPCCfgList"; }

 protected:
  explicit NotifyNPCCfgList(::google::protobuf::Arena* arena);
  NotifyNPCCfgList(::google::protobuf::Arena* arena, const NotifyNPCCfgList& from);
  NotifyNPCCfgList(::google::protobuf::Arena* arena, NotifyNPCCfgList&& from) noexcept
      : NotifyNPCCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNPCCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyNPCCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      35, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyHeroCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyHeroCfgList) */ {
 public:
  inline NotifyHeroCfgList() : NotifyHeroCfgList(nullptr) {}
  ~NotifyHeroCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyHeroCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyHeroCfgList(const NotifyHeroCfgList& from) : NotifyHeroCfgList(nullptr, from) {}
  inline NotifyHeroCfgList(NotifyHeroCfgList&& from) noexcept
      : NotifyHeroCfgList(nullptr, std::move(from)) {}
  inline NotifyHeroCfgList& operator=(const NotifyHeroCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyHeroCfgList& operator=(NotifyHeroCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyHeroCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyHeroCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyHeroCfgList*>(
        &_NotifyHeroCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(NotifyHeroCfgList& a, NotifyHeroCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyHeroCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyHeroCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyHeroCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyHeroCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyHeroCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyHeroCfgList& from) { NotifyHeroCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyHeroCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyHeroCfgList"; }

 protected:
  explicit NotifyHeroCfgList(::google::protobuf::Arena* arena);
  NotifyHeroCfgList(::google::protobuf::Arena* arena, const NotifyHeroCfgList& from);
  NotifyHeroCfgList(::google::protobuf::Arena* arena, NotifyHeroCfgList&& from) noexcept
      : NotifyHeroCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyHeroCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyHeroCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      36, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyGoodsCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyGoodsCfgList) */ {
 public:
  inline NotifyGoodsCfgList() : NotifyGoodsCfgList(nullptr) {}
  ~NotifyGoodsCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyGoodsCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyGoodsCfgList(const NotifyGoodsCfgList& from) : NotifyGoodsCfgList(nullptr, from) {}
  inline NotifyGoodsCfgList(NotifyGoodsCfgList&& from) noexcept
      : NotifyGoodsCfgList(nullptr, std::move(from)) {}
  inline NotifyGoodsCfgList& operator=(const NotifyGoodsCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyGoodsCfgList& operator=(NotifyGoodsCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyGoodsCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyGoodsCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyGoodsCfgList*>(
        &_NotifyGoodsCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(NotifyGoodsCfgList& a, NotifyGoodsCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyGoodsCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyGoodsCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyGoodsCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyGoodsCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyGoodsCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyGoodsCfgList& from) { NotifyGoodsCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyGoodsCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyGoodsCfgList"; }

 protected:
  explicit NotifyGoodsCfgList(::google::protobuf::Arena* arena);
  NotifyGoodsCfgList(::google::protobuf::Arena* arena, const NotifyGoodsCfgList& from);
  NotifyGoodsCfgList(::google::protobuf::Arena* arena, NotifyGoodsCfgList&& from) noexcept
      : NotifyGoodsCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCfgFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // repeated string cfg = 2;
  int cfg_size() const;
  private:
  int _internal_cfg_size() const;

  public:
  void clear_cfg() ;
  const std::string& cfg(int index) const;
  std::string* mutable_cfg(int index);
  void set_cfg(int index, const std::string& value);
  void set_cfg(int index, std::string&& value);
  void set_cfg(int index, const char* value);
  void set_cfg(int index, const char* value, std::size_t size);
  void set_cfg(int index, absl::string_view value);
  std::string* add_cfg();
  void add_cfg(const std::string& value);
  void add_cfg(std::string&& value);
  void add_cfg(const char* value);
  void add_cfg(const char* value, std::size_t size);
  void add_cfg(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_cfg();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_cfg() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_cfg();

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyGoodsCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyGoodsCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      37, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> cfg_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyBuffCfgList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyBuffCfgList) */ {
 public:
  inline NotifyBuffCfgList() : NotifyBuffCfgList(nullptr) {}
  ~NotifyBuffCfgList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyBuffCfgList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyBuffCfgList(const NotifyBuffCfgList& from) : NotifyBuffCfgList(nullptr, from) {}
  inline NotifyBuffCfgList(NotifyBuffCfgList&& from) noexcept
      : NotifyBuffCfgList(nullptr, std::move(from)) {}
  inline NotifyBuffCfgList& operator=(const NotifyBuffCfgList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyBuffCfgList& operator=(NotifyBuffCfgList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyBuffCfgList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyBuffCfgList* internal_default_instance() {
    return reinterpret_cast<const NotifyBuffCfgList*>(
        &_NotifyBuffCfgList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(NotifyBuffCfgList& a, NotifyBuffCfgList& b) { a.Swap(&b); }
  inline void Swap(NotifyBuffCfgList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyBuffCfgList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyBuffCfgList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyBuffCfgList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyBuffCfgList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyBuffCfgList& from) { NotifyBuffCfgList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyBuffCfgList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyBuffCfgList"; }

 protected:
  explicit NotifyBuffCfgList(::google::protobuf::Arena* arena);
  NotifyBuffCfgList(::google::protobuf::Arena* arena, const NotifyBuffCfgList& from);
  NotifyBuffCfgList(::google::protobuf::Arena* arena, NotifyBuffCfgList&& from) noexcept
      : NotifyBuffCfgList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // optional int64 time = 2;
  bool has_time() const;
  void clear_time() ;
  ::int64_t time() const;
  void set_time(::int64_t value);

  private:
  ::int64_t _internal_time() const;
  void _internal_set_time(::int64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBuffCfgList];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyBuffCfgList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t time_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyBattleStateChange final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyBattleStateChange) */ {
 public:
  inline NotifyBattleStateChange() : NotifyBattleStateChange(nullptr) {}
  ~NotifyBattleStateChange() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyBattleStateChange(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyBattleStateChange(const NotifyBattleStateChange& from) : NotifyBattleStateChange(nullptr, from) {}
  inline NotifyBattleStateChange(NotifyBattleStateChange&& from) noexcept
      : NotifyBattleStateChange(nullptr, std::move(from)) {}
  inline NotifyBattleStateChange& operator=(const NotifyBattleStateChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyBattleStateChange& operator=(NotifyBattleStateChange&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyBattleStateChange& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyBattleStateChange* internal_default_instance() {
    return reinterpret_cast<const NotifyBattleStateChange*>(
        &_NotifyBattleStateChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(NotifyBattleStateChange& a, NotifyBattleStateChange& b) { a.Swap(&b); }
  inline void Swap(NotifyBattleStateChange* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyBattleStateChange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyBattleStateChange* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyBattleStateChange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyBattleStateChange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyBattleStateChange& from) { NotifyBattleStateChange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyBattleStateChange* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyBattleStateChange"; }

 protected:
  explicit NotifyBattleStateChange(::google::protobuf::Arena* arena);
  NotifyBattleStateChange(::google::protobuf::Arena* arena, const NotifyBattleStateChange& from);
  NotifyBattleStateChange(::google::protobuf::Arena* arena, NotifyBattleStateChange&& from) noexcept
      : NotifyBattleStateChange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBattleidFieldNumber = 2,
    kStateFieldNumber = 3,
    kMsgidFieldNumber = 1,
  };
  // optional uint64 battleid = 2;
  bool has_battleid() const;
  void clear_battleid() ;
  ::uint64_t battleid() const;
  void set_battleid(::uint64_t value);

  private:
  ::uint64_t _internal_battleid() const;
  void _internal_set_battleid(::uint64_t value);

  public:
  // optional int32 state = 3;
  bool has_state() const;
  void clear_state() ;
  ::int32_t state() const;
  void set_state(::int32_t value);

  private:
  ::int32_t _internal_state() const;
  void _internal_set_state(::int32_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBattleStateChange];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyBattleStateChange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t battleid_;
    ::int32_t state_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class FinishBattleResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.FinishBattleResponse) */ {
 public:
  inline FinishBattleResponse() : FinishBattleResponse(nullptr) {}
  ~FinishBattleResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FinishBattleResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FinishBattleResponse(const FinishBattleResponse& from) : FinishBattleResponse(nullptr, from) {}
  inline FinishBattleResponse(FinishBattleResponse&& from) noexcept
      : FinishBattleResponse(nullptr, std::move(from)) {}
  inline FinishBattleResponse& operator=(const FinishBattleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FinishBattleResponse& operator=(FinishBattleResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FinishBattleResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FinishBattleResponse* internal_default_instance() {
    return reinterpret_cast<const FinishBattleResponse*>(
        &_FinishBattleResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 54;
  friend void swap(FinishBattleResponse& a, FinishBattleResponse& b) { a.Swap(&b); }
  inline void Swap(FinishBattleResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FinishBattleResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FinishBattleResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<FinishBattleResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FinishBattleResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FinishBattleResponse& from) { FinishBattleResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FinishBattleResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.FinishBattleResponse"; }

 protected:
  explicit FinishBattleResponse(::google::protobuf::Arena* arena);
  FinishBattleResponse(::google::protobuf::Arena* arena, const FinishBattleResponse& from);
  FinishBattleResponse(::google::protobuf::Arena* arena, FinishBattleResponse&& from) noexcept
      : FinishBattleResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBattleidFieldNumber = 2,
    kRstFieldNumber = 3,
    kMsgidFieldNumber = 1,
  };
  // optional uint64 battleid = 2;
  bool has_battleid() const;
  void clear_battleid() ;
  ::uint64_t battleid() const;
  void set_battleid(::uint64_t value);

  private:
  ::uint64_t _internal_battleid() const;
  void _internal_set_battleid(::uint64_t value);

  public:
  // optional bool rst = 3;
  bool has_rst() const;
  void clear_rst() ;
  bool rst() const;
  void set_rst(bool value);

  private:
  bool _internal_rst() const;
  void _internal_set_rst(bool value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_FinishBattleResponse];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.FinishBattleResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t battleid_;
    bool rst_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo) */ {
 public:
  inline CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo() : CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo(nullptr) {}
  ~CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo(const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& from) : CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo(nullptr, from) {}
  inline CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo&& from) noexcept
      : CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo(nullptr, std::move(from)) {}
  inline CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& operator=(const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& operator=(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* internal_default_instance() {
    return reinterpret_cast<const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo*>(
        &_CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& a, CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& b) { a.Swap(&b); }
  inline void Swap(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& from) { CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo"; }

 protected:
  explicit CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo(::google::protobuf::Arena* arena);
  CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo(::google::protobuf::Arena* arena, const CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& from);
  CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo(::google::protobuf::Arena* arena, CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo&& from) noexcept
      : CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEffectNameFieldNumber = 2,
    kEffectIdFieldNumber = 1,
    kEffectValueFieldNumber = 3,
    kEffectPerFieldNumber = 4,
  };
  // optional string effectName = 2;
  bool has_effectname() const;
  void clear_effectname() ;
  const std::string& effectname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_effectname(Arg_&& arg, Args_... args);
  std::string* mutable_effectname();
  PROTOBUF_NODISCARD std::string* release_effectname();
  void set_allocated_effectname(std::string* value);

  private:
  const std::string& _internal_effectname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_effectname(
      const std::string& value);
  std::string* _internal_mutable_effectname();

  public:
  // optional int32 effectId = 1;
  bool has_effectid() const;
  void clear_effectid() ;
  ::int32_t effectid() const;
  void set_effectid(::int32_t value);

  private:
  ::int32_t _internal_effectid() const;
  void _internal_set_effectid(::int32_t value);

  public:
  // optional float effectValue = 3;
  bool has_effectvalue() const;
  void clear_effectvalue() ;
  float effectvalue() const;
  void set_effectvalue(float value);

  private:
  float _internal_effectvalue() const;
  void _internal_set_effectvalue(float value);

  public:
  // optional float effectPer = 4;
  bool has_effectper() const;
  void clear_effectper() ;
  float effectper() const;
  void set_effectper(float value);

  private:
  float _internal_effectper() const;
  void _internal_set_effectper(float value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      77, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr effectname_;
    ::int32_t effectid_;
    float effectvalue_;
    float effectper_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class CreateBattle_AiRobotInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.CreateBattle.AiRobotInfo) */ {
 public:
  inline CreateBattle_AiRobotInfo() : CreateBattle_AiRobotInfo(nullptr) {}
  ~CreateBattle_AiRobotInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateBattle_AiRobotInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateBattle_AiRobotInfo(const CreateBattle_AiRobotInfo& from) : CreateBattle_AiRobotInfo(nullptr, from) {}
  inline CreateBattle_AiRobotInfo(CreateBattle_AiRobotInfo&& from) noexcept
      : CreateBattle_AiRobotInfo(nullptr, std::move(from)) {}
  inline CreateBattle_AiRobotInfo& operator=(const CreateBattle_AiRobotInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateBattle_AiRobotInfo& operator=(CreateBattle_AiRobotInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateBattle_AiRobotInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateBattle_AiRobotInfo* internal_default_instance() {
    return reinterpret_cast<const CreateBattle_AiRobotInfo*>(
        &_CreateBattle_AiRobotInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(CreateBattle_AiRobotInfo& a, CreateBattle_AiRobotInfo& b) { a.Swap(&b); }
  inline void Swap(CreateBattle_AiRobotInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateBattle_AiRobotInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateBattle_AiRobotInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateBattle_AiRobotInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateBattle_AiRobotInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateBattle_AiRobotInfo& from) { CreateBattle_AiRobotInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateBattle_AiRobotInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.CreateBattle.AiRobotInfo"; }

 protected:
  explicit CreateBattle_AiRobotInfo(::google::protobuf::Arena* arena);
  CreateBattle_AiRobotInfo(::google::protobuf::Arena* arena, const CreateBattle_AiRobotInfo& from);
  CreateBattle_AiRobotInfo(::google::protobuf::Arena* arena, CreateBattle_AiRobotInfo&& from) noexcept
      : CreateBattle_AiRobotInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeatFieldNumber = 1,
    kAitypeFieldNumber = 2,
  };
  // optional uint32 seat = 1;
  bool has_seat() const;
  void clear_seat() ;
  ::uint32_t seat() const;
  void set_seat(::uint32_t value);

  private:
  ::uint32_t _internal_seat() const;
  void _internal_set_seat(::uint32_t value);

  public:
  // optional uint32 aitype = 2;
  bool has_aitype() const;
  void clear_aitype() ;
  ::uint32_t aitype() const;
  void set_aitype(::uint32_t value);

  private:
  ::uint32_t _internal_aitype() const;
  void _internal_set_aitype(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.CreateBattle.AiRobotInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t seat_;
    ::uint32_t aitype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class BattleKickOneUser final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.BattleKickOneUser) */ {
 public:
  inline BattleKickOneUser() : BattleKickOneUser(nullptr) {}
  ~BattleKickOneUser() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BattleKickOneUser(
      ::google::protobuf::internal::ConstantInitialized);

  inline BattleKickOneUser(const BattleKickOneUser& from) : BattleKickOneUser(nullptr, from) {}
  inline BattleKickOneUser(BattleKickOneUser&& from) noexcept
      : BattleKickOneUser(nullptr, std::move(from)) {}
  inline BattleKickOneUser& operator=(const BattleKickOneUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline BattleKickOneUser& operator=(BattleKickOneUser&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BattleKickOneUser& default_instance() {
    return *internal_default_instance();
  }
  static inline const BattleKickOneUser* internal_default_instance() {
    return reinterpret_cast<const BattleKickOneUser*>(
        &_BattleKickOneUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(BattleKickOneUser& a, BattleKickOneUser& b) { a.Swap(&b); }
  inline void Swap(BattleKickOneUser* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BattleKickOneUser* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BattleKickOneUser* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BattleKickOneUser>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BattleKickOneUser& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BattleKickOneUser& from) { BattleKickOneUser::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BattleKickOneUser* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.BattleKickOneUser"; }

 protected:
  explicit BattleKickOneUser(::google::protobuf::Arena* arena);
  BattleKickOneUser(::google::protobuf::Arena* arena, const BattleKickOneUser& from);
  BattleKickOneUser(::google::protobuf::Arena* arena, BattleKickOneUser&& from) noexcept
      : BattleKickOneUser(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBattleidFieldNumber = 2,
    kUserkeyFieldNumber = 3,
    kMsgidFieldNumber = 1,
  };
  // optional uint64 battleid = 2;
  bool has_battleid() const;
  void clear_battleid() ;
  ::uint64_t battleid() const;
  void set_battleid(::uint64_t value);

  private:
  ::uint64_t _internal_battleid() const;
  void _internal_set_battleid(::uint64_t value);

  public:
  // optional uint64 userkey = 3;
  bool has_userkey() const;
  void clear_userkey() ;
  ::uint64_t userkey() const;
  void set_userkey(::uint64_t value);

  private:
  ::uint64_t _internal_userkey() const;
  void _internal_set_userkey(::uint64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_BattleKickOneUser];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.BattleKickOneUser)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t battleid_;
    ::uint64_t userkey_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class AskRegisteRet_GSInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.AskRegisteRet.GSInfo) */ {
 public:
  inline AskRegisteRet_GSInfo() : AskRegisteRet_GSInfo(nullptr) {}
  ~AskRegisteRet_GSInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AskRegisteRet_GSInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline AskRegisteRet_GSInfo(const AskRegisteRet_GSInfo& from) : AskRegisteRet_GSInfo(nullptr, from) {}
  inline AskRegisteRet_GSInfo(AskRegisteRet_GSInfo&& from) noexcept
      : AskRegisteRet_GSInfo(nullptr, std::move(from)) {}
  inline AskRegisteRet_GSInfo& operator=(const AskRegisteRet_GSInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline AskRegisteRet_GSInfo& operator=(AskRegisteRet_GSInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AskRegisteRet_GSInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const AskRegisteRet_GSInfo* internal_default_instance() {
    return reinterpret_cast<const AskRegisteRet_GSInfo*>(
        &_AskRegisteRet_GSInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(AskRegisteRet_GSInfo& a, AskRegisteRet_GSInfo& b) { a.Swap(&b); }
  inline void Swap(AskRegisteRet_GSInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AskRegisteRet_GSInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AskRegisteRet_GSInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AskRegisteRet_GSInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AskRegisteRet_GSInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AskRegisteRet_GSInfo& from) { AskRegisteRet_GSInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AskRegisteRet_GSInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.AskRegisteRet.GSInfo"; }

 protected:
  explicit AskRegisteRet_GSInfo(::google::protobuf::Arena* arena);
  AskRegisteRet_GSInfo(::google::protobuf::Arena* arena, const AskRegisteRet_GSInfo& from);
  AskRegisteRet_GSInfo(::google::protobuf::Arena* arena, AskRegisteRet_GSInfo&& from) noexcept
      : AskRegisteRet_GSInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserpwdFieldNumber = 2,
    kGsidFieldNumber = 1,
  };
  // optional string userpwd = 2;
  bool has_userpwd() const;
  void clear_userpwd() ;
  const std::string& userpwd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_userpwd(Arg_&& arg, Args_... args);
  std::string* mutable_userpwd();
  PROTOBUF_NODISCARD std::string* release_userpwd();
  void set_allocated_userpwd(std::string* value);

  private:
  const std::string& _internal_userpwd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_userpwd(
      const std::string& value);
  std::string* _internal_mutable_userpwd();

  public:
  // optional int32 gsid = 1;
  bool has_gsid() const;
  void clear_gsid() ;
  ::int32_t gsid() const;
  void set_gsid(::int32_t value);

  private:
  ::int32_t _internal_gsid() const;
  void _internal_set_gsid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.AskRegisteRet.GSInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      43, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr userpwd_;
    ::int32_t gsid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class UserInfo_SUserDBData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.UserInfo.SUserDBData) */ {
 public:
  inline UserInfo_SUserDBData() : UserInfo_SUserDBData(nullptr) {}
  ~UserInfo_SUserDBData() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UserInfo_SUserDBData(
      ::google::protobuf::internal::ConstantInitialized);

  inline UserInfo_SUserDBData(const UserInfo_SUserDBData& from) : UserInfo_SUserDBData(nullptr, from) {}
  inline UserInfo_SUserDBData(UserInfo_SUserDBData&& from) noexcept
      : UserInfo_SUserDBData(nullptr, std::move(from)) {}
  inline UserInfo_SUserDBData& operator=(const UserInfo_SUserDBData& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserInfo_SUserDBData& operator=(UserInfo_SUserDBData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserInfo_SUserDBData& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserInfo_SUserDBData* internal_default_instance() {
    return reinterpret_cast<const UserInfo_SUserDBData*>(
        &_UserInfo_SUserDBData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(UserInfo_SUserDBData& a, UserInfo_SUserDBData& b) { a.Swap(&b); }
  inline void Swap(UserInfo_SUserDBData* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserInfo_SUserDBData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserInfo_SUserDBData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UserInfo_SUserDBData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserInfo_SUserDBData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UserInfo_SUserDBData& from) { UserInfo_SUserDBData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserInfo_SUserDBData* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.UserInfo.SUserDBData"; }

 protected:
  explicit UserInfo_SUserDBData(::google::protobuf::Arena* arena);
  UserInfo_SUserDBData(::google::protobuf::Arena* arena, const UserInfo_SUserDBData& from);
  UserInfo_SUserDBData(::google::protobuf::Arena* arena, UserInfo_SUserDBData&& from) noexcept
      : UserInfo_SUserDBData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using SUserGuideSteps = UserInfo_SUserDBData_SUserGuideSteps;
  using EObjectType = UserInfo_SUserDBData_EObjectType;
  static constexpr EObjectType eObjectType_None = UserInfo_SUserDBData_EObjectType_eObjectType_None;
  static constexpr EObjectType eObjectType_Guild = UserInfo_SUserDBData_EObjectType_eObjectType_Guild;
  static constexpr EObjectType eObjectType_User = UserInfo_SUserDBData_EObjectType_eObjectType_User;
  static constexpr EObjectType eObjectType_HeroBegin = UserInfo_SUserDBData_EObjectType_eObjectType_HeroBegin;
  static constexpr EObjectType eObjectType_NPCBegin = UserInfo_SUserDBData_EObjectType_eObjectType_NPCBegin;
  static constexpr EObjectType eObjectType_GoodsBegin = UserInfo_SUserDBData_EObjectType_eObjectType_GoodsBegin;
  static inline bool EObjectType_IsValid(int value) {
    return UserInfo_SUserDBData_EObjectType_IsValid(value);
  }
  static constexpr EObjectType EObjectType_MIN = UserInfo_SUserDBData_EObjectType_EObjectType_MIN;
  static constexpr EObjectType EObjectType_MAX = UserInfo_SUserDBData_EObjectType_EObjectType_MAX;
  static constexpr int EObjectType_ARRAYSIZE = UserInfo_SUserDBData_EObjectType_EObjectType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* EObjectType_descriptor() {
    return UserInfo_SUserDBData_EObjectType_descriptor();
  }
  template <typename T>
  static inline const std::string& EObjectType_Name(T value) {
    return UserInfo_SUserDBData_EObjectType_Name(value);
  }
  static inline bool EObjectType_Parse(absl::string_view name, EObjectType* value) {
    return UserInfo_SUserDBData_EObjectType_Parse(name, value);
  }
  using EUserCate = UserInfo_SUserDBData_EUserCate;
  static constexpr EUserCate eUserCate_Admin = UserInfo_SUserDBData_EUserCate_eUserCate_Admin;
  static constexpr EUserCate eUserCate_GM = UserInfo_SUserDBData_EUserCate_eUserCate_GM;
  static constexpr EUserCate eUserCate_Robot = UserInfo_SUserDBData_EUserCate_eUserCate_Robot;
  static constexpr EUserCate eUserCate_DiamondVIP = UserInfo_SUserDBData_EUserCate_eUserCate_DiamondVIP;
  static constexpr EUserCate eUserCate_GloldVIP = UserInfo_SUserDBData_EUserCate_eUserCate_GloldVIP;
  static constexpr EUserCate eUserCate_SilverVIP = UserInfo_SUserDBData_EUserCate_eUserCate_SilverVIP;
  static constexpr EUserCate eUserCate_CopperVIP = UserInfo_SUserDBData_EUserCate_eUserCate_CopperVIP;
  static constexpr EUserCate eUserCate_Normal = UserInfo_SUserDBData_EUserCate_eUserCate_Normal;
  static inline bool EUserCate_IsValid(int value) {
    return UserInfo_SUserDBData_EUserCate_IsValid(value);
  }
  static constexpr EUserCate EUserCate_MIN = UserInfo_SUserDBData_EUserCate_EUserCate_MIN;
  static constexpr EUserCate EUserCate_MAX = UserInfo_SUserDBData_EUserCate_EUserCate_MAX;
  static constexpr int EUserCate_ARRAYSIZE = UserInfo_SUserDBData_EUserCate_EUserCate_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* EUserCate_descriptor() {
    return UserInfo_SUserDBData_EUserCate_descriptor();
  }
  template <typename T>
  static inline const std::string& EUserCate_Name(T value) {
    return UserInfo_SUserDBData_EUserCate_Name(value);
  }
  static inline bool EUserCate_Parse(absl::string_view name, EUserCate* value) {
    return UserInfo_SUserDBData_EUserCate_Parse(name, value);
  }
  using EUserPlatform = UserInfo_SUserDBData_EUserPlatform;
  static constexpr EUserPlatform eUP_None = UserInfo_SUserDBData_EUserPlatform_eUP_None;
  static constexpr EUserPlatform eUP_Apple = UserInfo_SUserDBData_EUserPlatform_eUP_Apple;
  static constexpr EUserPlatform eUP_QQ = UserInfo_SUserDBData_EUserPlatform_eUP_QQ;
  static constexpr EUserPlatform eUP_360 = UserInfo_SUserDBData_EUserPlatform_eUP_360;
  static inline bool EUserPlatform_IsValid(int value) {
    return UserInfo_SUserDBData_EUserPlatform_IsValid(value);
  }
  static constexpr EUserPlatform EUserPlatform_MIN = UserInfo_SUserDBData_EUserPlatform_EUserPlatform_MIN;
  static constexpr EUserPlatform EUserPlatform_MAX = UserInfo_SUserDBData_EUserPlatform_EUserPlatform_MAX;
  static constexpr int EUserPlatform_ARRAYSIZE = UserInfo_SUserDBData_EUserPlatform_EUserPlatform_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* EUserPlatform_descriptor() {
    return UserInfo_SUserDBData_EUserPlatform_descriptor();
  }
  template <typename T>
  static inline const std::string& EUserPlatform_Name(T value) {
    return UserInfo_SUserDBData_EUserPlatform_Name(value);
  }
  static inline bool EUserPlatform_Parse(absl::string_view name, EUserPlatform* value) {
    return UserInfo_SUserDBData_EUserPlatform_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kSzUserNameFieldNumber = 5,
    kSzUserPwdFieldNumber = 6,
    kSzNickNameFieldNumber = 7,
    kSzFriendsFieldNumber = 30,
    kMGuideStepsFieldNumber = 29,
    kUn64ObjIdxFieldNumber = 2,
    kEObjTypeFieldNumber = 1,
    kEUserCateFieldNumber = 3,
    kEUserPlatformFieldNumber = 4,
    kUn32HeaderIDFieldNumber = 8,
    kN64ScoreFieldNumber = 10,
    kN64DiamondFieldNumber = 11,
    kN64GoldFieldNumber = 12,
    kTRegisteUTCMillisecFieldNumber = 13,
    kN8SexFieldNumber = 9,
    kN32RunesBagNumFieldNumber = 17,
    kTLastLoginUTCMillisecFieldNumber = 14,
    kN32HeroNumFieldNumber = 15,
    kN32RunesSlotOpenNumFieldNumber = 16,
    kN32RunesSlotNumFieldNumber = 18,
    kN32FriendsNumFieldNumber = 19,
    kN32BlacklistNumFieldNumber = 20,
    kUn32TotalGameInnsFieldNumber = 21,
    kUn32TotalWinInnsFieldNumber = 22,
    kUn32TotalHeroKillsFieldNumber = 23,
    kUn32TotalDestoryBuildingsFieldNumber = 24,
    kUn32TotalDeadTimesFieldNumber = 25,
    kUn16UserLvFieldNumber = 26,
    kUn32UserCurLvExpFieldNumber = 27,
    kTLastFirstWinTimeFieldNumber = 28,
  };
  // optional string szUserName = 5;
  bool has_szusername() const;
  void clear_szusername() ;
  const std::string& szusername() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_szusername(Arg_&& arg, Args_... args);
  std::string* mutable_szusername();
  PROTOBUF_NODISCARD std::string* release_szusername();
  void set_allocated_szusername(std::string* value);

  private:
  const std::string& _internal_szusername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_szusername(
      const std::string& value);
  std::string* _internal_mutable_szusername();

  public:
  // optional string szUserPwd = 6;
  bool has_szuserpwd() const;
  void clear_szuserpwd() ;
  const std::string& szuserpwd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_szuserpwd(Arg_&& arg, Args_... args);
  std::string* mutable_szuserpwd();
  PROTOBUF_NODISCARD std::string* release_szuserpwd();
  void set_allocated_szuserpwd(std::string* value);

  private:
  const std::string& _internal_szuserpwd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_szuserpwd(
      const std::string& value);
  std::string* _internal_mutable_szuserpwd();

  public:
  // optional string szNickName = 7;
  bool has_sznickname() const;
  void clear_sznickname() ;
  const std::string& sznickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sznickname(Arg_&& arg, Args_... args);
  std::string* mutable_sznickname();
  PROTOBUF_NODISCARD std::string* release_sznickname();
  void set_allocated_sznickname(std::string* value);

  private:
  const std::string& _internal_sznickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sznickname(
      const std::string& value);
  std::string* _internal_mutable_sznickname();

  public:
  // optional string szFriends = 30;
  bool has_szfriends() const;
  void clear_szfriends() ;
  const std::string& szfriends() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_szfriends(Arg_&& arg, Args_... args);
  std::string* mutable_szfriends();
  PROTOBUF_NODISCARD std::string* release_szfriends();
  void set_allocated_szfriends(std::string* value);

  private:
  const std::string& _internal_szfriends() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_szfriends(
      const std::string& value);
  std::string* _internal_mutable_szfriends();

  public:
  // optional .CSToSS.UserInfo.SUserDBData.SUserGuideSteps mGuideSteps = 29;
  bool has_mguidesteps() const;
  void clear_mguidesteps() ;
  const ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps& mguidesteps() const;
  PROTOBUF_NODISCARD ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* release_mguidesteps();
  ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* mutable_mguidesteps();
  void set_allocated_mguidesteps(::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* value);
  void unsafe_arena_set_allocated_mguidesteps(::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* value);
  ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* unsafe_arena_release_mguidesteps();

  private:
  const ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps& _internal_mguidesteps() const;
  ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* _internal_mutable_mguidesteps();

  public:
  // optional int64 un64ObjIdx = 2;
  bool has_un64objidx() const;
  void clear_un64objidx() ;
  ::int64_t un64objidx() const;
  void set_un64objidx(::int64_t value);

  private:
  ::int64_t _internal_un64objidx() const;
  void _internal_set_un64objidx(::int64_t value);

  public:
  // optional .CSToSS.UserInfo.SUserDBData.EObjectType eObjType = 1;
  bool has_eobjtype() const;
  void clear_eobjtype() ;
  ::CSToSS::UserInfo_SUserDBData_EObjectType eobjtype() const;
  void set_eobjtype(::CSToSS::UserInfo_SUserDBData_EObjectType value);

  private:
  ::CSToSS::UserInfo_SUserDBData_EObjectType _internal_eobjtype() const;
  void _internal_set_eobjtype(::CSToSS::UserInfo_SUserDBData_EObjectType value);

  public:
  // optional .CSToSS.UserInfo.SUserDBData.EUserCate eUserCate = 3;
  bool has_eusercate() const;
  void clear_eusercate() ;
  ::CSToSS::UserInfo_SUserDBData_EUserCate eusercate() const;
  void set_eusercate(::CSToSS::UserInfo_SUserDBData_EUserCate value);

  private:
  ::CSToSS::UserInfo_SUserDBData_EUserCate _internal_eusercate() const;
  void _internal_set_eusercate(::CSToSS::UserInfo_SUserDBData_EUserCate value);

  public:
  // optional .CSToSS.UserInfo.SUserDBData.EUserPlatform eUserPlatform = 4;
  bool has_euserplatform() const;
  void clear_euserplatform() ;
  ::CSToSS::UserInfo_SUserDBData_EUserPlatform euserplatform() const;
  void set_euserplatform(::CSToSS::UserInfo_SUserDBData_EUserPlatform value);

  private:
  ::CSToSS::UserInfo_SUserDBData_EUserPlatform _internal_euserplatform() const;
  void _internal_set_euserplatform(::CSToSS::UserInfo_SUserDBData_EUserPlatform value);

  public:
  // optional int32 un32HeaderID = 8;
  bool has_un32headerid() const;
  void clear_un32headerid() ;
  ::int32_t un32headerid() const;
  void set_un32headerid(::int32_t value);

  private:
  ::int32_t _internal_un32headerid() const;
  void _internal_set_un32headerid(::int32_t value);

  public:
  // optional int64 n64Score = 10;
  bool has_n64score() const;
  void clear_n64score() ;
  ::int64_t n64score() const;
  void set_n64score(::int64_t value);

  private:
  ::int64_t _internal_n64score() const;
  void _internal_set_n64score(::int64_t value);

  public:
  // optional int64 n64Diamond = 11;
  bool has_n64diamond() const;
  void clear_n64diamond() ;
  ::int64_t n64diamond() const;
  void set_n64diamond(::int64_t value);

  private:
  ::int64_t _internal_n64diamond() const;
  void _internal_set_n64diamond(::int64_t value);

  public:
  // optional int64 n64Gold = 12;
  bool has_n64gold() const;
  void clear_n64gold() ;
  ::int64_t n64gold() const;
  void set_n64gold(::int64_t value);

  private:
  ::int64_t _internal_n64gold() const;
  void _internal_set_n64gold(::int64_t value);

  public:
  // optional int64 tRegisteUTCMillisec = 13;
  bool has_tregisteutcmillisec() const;
  void clear_tregisteutcmillisec() ;
  ::int64_t tregisteutcmillisec() const;
  void set_tregisteutcmillisec(::int64_t value);

  private:
  ::int64_t _internal_tregisteutcmillisec() const;
  void _internal_set_tregisteutcmillisec(::int64_t value);

  public:
  // optional int32 n8Sex = 9;
  bool has_n8sex() const;
  void clear_n8sex() ;
  ::int32_t n8sex() const;
  void set_n8sex(::int32_t value);

  private:
  ::int32_t _internal_n8sex() const;
  void _internal_set_n8sex(::int32_t value);

  public:
  // optional int32 n32RunesBagNum = 17;
  bool has_n32runesbagnum() const;
  void clear_n32runesbagnum() ;
  ::int32_t n32runesbagnum() const;
  void set_n32runesbagnum(::int32_t value);

  private:
  ::int32_t _internal_n32runesbagnum() const;
  void _internal_set_n32runesbagnum(::int32_t value);

  public:
  // optional int64 tLastLoginUTCMillisec = 14;
  bool has_tlastloginutcmillisec() const;
  void clear_tlastloginutcmillisec() ;
  ::int64_t tlastloginutcmillisec() const;
  void set_tlastloginutcmillisec(::int64_t value);

  private:
  ::int64_t _internal_tlastloginutcmillisec() const;
  void _internal_set_tlastloginutcmillisec(::int64_t value);

  public:
  // optional int64 n32HeroNum = 15;
  bool has_n32heronum() const;
  void clear_n32heronum() ;
  ::int64_t n32heronum() const;
  void set_n32heronum(::int64_t value);

  private:
  ::int64_t _internal_n32heronum() const;
  void _internal_set_n32heronum(::int64_t value);

  public:
  // optional int64 n32RunesSlotOpenNum = 16;
  bool has_n32runesslotopennum() const;
  void clear_n32runesslotopennum() ;
  ::int64_t n32runesslotopennum() const;
  void set_n32runesslotopennum(::int64_t value);

  private:
  ::int64_t _internal_n32runesslotopennum() const;
  void _internal_set_n32runesslotopennum(::int64_t value);

  public:
  // optional int32 n32RunesSlotNum = 18;
  bool has_n32runesslotnum() const;
  void clear_n32runesslotnum() ;
  ::int32_t n32runesslotnum() const;
  void set_n32runesslotnum(::int32_t value);

  private:
  ::int32_t _internal_n32runesslotnum() const;
  void _internal_set_n32runesslotnum(::int32_t value);

  public:
  // optional int32 n32FriendsNum = 19;
  bool has_n32friendsnum() const;
  void clear_n32friendsnum() ;
  ::int32_t n32friendsnum() const;
  void set_n32friendsnum(::int32_t value);

  private:
  ::int32_t _internal_n32friendsnum() const;
  void _internal_set_n32friendsnum(::int32_t value);

  public:
  // optional int32 n32BlacklistNum = 20;
  bool has_n32blacklistnum() const;
  void clear_n32blacklistnum() ;
  ::int32_t n32blacklistnum() const;
  void set_n32blacklistnum(::int32_t value);

  private:
  ::int32_t _internal_n32blacklistnum() const;
  void _internal_set_n32blacklistnum(::int32_t value);

  public:
  // optional int32 un32TotalGameInns = 21;
  bool has_un32totalgameinns() const;
  void clear_un32totalgameinns() ;
  ::int32_t un32totalgameinns() const;
  void set_un32totalgameinns(::int32_t value);

  private:
  ::int32_t _internal_un32totalgameinns() const;
  void _internal_set_un32totalgameinns(::int32_t value);

  public:
  // optional int32 un32TotalWinInns = 22;
  bool has_un32totalwininns() const;
  void clear_un32totalwininns() ;
  ::int32_t un32totalwininns() const;
  void set_un32totalwininns(::int32_t value);

  private:
  ::int32_t _internal_un32totalwininns() const;
  void _internal_set_un32totalwininns(::int32_t value);

  public:
  // optional int32 un32TotalHeroKills = 23;
  bool has_un32totalherokills() const;
  void clear_un32totalherokills() ;
  ::int32_t un32totalherokills() const;
  void set_un32totalherokills(::int32_t value);

  private:
  ::int32_t _internal_un32totalherokills() const;
  void _internal_set_un32totalherokills(::int32_t value);

  public:
  // optional int32 un32TotalDestoryBuildings = 24;
  bool has_un32totaldestorybuildings() const;
  void clear_un32totaldestorybuildings() ;
  ::int32_t un32totaldestorybuildings() const;
  void set_un32totaldestorybuildings(::int32_t value);

  private:
  ::int32_t _internal_un32totaldestorybuildings() const;
  void _internal_set_un32totaldestorybuildings(::int32_t value);

  public:
  // optional int32 un32TotalDeadTimes = 25;
  bool has_un32totaldeadtimes() const;
  void clear_un32totaldeadtimes() ;
  ::int32_t un32totaldeadtimes() const;
  void set_un32totaldeadtimes(::int32_t value);

  private:
  ::int32_t _internal_un32totaldeadtimes() const;
  void _internal_set_un32totaldeadtimes(::int32_t value);

  public:
  // optional int32 un16UserLv = 26;
  bool has_un16userlv() const;
  void clear_un16userlv() ;
  ::int32_t un16userlv() const;
  void set_un16userlv(::int32_t value);

  private:
  ::int32_t _internal_un16userlv() const;
  void _internal_set_un16userlv(::int32_t value);

  public:
  // optional int32 un32UserCurLvExp = 27;
  bool has_un32usercurlvexp() const;
  void clear_un32usercurlvexp() ;
  ::int32_t un32usercurlvexp() const;
  void set_un32usercurlvexp(::int32_t value);

  private:
  ::int32_t _internal_un32usercurlvexp() const;
  void _internal_set_un32usercurlvexp(::int32_t value);

  public:
  // optional int64 tLastFirstWinTime = 28;
  bool has_tlastfirstwintime() const;
  void clear_tlastfirstwintime() ;
  ::int64_t tlastfirstwintime() const;
  void set_tlastfirstwintime(::int64_t value);

  private:
  ::int64_t _internal_tlastfirstwintime() const;
  void _internal_set_tlastfirstwintime(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.UserInfo.SUserDBData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 30, 4,
      98, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr szusername_;
    ::google::protobuf::internal::ArenaStringPtr szuserpwd_;
    ::google::protobuf::internal::ArenaStringPtr sznickname_;
    ::google::protobuf::internal::ArenaStringPtr szfriends_;
    ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* mguidesteps_;
    ::int64_t un64objidx_;
    int eobjtype_;
    int eusercate_;
    int euserplatform_;
    ::int32_t un32headerid_;
    ::int64_t n64score_;
    ::int64_t n64diamond_;
    ::int64_t n64gold_;
    ::int64_t tregisteutcmillisec_;
    ::int32_t n8sex_;
    ::int32_t n32runesbagnum_;
    ::int64_t tlastloginutcmillisec_;
    ::int64_t n32heronum_;
    ::int64_t n32runesslotopennum_;
    ::int32_t n32runesslotnum_;
    ::int32_t n32friendsnum_;
    ::int32_t n32blacklistnum_;
    ::int32_t un32totalgameinns_;
    ::int32_t un32totalwininns_;
    ::int32_t un32totalherokills_;
    ::int32_t un32totaldestorybuildings_;
    ::int32_t un32totaldeadtimes_;
    ::int32_t un16userlv_;
    ::int32_t un32usercurlvexp_;
    ::int64_t tlastfirstwintime_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyUsetNetInfoChange final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyUsetNetInfoChange) */ {
 public:
  inline NotifyUsetNetInfoChange() : NotifyUsetNetInfoChange(nullptr) {}
  ~NotifyUsetNetInfoChange() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyUsetNetInfoChange(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyUsetNetInfoChange(const NotifyUsetNetInfoChange& from) : NotifyUsetNetInfoChange(nullptr, from) {}
  inline NotifyUsetNetInfoChange(NotifyUsetNetInfoChange&& from) noexcept
      : NotifyUsetNetInfoChange(nullptr, std::move(from)) {}
  inline NotifyUsetNetInfoChange& operator=(const NotifyUsetNetInfoChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyUsetNetInfoChange& operator=(NotifyUsetNetInfoChange&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyUsetNetInfoChange& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyUsetNetInfoChange* internal_default_instance() {
    return reinterpret_cast<const NotifyUsetNetInfoChange*>(
        &_NotifyUsetNetInfoChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(NotifyUsetNetInfoChange& a, NotifyUsetNetInfoChange& b) { a.Swap(&b); }
  inline void Swap(NotifyUsetNetInfoChange* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyUsetNetInfoChange* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyUsetNetInfoChange* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyUsetNetInfoChange>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyUsetNetInfoChange& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyUsetNetInfoChange& from) { NotifyUsetNetInfoChange::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyUsetNetInfoChange* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyUsetNetInfoChange"; }

 protected:
  explicit NotifyUsetNetInfoChange(::google::protobuf::Arena* arena);
  NotifyUsetNetInfoChange(::google::protobuf::Arena* arena, const NotifyUsetNetInfoChange& from);
  NotifyUsetNetInfoChange(::google::protobuf::Arena* arena, NotifyUsetNetInfoChange&& from) noexcept
      : NotifyUsetNetInfoChange(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNetinfoFieldNumber = 3,
    kGuidFieldNumber = 2,
    kMsgidFieldNumber = 1,
  };
  // optional .CSToSS.SUserNetInfo netinfo = 3;
  bool has_netinfo() const;
  void clear_netinfo() ;
  const ::CSToSS::SUserNetInfo& netinfo() const;
  PROTOBUF_NODISCARD ::CSToSS::SUserNetInfo* release_netinfo();
  ::CSToSS::SUserNetInfo* mutable_netinfo();
  void set_allocated_netinfo(::CSToSS::SUserNetInfo* value);
  void unsafe_arena_set_allocated_netinfo(::CSToSS::SUserNetInfo* value);
  ::CSToSS::SUserNetInfo* unsafe_arena_release_netinfo();

  private:
  const ::CSToSS::SUserNetInfo& _internal_netinfo() const;
  ::CSToSS::SUserNetInfo* _internal_mutable_netinfo();

  public:
  // optional uint64 guid = 2;
  bool has_guid() const;
  void clear_guid() ;
  ::uint64_t guid() const;
  void set_guid(::uint64_t value);

  private:
  ::uint64_t _internal_guid() const;
  void _internal_set_guid(::uint64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUsetNetInfoChange];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyUsetNetInfoChange)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CSToSS::SUserNetInfo* netinfo_;
    ::uint64_t guid_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyUserOnline final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyUserOnline) */ {
 public:
  inline NotifyUserOnline() : NotifyUserOnline(nullptr) {}
  ~NotifyUserOnline() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyUserOnline(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyUserOnline(const NotifyUserOnline& from) : NotifyUserOnline(nullptr, from) {}
  inline NotifyUserOnline(NotifyUserOnline&& from) noexcept
      : NotifyUserOnline(nullptr, std::move(from)) {}
  inline NotifyUserOnline& operator=(const NotifyUserOnline& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyUserOnline& operator=(NotifyUserOnline&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyUserOnline& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyUserOnline* internal_default_instance() {
    return reinterpret_cast<const NotifyUserOnline*>(
        &_NotifyUserOnline_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(NotifyUserOnline& a, NotifyUserOnline& b) { a.Swap(&b); }
  inline void Swap(NotifyUserOnline* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyUserOnline* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyUserOnline* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyUserOnline>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyUserOnline& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyUserOnline& from) { NotifyUserOnline::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyUserOnline* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyUserOnline"; }

 protected:
  explicit NotifyUserOnline(::google::protobuf::Arena* arena);
  NotifyUserOnline(::google::protobuf::Arena* arena, const NotifyUserOnline& from);
  NotifyUserOnline(::google::protobuf::Arena* arena, NotifyUserOnline&& from) noexcept
      : NotifyUserOnline(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsernetinfoFieldNumber = 4,
    kBattleidFieldNumber = 2,
    kUserguidFieldNumber = 3,
    kMsgidFieldNumber = 1,
  };
  // optional .CSToSS.SUserNetInfo usernetinfo = 4;
  bool has_usernetinfo() const;
  void clear_usernetinfo() ;
  const ::CSToSS::SUserNetInfo& usernetinfo() const;
  PROTOBUF_NODISCARD ::CSToSS::SUserNetInfo* release_usernetinfo();
  ::CSToSS::SUserNetInfo* mutable_usernetinfo();
  void set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value);
  void unsafe_arena_set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value);
  ::CSToSS::SUserNetInfo* unsafe_arena_release_usernetinfo();

  private:
  const ::CSToSS::SUserNetInfo& _internal_usernetinfo() const;
  ::CSToSS::SUserNetInfo* _internal_mutable_usernetinfo();

  public:
  // optional uint64 battleid = 2;
  bool has_battleid() const;
  void clear_battleid() ;
  ::uint64_t battleid() const;
  void set_battleid(::uint64_t value);

  private:
  ::uint64_t _internal_battleid() const;
  void _internal_set_battleid(::uint64_t value);

  public:
  // optional uint64 userguid = 3;
  bool has_userguid() const;
  void clear_userguid() ;
  ::uint64_t userguid() const;
  void set_userguid(::uint64_t value);

  private:
  ::uint64_t _internal_userguid() const;
  void _internal_set_userguid(::uint64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOnline];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyUserOnline)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CSToSS::SUserNetInfo* usernetinfo_;
    ::uint64_t battleid_;
    ::uint64_t userguid_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class NotifyOBUser final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.NotifyOBUser) */ {
 public:
  inline NotifyOBUser() : NotifyOBUser(nullptr) {}
  ~NotifyOBUser() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyOBUser(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyOBUser(const NotifyOBUser& from) : NotifyOBUser(nullptr, from) {}
  inline NotifyOBUser(NotifyOBUser&& from) noexcept
      : NotifyOBUser(nullptr, std::move(from)) {}
  inline NotifyOBUser& operator=(const NotifyOBUser& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyOBUser& operator=(NotifyOBUser&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyOBUser& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyOBUser* internal_default_instance() {
    return reinterpret_cast<const NotifyOBUser*>(
        &_NotifyOBUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(NotifyOBUser& a, NotifyOBUser& b) { a.Swap(&b); }
  inline void Swap(NotifyOBUser* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyOBUser* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyOBUser* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NotifyOBUser>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyOBUser& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyOBUser& from) { NotifyOBUser::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NotifyOBUser* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.NotifyOBUser"; }

 protected:
  explicit NotifyOBUser(::google::protobuf::Arena* arena);
  NotifyOBUser(::google::protobuf::Arena* arena, const NotifyOBUser& from);
  NotifyOBUser(::google::protobuf::Arena* arena, NotifyOBUser&& from) noexcept
      : NotifyOBUser(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using OBPosInfo = NotifyOBUser_OBPosInfo;

  // accessors -------------------------------------------------------
  enum : int {
    kObinfoFieldNumber = 2,
    kBattleidFieldNumber = 3,
    kMsgidFieldNumber = 1,
  };
  // repeated .CSToSS.NotifyOBUser.OBPosInfo obinfo = 2;
  int obinfo_size() const;
  private:
  int _internal_obinfo_size() const;

  public:
  void clear_obinfo() ;
  ::CSToSS::NotifyOBUser_OBPosInfo* mutable_obinfo(int index);
  ::google::protobuf::RepeatedPtrField<::CSToSS::NotifyOBUser_OBPosInfo>* mutable_obinfo();

  private:
  const ::google::protobuf::RepeatedPtrField<::CSToSS::NotifyOBUser_OBPosInfo>& _internal_obinfo() const;
  ::google::protobuf::RepeatedPtrField<::CSToSS::NotifyOBUser_OBPosInfo>* _internal_mutable_obinfo();
  public:
  const ::CSToSS::NotifyOBUser_OBPosInfo& obinfo(int index) const;
  ::CSToSS::NotifyOBUser_OBPosInfo* add_obinfo();
  const ::google::protobuf::RepeatedPtrField<::CSToSS::NotifyOBUser_OBPosInfo>& obinfo() const;
  // optional uint64 battleid = 3;
  bool has_battleid() const;
  void clear_battleid() ;
  ::uint64_t battleid() const;
  void set_battleid(::uint64_t value);

  private:
  ::uint64_t _internal_battleid() const;
  void _internal_set_battleid(::uint64_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyOBUser];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.NotifyOBUser)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CSToSS::NotifyOBUser_OBPosInfo > obinfo_;
    ::uint64_t battleid_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class CreateBattle_CreateBattleUserInfo_RunePage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage) */ {
 public:
  inline CreateBattle_CreateBattleUserInfo_RunePage() : CreateBattle_CreateBattleUserInfo_RunePage(nullptr) {}
  ~CreateBattle_CreateBattleUserInfo_RunePage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateBattle_CreateBattleUserInfo_RunePage(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateBattle_CreateBattleUserInfo_RunePage(const CreateBattle_CreateBattleUserInfo_RunePage& from) : CreateBattle_CreateBattleUserInfo_RunePage(nullptr, from) {}
  inline CreateBattle_CreateBattleUserInfo_RunePage(CreateBattle_CreateBattleUserInfo_RunePage&& from) noexcept
      : CreateBattle_CreateBattleUserInfo_RunePage(nullptr, std::move(from)) {}
  inline CreateBattle_CreateBattleUserInfo_RunePage& operator=(const CreateBattle_CreateBattleUserInfo_RunePage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateBattle_CreateBattleUserInfo_RunePage& operator=(CreateBattle_CreateBattleUserInfo_RunePage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateBattle_CreateBattleUserInfo_RunePage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateBattle_CreateBattleUserInfo_RunePage* internal_default_instance() {
    return reinterpret_cast<const CreateBattle_CreateBattleUserInfo_RunePage*>(
        &_CreateBattle_CreateBattleUserInfo_RunePage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(CreateBattle_CreateBattleUserInfo_RunePage& a, CreateBattle_CreateBattleUserInfo_RunePage& b) { a.Swap(&b); }
  inline void Swap(CreateBattle_CreateBattleUserInfo_RunePage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateBattle_CreateBattleUserInfo_RunePage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateBattle_CreateBattleUserInfo_RunePage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateBattle_CreateBattleUserInfo_RunePage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateBattle_CreateBattleUserInfo_RunePage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateBattle_CreateBattleUserInfo_RunePage& from) { CreateBattle_CreateBattleUserInfo_RunePage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateBattle_CreateBattleUserInfo_RunePage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.CreateBattle.CreateBattleUserInfo.RunePage"; }

 protected:
  explicit CreateBattle_CreateBattleUserInfo_RunePage(::google::protobuf::Arena* arena);
  CreateBattle_CreateBattleUserInfo_RunePage(::google::protobuf::Arena* arena, const CreateBattle_CreateBattleUserInfo_RunePage& from);
  CreateBattle_CreateBattleUserInfo_RunePage(::google::protobuf::Arena* arena, CreateBattle_CreateBattleUserInfo_RunePage&& from) noexcept
      : CreateBattle_CreateBattleUserInfo_RunePage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using RuneInfo = CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo;

  // accessors -------------------------------------------------------
  enum : int {
    kRuneEffectsFieldNumber = 2,
    kRunePageFieldNumber = 1,
  };
  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo runeEffects = 2;
  int runeeffects_size() const;
  private:
  int _internal_runeeffects_size() const;

  public:
  void clear_runeeffects() ;
  ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* mutable_runeeffects(int index);
  ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo>* mutable_runeeffects();

  private:
  const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo>& _internal_runeeffects() const;
  ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo>* _internal_mutable_runeeffects();
  public:
  const ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& runeeffects(int index) const;
  ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* add_runeeffects();
  const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo>& runeeffects() const;
  // optional int32 runePage = 1;
  bool has_runepage() const;
  void clear_runepage() ;
  ::int32_t runepage() const;
  void set_runepage(::int32_t value);

  private:
  ::int32_t _internal_runepage() const;
  void _internal_set_runepage(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo > runeeffects_;
    ::int32_t runepage_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class AskRegisteRet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.AskRegisteRet) */ {
 public:
  inline AskRegisteRet() : AskRegisteRet(nullptr) {}
  ~AskRegisteRet() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AskRegisteRet(
      ::google::protobuf::internal::ConstantInitialized);

  inline AskRegisteRet(const AskRegisteRet& from) : AskRegisteRet(nullptr, from) {}
  inline AskRegisteRet(AskRegisteRet&& from) noexcept
      : AskRegisteRet(nullptr, std::move(from)) {}
  inline AskRegisteRet& operator=(const AskRegisteRet& from) {
    CopyFrom(from);
    return *this;
  }
  inline AskRegisteRet& operator=(AskRegisteRet&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AskRegisteRet& default_instance() {
    return *internal_default_instance();
  }
  static inline const AskRegisteRet* internal_default_instance() {
    return reinterpret_cast<const AskRegisteRet*>(
        &_AskRegisteRet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(AskRegisteRet& a, AskRegisteRet& b) { a.Swap(&b); }
  inline void Swap(AskRegisteRet* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AskRegisteRet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AskRegisteRet* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AskRegisteRet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AskRegisteRet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AskRegisteRet& from) { AskRegisteRet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AskRegisteRet* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.AskRegisteRet"; }

 protected:
  explicit AskRegisteRet(::google::protobuf::Arena* arena);
  AskRegisteRet(::google::protobuf::Arena* arena, const AskRegisteRet& from);
  AskRegisteRet(::google::protobuf::Arena* arena, AskRegisteRet&& from) noexcept
      : AskRegisteRet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using GSInfo = AskRegisteRet_GSInfo;

  // accessors -------------------------------------------------------
  enum : int {
    kGsinfoFieldNumber = 5,
    kTimeFieldNumber = 3,
    kRetFieldNumber = 2,
    kBasegsidFieldNumber = 4,
    kMsgidFieldNumber = 1,
  };
  // repeated .CSToSS.AskRegisteRet.GSInfo gsinfo = 5;
  int gsinfo_size() const;
  private:
  int _internal_gsinfo_size() const;

  public:
  void clear_gsinfo() ;
  ::CSToSS::AskRegisteRet_GSInfo* mutable_gsinfo(int index);
  ::google::protobuf::RepeatedPtrField<::CSToSS::AskRegisteRet_GSInfo>* mutable_gsinfo();

  private:
  const ::google::protobuf::RepeatedPtrField<::CSToSS::AskRegisteRet_GSInfo>& _internal_gsinfo() const;
  ::google::protobuf::RepeatedPtrField<::CSToSS::AskRegisteRet_GSInfo>* _internal_mutable_gsinfo();
  public:
  const ::CSToSS::AskRegisteRet_GSInfo& gsinfo(int index) const;
  ::CSToSS::AskRegisteRet_GSInfo* add_gsinfo();
  const ::google::protobuf::RepeatedPtrField<::CSToSS::AskRegisteRet_GSInfo>& gsinfo() const;
  // optional int64 time = 3;
  bool has_time() const;
  void clear_time() ;
  ::int64_t time() const;
  void set_time(::int64_t value);

  private:
  ::int64_t _internal_time() const;
  void _internal_set_time(::int64_t value);

  public:
  // optional int32 ret = 2;
  bool has_ret() const;
  void clear_ret() ;
  ::int32_t ret() const;
  void set_ret(::int32_t value);

  private:
  ::int32_t _internal_ret() const;
  void _internal_set_ret(::int32_t value);

  public:
  // optional int32 basegsid = 4;
  bool has_basegsid() const;
  void clear_basegsid() ;
  ::int32_t basegsid() const;
  void set_basegsid(::int32_t value);

  private:
  ::int32_t _internal_basegsid() const;
  void _internal_set_basegsid(::int32_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskRegisteRet];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.AskRegisteRet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CSToSS::AskRegisteRet_GSInfo > gsinfo_;
    ::int64_t time_;
    ::int32_t ret_;
    ::int32_t basegsid_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class UserInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.UserInfo) */ {
 public:
  inline UserInfo() : UserInfo(nullptr) {}
  ~UserInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UserInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline UserInfo(const UserInfo& from) : UserInfo(nullptr, from) {}
  inline UserInfo(UserInfo&& from) noexcept
      : UserInfo(nullptr, std::move(from)) {}
  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserInfo& operator=(UserInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
        &_UserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(UserInfo& a, UserInfo& b) { a.Swap(&b); }
  inline void Swap(UserInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UserInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UserInfo& from) { UserInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.UserInfo"; }

 protected:
  explicit UserInfo(::google::protobuf::Arena* arena);
  UserInfo(::google::protobuf::Arena* arena, const UserInfo& from);
  UserInfo(::google::protobuf::Arena* arena, UserInfo&& from) noexcept
      : UserInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using SUserDBData = UserInfo_SUserDBData;
  using SUserRunesRuntimeData = UserInfo_SUserRunesRuntimeData;

  // accessors -------------------------------------------------------
  enum : int {
    kHerolistFieldNumber = 4,
    kRunesBagFieldNumber = 5,
    kRunesSlotFieldNumber = 6,
    kUsernetinfoFieldNumber = 2,
    kUserdataFieldNumber = 3,
    kIfGuideFieldNumber = 7,
  };
  // repeated int32 herolist = 4;
  int herolist_size() const;
  private:
  int _internal_herolist_size() const;

  public:
  void clear_herolist() ;
  ::int32_t herolist(int index) const;
  void set_herolist(int index, ::int32_t value);
  void add_herolist(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& herolist() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_herolist();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_herolist() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_herolist();

  public:
  // repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesBag = 5;
  int runesbag_size() const;
  private:
  int _internal_runesbag_size() const;

  public:
  void clear_runesbag() ;
  ::CSToSS::UserInfo_SUserRunesRuntimeData* mutable_runesbag(int index);
  ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>* mutable_runesbag();

  private:
  const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>& _internal_runesbag() const;
  ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>* _internal_mutable_runesbag();
  public:
  const ::CSToSS::UserInfo_SUserRunesRuntimeData& runesbag(int index) const;
  ::CSToSS::UserInfo_SUserRunesRuntimeData* add_runesbag();
  const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>& runesbag() const;
  // repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesSlot = 6;
  int runesslot_size() const;
  private:
  int _internal_runesslot_size() const;

  public:
  void clear_runesslot() ;
  ::CSToSS::UserInfo_SUserRunesRuntimeData* mutable_runesslot(int index);
  ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>* mutable_runesslot();

  private:
  const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>& _internal_runesslot() const;
  ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>* _internal_mutable_runesslot();
  public:
  const ::CSToSS::UserInfo_SUserRunesRuntimeData& runesslot(int index) const;
  ::CSToSS::UserInfo_SUserRunesRuntimeData* add_runesslot();
  const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>& runesslot() const;
  // optional .CSToSS.SUserNetInfo usernetinfo = 2;
  bool has_usernetinfo() const;
  void clear_usernetinfo() ;
  const ::CSToSS::SUserNetInfo& usernetinfo() const;
  PROTOBUF_NODISCARD ::CSToSS::SUserNetInfo* release_usernetinfo();
  ::CSToSS::SUserNetInfo* mutable_usernetinfo();
  void set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value);
  void unsafe_arena_set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value);
  ::CSToSS::SUserNetInfo* unsafe_arena_release_usernetinfo();

  private:
  const ::CSToSS::SUserNetInfo& _internal_usernetinfo() const;
  ::CSToSS::SUserNetInfo* _internal_mutable_usernetinfo();

  public:
  // optional .CSToSS.UserInfo.SUserDBData userdata = 3;
  bool has_userdata() const;
  void clear_userdata() ;
  const ::CSToSS::UserInfo_SUserDBData& userdata() const;
  PROTOBUF_NODISCARD ::CSToSS::UserInfo_SUserDBData* release_userdata();
  ::CSToSS::UserInfo_SUserDBData* mutable_userdata();
  void set_allocated_userdata(::CSToSS::UserInfo_SUserDBData* value);
  void unsafe_arena_set_allocated_userdata(::CSToSS::UserInfo_SUserDBData* value);
  ::CSToSS::UserInfo_SUserDBData* unsafe_arena_release_userdata();

  private:
  const ::CSToSS::UserInfo_SUserDBData& _internal_userdata() const;
  ::CSToSS::UserInfo_SUserDBData* _internal_mutable_userdata();

  public:
  // optional bool ifGuide = 7;
  bool has_ifguide() const;
  void clear_ifguide() ;
  bool ifguide() const;
  void set_ifguide(bool value);

  private:
  bool _internal_ifguide() const;
  void _internal_set_ifguide(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.UserInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 4,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> herolist_;
    ::google::protobuf::RepeatedPtrField< ::CSToSS::UserInfo_SUserRunesRuntimeData > runesbag_;
    ::google::protobuf::RepeatedPtrField< ::CSToSS::UserInfo_SUserRunesRuntimeData > runesslot_;
    ::CSToSS::SUserNetInfo* usernetinfo_;
    ::CSToSS::UserInfo_SUserDBData* userdata_;
    bool ifguide_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class CreateBattle_CreateBattleUserInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.CreateBattle.CreateBattleUserInfo) */ {
 public:
  inline CreateBattle_CreateBattleUserInfo() : CreateBattle_CreateBattleUserInfo(nullptr) {}
  ~CreateBattle_CreateBattleUserInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateBattle_CreateBattleUserInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateBattle_CreateBattleUserInfo(const CreateBattle_CreateBattleUserInfo& from) : CreateBattle_CreateBattleUserInfo(nullptr, from) {}
  inline CreateBattle_CreateBattleUserInfo(CreateBattle_CreateBattleUserInfo&& from) noexcept
      : CreateBattle_CreateBattleUserInfo(nullptr, std::move(from)) {}
  inline CreateBattle_CreateBattleUserInfo& operator=(const CreateBattle_CreateBattleUserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateBattle_CreateBattleUserInfo& operator=(CreateBattle_CreateBattleUserInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateBattle_CreateBattleUserInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateBattle_CreateBattleUserInfo* internal_default_instance() {
    return reinterpret_cast<const CreateBattle_CreateBattleUserInfo*>(
        &_CreateBattle_CreateBattleUserInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(CreateBattle_CreateBattleUserInfo& a, CreateBattle_CreateBattleUserInfo& b) { a.Swap(&b); }
  inline void Swap(CreateBattle_CreateBattleUserInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateBattle_CreateBattleUserInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateBattle_CreateBattleUserInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateBattle_CreateBattleUserInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateBattle_CreateBattleUserInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateBattle_CreateBattleUserInfo& from) { CreateBattle_CreateBattleUserInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateBattle_CreateBattleUserInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.CreateBattle.CreateBattleUserInfo"; }

 protected:
  explicit CreateBattle_CreateBattleUserInfo(::google::protobuf::Arena* arena);
  CreateBattle_CreateBattleUserInfo(::google::protobuf::Arena* arena, const CreateBattle_CreateBattleUserInfo& from);
  CreateBattle_CreateBattleUserInfo(::google::protobuf::Arena* arena, CreateBattle_CreateBattleUserInfo&& from) noexcept
      : CreateBattle_CreateBattleUserInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using RunePage = CreateBattle_CreateBattleUserInfo_RunePage;

  // accessors -------------------------------------------------------
  enum : int {
    kCanUseHeroListFieldNumber = 11,
    kRunePagesFieldNumber = 12,
    kNickNameFieldNumber = 5,
    kUsernetinfoFieldNumber = 1,
    kGuidFieldNumber = 2,
    kSeatFieldNumber = 3,
    kGrpIDFieldNumber = 4,
    kDiamondFieldNumber = 6,
    kGoldFieldNumber = 7,
    kVipLvFieldNumber = 8,
    kIfOBFieldNumber = 9,
    kIfGMFieldNumber = 10,
    kIfAiRobotFieldNumber = 13,
  };
  // repeated int32 canUseHeroList = 11;
  int canuseherolist_size() const;
  private:
  int _internal_canuseherolist_size() const;

  public:
  void clear_canuseherolist() ;
  ::int32_t canuseherolist(int index) const;
  void set_canuseherolist(int index, ::int32_t value);
  void add_canuseherolist(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& canuseherolist() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_canuseherolist();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_canuseherolist() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_canuseherolist();

  public:
  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage runePages = 12;
  int runepages_size() const;
  private:
  int _internal_runepages_size() const;

  public:
  void clear_runepages() ;
  ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage* mutable_runepages(int index);
  ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage>* mutable_runepages();

  private:
  const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage>& _internal_runepages() const;
  ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage>* _internal_mutable_runepages();
  public:
  const ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage& runepages(int index) const;
  ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage* add_runepages();
  const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage>& runepages() const;
  // optional string nickName = 5;
  bool has_nickname() const;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // optional .CSToSS.SUserNetInfo usernetinfo = 1;
  bool has_usernetinfo() const;
  void clear_usernetinfo() ;
  const ::CSToSS::SUserNetInfo& usernetinfo() const;
  PROTOBUF_NODISCARD ::CSToSS::SUserNetInfo* release_usernetinfo();
  ::CSToSS::SUserNetInfo* mutable_usernetinfo();
  void set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value);
  void unsafe_arena_set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value);
  ::CSToSS::SUserNetInfo* unsafe_arena_release_usernetinfo();

  private:
  const ::CSToSS::SUserNetInfo& _internal_usernetinfo() const;
  ::CSToSS::SUserNetInfo* _internal_mutable_usernetinfo();

  public:
  // optional int64 guid = 2;
  bool has_guid() const;
  void clear_guid() ;
  ::int64_t guid() const;
  void set_guid(::int64_t value);

  private:
  ::int64_t _internal_guid() const;
  void _internal_set_guid(::int64_t value);

  public:
  // optional int32 seat = 3;
  bool has_seat() const;
  void clear_seat() ;
  ::int32_t seat() const;
  void set_seat(::int32_t value);

  private:
  ::int32_t _internal_seat() const;
  void _internal_set_seat(::int32_t value);

  public:
  // optional int32 grpID = 4;
  bool has_grpid() const;
  void clear_grpid() ;
  ::int32_t grpid() const;
  void set_grpid(::int32_t value);

  private:
  ::int32_t _internal_grpid() const;
  void _internal_set_grpid(::int32_t value);

  public:
  // optional int64 diamond = 6;
  bool has_diamond() const;
  void clear_diamond() ;
  ::int64_t diamond() const;
  void set_diamond(::int64_t value);

  private:
  ::int64_t _internal_diamond() const;
  void _internal_set_diamond(::int64_t value);

  public:
  // optional int64 gold = 7;
  bool has_gold() const;
  void clear_gold() ;
  ::int64_t gold() const;
  void set_gold(::int64_t value);

  private:
  ::int64_t _internal_gold() const;
  void _internal_set_gold(::int64_t value);

  public:
  // optional int32 vipLv = 8;
  bool has_viplv() const;
  void clear_viplv() ;
  ::int32_t viplv() const;
  void set_viplv(::int32_t value);

  private:
  ::int32_t _internal_viplv() const;
  void _internal_set_viplv(::int32_t value);

  public:
  // optional bool ifOB = 9;
  bool has_ifob() const;
  void clear_ifob() ;
  bool ifob() const;
  void set_ifob(bool value);

  private:
  bool _internal_ifob() const;
  void _internal_set_ifob(bool value);

  public:
  // optional bool ifGM = 10;
  bool has_ifgm() const;
  void clear_ifgm() ;
  bool ifgm() const;
  void set_ifgm(bool value);

  private:
  bool _internal_ifgm() const;
  void _internal_set_ifgm(bool value);

  public:
  // optional bool ifAiRobot = 13;
  bool has_ifairobot() const;
  void clear_ifairobot() ;
  bool ifairobot() const;
  void set_ifairobot(bool value);

  private:
  bool _internal_ifairobot() const;
  void _internal_set_ifairobot(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.CreateBattle.CreateBattleUserInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 2,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> canuseherolist_;
    ::google::protobuf::RepeatedPtrField< ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage > runepages_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::CSToSS::SUserNetInfo* usernetinfo_;
    ::int64_t guid_;
    ::int32_t seat_;
    ::int32_t grpid_;
    ::int64_t diamond_;
    ::int64_t gold_;
    ::int32_t viplv_;
    bool ifob_;
    bool ifgm_;
    bool ifairobot_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class OrderBeginNewBattle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.OrderBeginNewBattle) */ {
 public:
  inline OrderBeginNewBattle() : OrderBeginNewBattle(nullptr) {}
  ~OrderBeginNewBattle() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderBeginNewBattle(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderBeginNewBattle(const OrderBeginNewBattle& from) : OrderBeginNewBattle(nullptr, from) {}
  inline OrderBeginNewBattle(OrderBeginNewBattle&& from) noexcept
      : OrderBeginNewBattle(nullptr, std::move(from)) {}
  inline OrderBeginNewBattle& operator=(const OrderBeginNewBattle& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderBeginNewBattle& operator=(OrderBeginNewBattle&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderBeginNewBattle& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderBeginNewBattle* internal_default_instance() {
    return reinterpret_cast<const OrderBeginNewBattle*>(
        &_OrderBeginNewBattle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(OrderBeginNewBattle& a, OrderBeginNewBattle& b) { a.Swap(&b); }
  inline void Swap(OrderBeginNewBattle* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderBeginNewBattle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderBeginNewBattle* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OrderBeginNewBattle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderBeginNewBattle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderBeginNewBattle& from) { OrderBeginNewBattle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OrderBeginNewBattle* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.OrderBeginNewBattle"; }

 protected:
  explicit OrderBeginNewBattle(::google::protobuf::Arena* arena);
  OrderBeginNewBattle(::google::protobuf::Arena* arena, const OrderBeginNewBattle& from);
  OrderBeginNewBattle(::google::protobuf::Arena* arena, OrderBeginNewBattle&& from) noexcept
      : OrderBeginNewBattle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserRoomInfoFieldNumber = 6,
    kUserinfoFieldNumber = 7,
    kBattleidFieldNumber = 2,
    kStateFieldNumber = 3,
    kMapidFieldNumber = 4,
    kSsidFieldNumber = 5,
    kMsgidFieldNumber = 1,
  };
  // repeated .CSToSS.UserRoomInfo userRoomInfo = 6;
  int userroominfo_size() const;
  private:
  int _internal_userroominfo_size() const;

  public:
  void clear_userroominfo() ;
  ::CSToSS::UserRoomInfo* mutable_userroominfo(int index);
  ::google::protobuf::RepeatedPtrField<::CSToSS::UserRoomInfo>* mutable_userroominfo();

  private:
  const ::google::protobuf::RepeatedPtrField<::CSToSS::UserRoomInfo>& _internal_userroominfo() const;
  ::google::protobuf::RepeatedPtrField<::CSToSS::UserRoomInfo>* _internal_mutable_userroominfo();
  public:
  const ::CSToSS::UserRoomInfo& userroominfo(int index) const;
  ::CSToSS::UserRoomInfo* add_userroominfo();
  const ::google::protobuf::RepeatedPtrField<::CSToSS::UserRoomInfo>& userroominfo() const;
  // repeated .CSToSS.UserInfo userinfo = 7;
  int userinfo_size() const;
  private:
  int _internal_userinfo_size() const;

  public:
  void clear_userinfo() ;
  ::CSToSS::UserInfo* mutable_userinfo(int index);
  ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo>* mutable_userinfo();

  private:
  const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo>& _internal_userinfo() const;
  ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo>* _internal_mutable_userinfo();
  public:
  const ::CSToSS::UserInfo& userinfo(int index) const;
  ::CSToSS::UserInfo* add_userinfo();
  const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo>& userinfo() const;
  // optional uint64 battleid = 2;
  bool has_battleid() const;
  void clear_battleid() ;
  ::uint64_t battleid() const;
  void set_battleid(::uint64_t value);

  private:
  ::uint64_t _internal_battleid() const;
  void _internal_set_battleid(::uint64_t value);

  public:
  // optional int32 state = 3;
  bool has_state() const;
  void clear_state() ;
  ::int32_t state() const;
  void set_state(::int32_t value);

  private:
  ::int32_t _internal_state() const;
  void _internal_set_state(::int32_t value);

  public:
  // optional int32 mapid = 4;
  bool has_mapid() const;
  void clear_mapid() ;
  ::int32_t mapid() const;
  void set_mapid(::int32_t value);

  private:
  ::int32_t _internal_mapid() const;
  void _internal_set_mapid(::int32_t value);

  public:
  // optional int32 ssid = 5;
  bool has_ssid() const;
  void clear_ssid() ;
  ::int32_t ssid() const;
  void set_ssid(::int32_t value);

  private:
  ::int32_t _internal_ssid() const;
  void _internal_set_ssid(::int32_t value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OrderBeginNewBattle];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.OrderBeginNewBattle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CSToSS::UserRoomInfo > userroominfo_;
    ::google::protobuf::RepeatedPtrField< ::CSToSS::UserInfo > userinfo_;
    ::uint64_t battleid_;
    ::int32_t state_;
    ::int32_t mapid_;
    ::int32_t ssid_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};
// -------------------------------------------------------------------

class CreateBattle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CSToSS.CreateBattle) */ {
 public:
  inline CreateBattle() : CreateBattle(nullptr) {}
  ~CreateBattle() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateBattle(
      ::google::protobuf::internal::ConstantInitialized);

  inline CreateBattle(const CreateBattle& from) : CreateBattle(nullptr, from) {}
  inline CreateBattle(CreateBattle&& from) noexcept
      : CreateBattle(nullptr, std::move(from)) {}
  inline CreateBattle& operator=(const CreateBattle& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateBattle& operator=(CreateBattle&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateBattle& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreateBattle* internal_default_instance() {
    return reinterpret_cast<const CreateBattle*>(
        &_CreateBattle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(CreateBattle& a, CreateBattle& b) { a.Swap(&b); }
  inline void Swap(CreateBattle* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateBattle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateBattle* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CreateBattle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateBattle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateBattle& from) { CreateBattle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CreateBattle* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CSToSS.CreateBattle"; }

 protected:
  explicit CreateBattle(::google::protobuf::Arena* arena);
  CreateBattle(::google::protobuf::Arena* arena, const CreateBattle& from);
  CreateBattle(::google::protobuf::Arena* arena, CreateBattle&& from) noexcept
      : CreateBattle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------
  using CreateBattleUserInfo = CreateBattle_CreateBattleUserInfo;
  using AiRobotInfo = CreateBattle_AiRobotInfo;
  using BattleType = CreateBattle_BattleType;
  static constexpr BattleType eBattleType_Free = CreateBattle_BattleType_eBattleType_Free;
  static constexpr BattleType eBattleType_Room = CreateBattle_BattleType_eBattleType_Room;
  static constexpr BattleType eBattleType_Match = CreateBattle_BattleType_eBattleType_Match;
  static constexpr BattleType eBattleType_Guide1 = CreateBattle_BattleType_eBattleType_Guide1;
  static constexpr BattleType eBattleType_Guide2 = CreateBattle_BattleType_eBattleType_Guide2;
  static inline bool BattleType_IsValid(int value) {
    return CreateBattle_BattleType_IsValid(value);
  }
  static constexpr BattleType BattleType_MIN = CreateBattle_BattleType_BattleType_MIN;
  static constexpr BattleType BattleType_MAX = CreateBattle_BattleType_BattleType_MAX;
  static constexpr int BattleType_ARRAYSIZE = CreateBattle_BattleType_BattleType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* BattleType_descriptor() {
    return CreateBattle_BattleType_descriptor();
  }
  template <typename T>
  static inline const std::string& BattleType_Name(T value) {
    return CreateBattle_BattleType_Name(value);
  }
  static inline bool BattleType_Parse(absl::string_view name, BattleType* value) {
    return CreateBattle_BattleType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kUserinfoFieldNumber = 5,
    kAiRobotListFieldNumber = 6,
    kBattleidFieldNumber = 2,
    kMapidFieldNumber = 3,
    kBattletypeFieldNumber = 4,
    kMsgidFieldNumber = 1,
  };
  // repeated .CSToSS.CreateBattle.CreateBattleUserInfo userinfo = 5;
  int userinfo_size() const;
  private:
  int _internal_userinfo_size() const;

  public:
  void clear_userinfo() ;
  ::CSToSS::CreateBattle_CreateBattleUserInfo* mutable_userinfo(int index);
  ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo>* mutable_userinfo();

  private:
  const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo>& _internal_userinfo() const;
  ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo>* _internal_mutable_userinfo();
  public:
  const ::CSToSS::CreateBattle_CreateBattleUserInfo& userinfo(int index) const;
  ::CSToSS::CreateBattle_CreateBattleUserInfo* add_userinfo();
  const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo>& userinfo() const;
  // repeated .CSToSS.CreateBattle.AiRobotInfo aiRobotList = 6;
  int airobotlist_size() const;
  private:
  int _internal_airobotlist_size() const;

  public:
  void clear_airobotlist() ;
  ::CSToSS::CreateBattle_AiRobotInfo* mutable_airobotlist(int index);
  ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_AiRobotInfo>* mutable_airobotlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_AiRobotInfo>& _internal_airobotlist() const;
  ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_AiRobotInfo>* _internal_mutable_airobotlist();
  public:
  const ::CSToSS::CreateBattle_AiRobotInfo& airobotlist(int index) const;
  ::CSToSS::CreateBattle_AiRobotInfo* add_airobotlist();
  const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_AiRobotInfo>& airobotlist() const;
  // optional uint64 battleid = 2;
  bool has_battleid() const;
  void clear_battleid() ;
  ::uint64_t battleid() const;
  void set_battleid(::uint64_t value);

  private:
  ::uint64_t _internal_battleid() const;
  void _internal_set_battleid(::uint64_t value);

  public:
  // optional int32 mapid = 3;
  bool has_mapid() const;
  void clear_mapid() ;
  ::int32_t mapid() const;
  void set_mapid(::int32_t value);

  private:
  ::int32_t _internal_mapid() const;
  void _internal_set_mapid(::int32_t value);

  public:
  // optional .CSToSS.CreateBattle.BattleType battletype = 4;
  bool has_battletype() const;
  void clear_battletype() ;
  ::CSToSS::CreateBattle_BattleType battletype() const;
  void set_battletype(::CSToSS::CreateBattle_BattleType value);

  private:
  ::CSToSS::CreateBattle_BattleType _internal_battletype() const;
  void _internal_set_battletype(::CSToSS::CreateBattle_BattleType value);

  public:
  // optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_CreateBattle];
  bool has_msgid() const;
  void clear_msgid() ;
  ::CSToSS::MsgId msgid() const;
  void set_msgid(::CSToSS::MsgId value);

  private:
  ::CSToSS::MsgId _internal_msgid() const;
  void _internal_set_msgid(::CSToSS::MsgId value);

  public:
  // @@protoc_insertion_point(class_scope:CSToSS.CreateBattle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 4,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CSToSS::CreateBattle_CreateBattleUserInfo > userinfo_;
    ::google::protobuf::RepeatedPtrField< ::CSToSS::CreateBattle_AiRobotInfo > airobotlist_;
    ::uint64_t battleid_;
    ::int32_t mapid_;
    int battletype_;
    int msgid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_CSToSS_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SSGameFuncSwitch

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGameSwitch];
inline bool SSGameFuncSwitch::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void SSGameFuncSwitch::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16426;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::CSToSS::MsgId SSGameFuncSwitch::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.SSGameFuncSwitch.msgid)
  return _internal_msgid();
}
inline void SSGameFuncSwitch::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CSToSS.SSGameFuncSwitch.msgid)
}
inline ::CSToSS::MsgId SSGameFuncSwitch::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void SSGameFuncSwitch::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint32 log_witch = 2;
inline bool SSGameFuncSwitch::has_log_witch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SSGameFuncSwitch::clear_log_witch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.log_witch_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t SSGameFuncSwitch::log_witch() const {
  // @@protoc_insertion_point(field_get:CSToSS.SSGameFuncSwitch.log_witch)
  return _internal_log_witch();
}
inline void SSGameFuncSwitch::set_log_witch(::uint32_t value) {
  _internal_set_log_witch(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.SSGameFuncSwitch.log_witch)
}
inline ::uint32_t SSGameFuncSwitch::_internal_log_witch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.log_witch_;
}
inline void SSGameFuncSwitch::_internal_set_log_witch(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.log_witch_ = value;
}

// optional uint32 gm_witch = 3;
inline bool SSGameFuncSwitch::has_gm_witch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SSGameFuncSwitch::clear_gm_witch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gm_witch_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t SSGameFuncSwitch::gm_witch() const {
  // @@protoc_insertion_point(field_get:CSToSS.SSGameFuncSwitch.gm_witch)
  return _internal_gm_witch();
}
inline void SSGameFuncSwitch::set_gm_witch(::uint32_t value) {
  _internal_set_gm_witch(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.SSGameFuncSwitch.gm_witch)
}
inline ::uint32_t SSGameFuncSwitch::_internal_gm_witch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gm_witch_;
}
inline void SSGameFuncSwitch::_internal_set_gm_witch(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gm_witch_ = value;
}

// optional uint32 solderwitch = 4;
inline bool SSGameFuncSwitch::has_solderwitch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void SSGameFuncSwitch::clear_solderwitch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.solderwitch_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t SSGameFuncSwitch::solderwitch() const {
  // @@protoc_insertion_point(field_get:CSToSS.SSGameFuncSwitch.solderwitch)
  return _internal_solderwitch();
}
inline void SSGameFuncSwitch::set_solderwitch(::uint32_t value) {
  _internal_set_solderwitch(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.SSGameFuncSwitch.solderwitch)
}
inline ::uint32_t SSGameFuncSwitch::_internal_solderwitch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.solderwitch_;
}
inline void SSGameFuncSwitch::_internal_set_solderwitch(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.solderwitch_ = value;
}

// optional uint32 monsterwitch = 5;
inline bool SSGameFuncSwitch::has_monsterwitch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void SSGameFuncSwitch::clear_monsterwitch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.monsterwitch_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t SSGameFuncSwitch::monsterwitch() const {
  // @@protoc_insertion_point(field_get:CSToSS.SSGameFuncSwitch.monsterwitch)
  return _internal_monsterwitch();
}
inline void SSGameFuncSwitch::set_monsterwitch(::uint32_t value) {
  _internal_set_monsterwitch(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CSToSS.SSGameFuncSwitch.monsterwitch)
}
inline ::uint32_t SSGameFuncSwitch::_internal_monsterwitch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.monsterwitch_;
}
inline void SSGameFuncSwitch::_internal_set_monsterwitch(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.monsterwitch_ = value;
}

// optional uint32 altarsolderwitch = 6;
inline bool SSGameFuncSwitch::has_altarsolderwitch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void SSGameFuncSwitch::clear_altarsolderwitch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.altarsolderwitch_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t SSGameFuncSwitch::altarsolderwitch() const {
  // @@protoc_insertion_point(field_get:CSToSS.SSGameFuncSwitch.altarsolderwitch)
  return _internal_altarsolderwitch();
}
inline void SSGameFuncSwitch::set_altarsolderwitch(::uint32_t value) {
  _internal_set_altarsolderwitch(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CSToSS.SSGameFuncSwitch.altarsolderwitch)
}
inline ::uint32_t SSGameFuncSwitch::_internal_altarsolderwitch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.altarsolderwitch_;
}
inline void SSGameFuncSwitch::_internal_set_altarsolderwitch(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.altarsolderwitch_ = value;
}

// optional uint32 logrefshtime = 7;
inline bool SSGameFuncSwitch::has_logrefshtime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void SSGameFuncSwitch::clear_logrefshtime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.logrefshtime_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t SSGameFuncSwitch::logrefshtime() const {
  // @@protoc_insertion_point(field_get:CSToSS.SSGameFuncSwitch.logrefshtime)
  return _internal_logrefshtime();
}
inline void SSGameFuncSwitch::set_logrefshtime(::uint32_t value) {
  _internal_set_logrefshtime(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CSToSS.SSGameFuncSwitch.logrefshtime)
}
inline ::uint32_t SSGameFuncSwitch::_internal_logrefshtime() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.logrefshtime_;
}
inline void SSGameFuncSwitch::_internal_set_logrefshtime(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.logrefshtime_ = value;
}

// -------------------------------------------------------------------

// NotifySSGuideBattleEnd

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySSGuideBattleEnd];
inline bool NotifySSGuideBattleEnd::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NotifySSGuideBattleEnd::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16434;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSToSS::MsgId NotifySSGuideBattleEnd::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySSGuideBattleEnd.msgid)
  return _internal_msgid();
}
inline void NotifySSGuideBattleEnd::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySSGuideBattleEnd.msgid)
}
inline ::CSToSS::MsgId NotifySSGuideBattleEnd::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySSGuideBattleEnd::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 battleid = 2;
inline bool NotifySSGuideBattleEnd::has_battleid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySSGuideBattleEnd::clear_battleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t NotifySSGuideBattleEnd::battleid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySSGuideBattleEnd.battleid)
  return _internal_battleid();
}
inline void NotifySSGuideBattleEnd::set_battleid(::uint64_t value) {
  _internal_set_battleid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySSGuideBattleEnd.battleid)
}
inline ::uint64_t NotifySSGuideBattleEnd::_internal_battleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battleid_;
}
inline void NotifySSGuideBattleEnd::_internal_set_battleid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = value;
}

// optional uint64 guid = 3;
inline bool NotifySSGuideBattleEnd::has_guid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NotifySSGuideBattleEnd::clear_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t NotifySSGuideBattleEnd::guid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySSGuideBattleEnd.guid)
  return _internal_guid();
}
inline void NotifySSGuideBattleEnd::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySSGuideBattleEnd.guid)
}
inline ::uint64_t NotifySSGuideBattleEnd::_internal_guid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.guid_;
}
inline void NotifySSGuideBattleEnd::_internal_set_guid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = value;
}

// -------------------------------------------------------------------

// ReportSSMsg

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_ReportSSMsg];
inline bool ReportSSMsg::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ReportSSMsg::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16432;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSToSS::MsgId ReportSSMsg::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.ReportSSMsg.msgid)
  return _internal_msgid();
}
inline void ReportSSMsg::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.ReportSSMsg.msgid)
}
inline ::CSToSS::MsgId ReportSSMsg::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void ReportSSMsg::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 battleid = 2;
inline bool ReportSSMsg::has_battleid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ReportSSMsg::clear_battleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t ReportSSMsg::battleid() const {
  // @@protoc_insertion_point(field_get:CSToSS.ReportSSMsg.battleid)
  return _internal_battleid();
}
inline void ReportSSMsg::set_battleid(::uint64_t value) {
  _internal_set_battleid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.ReportSSMsg.battleid)
}
inline ::uint64_t ReportSSMsg::_internal_battleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battleid_;
}
inline void ReportSSMsg::_internal_set_battleid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = value;
}

// optional string othermsg = 3;
inline bool ReportSSMsg::has_othermsg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ReportSSMsg::clear_othermsg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.othermsg_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ReportSSMsg::othermsg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.ReportSSMsg.othermsg)
  return _internal_othermsg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReportSSMsg::set_othermsg(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.othermsg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CSToSS.ReportSSMsg.othermsg)
}
inline std::string* ReportSSMsg::mutable_othermsg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_othermsg();
  // @@protoc_insertion_point(field_mutable:CSToSS.ReportSSMsg.othermsg)
  return _s;
}
inline const std::string& ReportSSMsg::_internal_othermsg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.othermsg_.Get();
}
inline void ReportSSMsg::_internal_set_othermsg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.othermsg_.Set(value, GetArena());
}
inline std::string* ReportSSMsg::_internal_mutable_othermsg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.othermsg_.Mutable( GetArena());
}
inline std::string* ReportSSMsg::release_othermsg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.ReportSSMsg.othermsg)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.othermsg_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.othermsg_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void ReportSSMsg::set_allocated_othermsg(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.othermsg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.othermsg_.IsDefault()) {
          _impl_.othermsg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSToSS.ReportSSMsg.othermsg)
}

// -------------------------------------------------------------------

// AskRegisteRet_GSInfo

// optional int32 gsid = 1;
inline bool AskRegisteRet_GSInfo::has_gsid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AskRegisteRet_GSInfo::clear_gsid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gsid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t AskRegisteRet_GSInfo::gsid() const {
  // @@protoc_insertion_point(field_get:CSToSS.AskRegisteRet.GSInfo.gsid)
  return _internal_gsid();
}
inline void AskRegisteRet_GSInfo::set_gsid(::int32_t value) {
  _internal_set_gsid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.AskRegisteRet.GSInfo.gsid)
}
inline ::int32_t AskRegisteRet_GSInfo::_internal_gsid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gsid_;
}
inline void AskRegisteRet_GSInfo::_internal_set_gsid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gsid_ = value;
}

// optional string userpwd = 2;
inline bool AskRegisteRet_GSInfo::has_userpwd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AskRegisteRet_GSInfo::clear_userpwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userpwd_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AskRegisteRet_GSInfo::userpwd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.AskRegisteRet.GSInfo.userpwd)
  return _internal_userpwd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AskRegisteRet_GSInfo::set_userpwd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.userpwd_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CSToSS.AskRegisteRet.GSInfo.userpwd)
}
inline std::string* AskRegisteRet_GSInfo::mutable_userpwd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_userpwd();
  // @@protoc_insertion_point(field_mutable:CSToSS.AskRegisteRet.GSInfo.userpwd)
  return _s;
}
inline const std::string& AskRegisteRet_GSInfo::_internal_userpwd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userpwd_.Get();
}
inline void AskRegisteRet_GSInfo::_internal_set_userpwd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.userpwd_.Set(value, GetArena());
}
inline std::string* AskRegisteRet_GSInfo::_internal_mutable_userpwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.userpwd_.Mutable( GetArena());
}
inline std::string* AskRegisteRet_GSInfo::release_userpwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.AskRegisteRet.GSInfo.userpwd)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.userpwd_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.userpwd_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void AskRegisteRet_GSInfo::set_allocated_userpwd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.userpwd_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.userpwd_.IsDefault()) {
          _impl_.userpwd_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSToSS.AskRegisteRet.GSInfo.userpwd)
}

// -------------------------------------------------------------------

// AskRegisteRet

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskRegisteRet];
inline bool AskRegisteRet::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void AskRegisteRet::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16386;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::CSToSS::MsgId AskRegisteRet::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.AskRegisteRet.msgid)
  return _internal_msgid();
}
inline void AskRegisteRet::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CSToSS.AskRegisteRet.msgid)
}
inline ::CSToSS::MsgId AskRegisteRet::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void AskRegisteRet::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional int32 ret = 2;
inline bool AskRegisteRet::has_ret() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AskRegisteRet::clear_ret() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ret_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t AskRegisteRet::ret() const {
  // @@protoc_insertion_point(field_get:CSToSS.AskRegisteRet.ret)
  return _internal_ret();
}
inline void AskRegisteRet::set_ret(::int32_t value) {
  _internal_set_ret(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.AskRegisteRet.ret)
}
inline ::int32_t AskRegisteRet::_internal_ret() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ret_;
}
inline void AskRegisteRet::_internal_set_ret(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ret_ = value;
}

// optional int64 time = 3;
inline bool AskRegisteRet::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AskRegisteRet::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t AskRegisteRet::time() const {
  // @@protoc_insertion_point(field_get:CSToSS.AskRegisteRet.time)
  return _internal_time();
}
inline void AskRegisteRet::set_time(::int64_t value) {
  _internal_set_time(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.AskRegisteRet.time)
}
inline ::int64_t AskRegisteRet::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_;
}
inline void AskRegisteRet::_internal_set_time(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = value;
}

// optional int32 basegsid = 4;
inline bool AskRegisteRet::has_basegsid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void AskRegisteRet::clear_basegsid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.basegsid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t AskRegisteRet::basegsid() const {
  // @@protoc_insertion_point(field_get:CSToSS.AskRegisteRet.basegsid)
  return _internal_basegsid();
}
inline void AskRegisteRet::set_basegsid(::int32_t value) {
  _internal_set_basegsid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.AskRegisteRet.basegsid)
}
inline ::int32_t AskRegisteRet::_internal_basegsid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.basegsid_;
}
inline void AskRegisteRet::_internal_set_basegsid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.basegsid_ = value;
}

// repeated .CSToSS.AskRegisteRet.GSInfo gsinfo = 5;
inline int AskRegisteRet::_internal_gsinfo_size() const {
  return _internal_gsinfo().size();
}
inline int AskRegisteRet::gsinfo_size() const {
  return _internal_gsinfo_size();
}
inline void AskRegisteRet::clear_gsinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gsinfo_.Clear();
}
inline ::CSToSS::AskRegisteRet_GSInfo* AskRegisteRet::mutable_gsinfo(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.AskRegisteRet.gsinfo)
  return _internal_mutable_gsinfo()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::AskRegisteRet_GSInfo>* AskRegisteRet::mutable_gsinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.AskRegisteRet.gsinfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_gsinfo();
}
inline const ::CSToSS::AskRegisteRet_GSInfo& AskRegisteRet::gsinfo(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.AskRegisteRet.gsinfo)
  return _internal_gsinfo().Get(index);
}
inline ::CSToSS::AskRegisteRet_GSInfo* AskRegisteRet::add_gsinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CSToSS::AskRegisteRet_GSInfo* _add = _internal_mutable_gsinfo()->Add();
  // @@protoc_insertion_point(field_add:CSToSS.AskRegisteRet.gsinfo)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::AskRegisteRet_GSInfo>& AskRegisteRet::gsinfo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.AskRegisteRet.gsinfo)
  return _internal_gsinfo();
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::AskRegisteRet_GSInfo>&
AskRegisteRet::_internal_gsinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gsinfo_;
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::AskRegisteRet_GSInfo>*
AskRegisteRet::_internal_mutable_gsinfo() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.gsinfo_;
}

// -------------------------------------------------------------------

// SUserNetInfo

// optional int32 n32GSID = 1;
inline bool SUserNetInfo::has_n32gsid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void SUserNetInfo::clear_n32gsid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32gsid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t SUserNetInfo::n32gsid() const {
  // @@protoc_insertion_point(field_get:CSToSS.SUserNetInfo.n32GSID)
  return _internal_n32gsid();
}
inline void SUserNetInfo::set_n32gsid(::int32_t value) {
  _internal_set_n32gsid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.SUserNetInfo.n32GSID)
}
inline ::int32_t SUserNetInfo::_internal_n32gsid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n32gsid_;
}
inline void SUserNetInfo::_internal_set_n32gsid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32gsid_ = value;
}

// optional int32 n32GCNSID = 2;
inline bool SUserNetInfo::has_n32gcnsid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void SUserNetInfo::clear_n32gcnsid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32gcnsid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t SUserNetInfo::n32gcnsid() const {
  // @@protoc_insertion_point(field_get:CSToSS.SUserNetInfo.n32GCNSID)
  return _internal_n32gcnsid();
}
inline void SUserNetInfo::set_n32gcnsid(::int32_t value) {
  _internal_set_n32gcnsid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.SUserNetInfo.n32GCNSID)
}
inline ::int32_t SUserNetInfo::_internal_n32gcnsid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n32gcnsid_;
}
inline void SUserNetInfo::_internal_set_n32gcnsid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32gcnsid_ = value;
}

// -------------------------------------------------------------------

// UserInfo_SUserDBData_SUserGuideSteps

// optional string szCSContinueGuide = 1;
inline bool UserInfo_SUserDBData_SUserGuideSteps::has_szcscontinueguide() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UserInfo_SUserDBData_SUserGuideSteps::clear_szcscontinueguide() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.szcscontinueguide_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UserInfo_SUserDBData_SUserGuideSteps::szcscontinueguide() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szCSContinueGuide)
  return _internal_szcscontinueguide();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserInfo_SUserDBData_SUserGuideSteps::set_szcscontinueguide(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.szcscontinueguide_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szCSContinueGuide)
}
inline std::string* UserInfo_SUserDBData_SUserGuideSteps::mutable_szcscontinueguide() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_szcscontinueguide();
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szCSContinueGuide)
  return _s;
}
inline const std::string& UserInfo_SUserDBData_SUserGuideSteps::_internal_szcscontinueguide() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.szcscontinueguide_.Get();
}
inline void UserInfo_SUserDBData_SUserGuideSteps::_internal_set_szcscontinueguide(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.szcscontinueguide_.Set(value, GetArena());
}
inline std::string* UserInfo_SUserDBData_SUserGuideSteps::_internal_mutable_szcscontinueguide() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.szcscontinueguide_.Mutable( GetArena());
}
inline std::string* UserInfo_SUserDBData_SUserGuideSteps::release_szcscontinueguide() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szCSContinueGuide)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.szcscontinueguide_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.szcscontinueguide_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserInfo_SUserDBData_SUserGuideSteps::set_allocated_szcscontinueguide(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.szcscontinueguide_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.szcscontinueguide_.IsDefault()) {
          _impl_.szcscontinueguide_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szCSContinueGuide)
}

// optional string szCSNoContinueGuide = 2;
inline bool UserInfo_SUserDBData_SUserGuideSteps::has_szcsnocontinueguide() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UserInfo_SUserDBData_SUserGuideSteps::clear_szcsnocontinueguide() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.szcsnocontinueguide_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& UserInfo_SUserDBData_SUserGuideSteps::szcsnocontinueguide() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szCSNoContinueGuide)
  return _internal_szcsnocontinueguide();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserInfo_SUserDBData_SUserGuideSteps::set_szcsnocontinueguide(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.szcsnocontinueguide_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szCSNoContinueGuide)
}
inline std::string* UserInfo_SUserDBData_SUserGuideSteps::mutable_szcsnocontinueguide() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_szcsnocontinueguide();
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szCSNoContinueGuide)
  return _s;
}
inline const std::string& UserInfo_SUserDBData_SUserGuideSteps::_internal_szcsnocontinueguide() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.szcsnocontinueguide_.Get();
}
inline void UserInfo_SUserDBData_SUserGuideSteps::_internal_set_szcsnocontinueguide(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.szcsnocontinueguide_.Set(value, GetArena());
}
inline std::string* UserInfo_SUserDBData_SUserGuideSteps::_internal_mutable_szcsnocontinueguide() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.szcsnocontinueguide_.Mutable( GetArena());
}
inline std::string* UserInfo_SUserDBData_SUserGuideSteps::release_szcsnocontinueguide() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szCSNoContinueGuide)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.szcsnocontinueguide_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.szcsnocontinueguide_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserInfo_SUserDBData_SUserGuideSteps::set_allocated_szcsnocontinueguide(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.szcsnocontinueguide_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.szcsnocontinueguide_.IsDefault()) {
          _impl_.szcsnocontinueguide_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szCSNoContinueGuide)
}

// optional string szSSGuides = 3;
inline bool UserInfo_SUserDBData_SUserGuideSteps::has_szssguides() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void UserInfo_SUserDBData_SUserGuideSteps::clear_szssguides() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.szssguides_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& UserInfo_SUserDBData_SUserGuideSteps::szssguides() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szSSGuides)
  return _internal_szssguides();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserInfo_SUserDBData_SUserGuideSteps::set_szssguides(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.szssguides_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szSSGuides)
}
inline std::string* UserInfo_SUserDBData_SUserGuideSteps::mutable_szssguides() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_szssguides();
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szSSGuides)
  return _s;
}
inline const std::string& UserInfo_SUserDBData_SUserGuideSteps::_internal_szssguides() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.szssguides_.Get();
}
inline void UserInfo_SUserDBData_SUserGuideSteps::_internal_set_szssguides(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.szssguides_.Set(value, GetArena());
}
inline std::string* UserInfo_SUserDBData_SUserGuideSteps::_internal_mutable_szssguides() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.szssguides_.Mutable( GetArena());
}
inline std::string* UserInfo_SUserDBData_SUserGuideSteps::release_szssguides() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szSSGuides)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.szssguides_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.szssguides_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserInfo_SUserDBData_SUserGuideSteps::set_allocated_szssguides(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.szssguides_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.szssguides_.IsDefault()) {
          _impl_.szssguides_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSToSS.UserInfo.SUserDBData.SUserGuideSteps.szSSGuides)
}

// -------------------------------------------------------------------

// UserInfo_SUserDBData

// optional .CSToSS.UserInfo.SUserDBData.EObjectType eObjType = 1;
inline bool UserInfo_SUserDBData::has_eobjtype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_eobjtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eobjtype_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::CSToSS::UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData::eobjtype() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.eObjType)
  return _internal_eobjtype();
}
inline void UserInfo_SUserDBData::set_eobjtype(::CSToSS::UserInfo_SUserDBData_EObjectType value) {
  _internal_set_eobjtype(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.eObjType)
}
inline ::CSToSS::UserInfo_SUserDBData_EObjectType UserInfo_SUserDBData::_internal_eobjtype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::UserInfo_SUserDBData_EObjectType>(_impl_.eobjtype_);
}
inline void UserInfo_SUserDBData::_internal_set_eobjtype(::CSToSS::UserInfo_SUserDBData_EObjectType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::UserInfo_SUserDBData_EObjectType_IsValid(value));
  _impl_.eobjtype_ = value;
}

// optional int64 un64ObjIdx = 2;
inline bool UserInfo_SUserDBData::has_un64objidx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_un64objidx() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un64objidx_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t UserInfo_SUserDBData::un64objidx() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.un64ObjIdx)
  return _internal_un64objidx();
}
inline void UserInfo_SUserDBData::set_un64objidx(::int64_t value) {
  _internal_set_un64objidx(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.un64ObjIdx)
}
inline ::int64_t UserInfo_SUserDBData::_internal_un64objidx() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.un64objidx_;
}
inline void UserInfo_SUserDBData::_internal_set_un64objidx(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un64objidx_ = value;
}

// optional .CSToSS.UserInfo.SUserDBData.EUserCate eUserCate = 3;
inline bool UserInfo_SUserDBData::has_eusercate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_eusercate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eusercate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::CSToSS::UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::eusercate() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.eUserCate)
  return _internal_eusercate();
}
inline void UserInfo_SUserDBData::set_eusercate(::CSToSS::UserInfo_SUserDBData_EUserCate value) {
  _internal_set_eusercate(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.eUserCate)
}
inline ::CSToSS::UserInfo_SUserDBData_EUserCate UserInfo_SUserDBData::_internal_eusercate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::UserInfo_SUserDBData_EUserCate>(_impl_.eusercate_);
}
inline void UserInfo_SUserDBData::_internal_set_eusercate(::CSToSS::UserInfo_SUserDBData_EUserCate value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::UserInfo_SUserDBData_EUserCate_IsValid(value));
  _impl_.eusercate_ = value;
}

// optional .CSToSS.UserInfo.SUserDBData.EUserPlatform eUserPlatform = 4;
inline bool UserInfo_SUserDBData::has_euserplatform() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_euserplatform() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.euserplatform_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::CSToSS::UserInfo_SUserDBData_EUserPlatform UserInfo_SUserDBData::euserplatform() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.eUserPlatform)
  return _internal_euserplatform();
}
inline void UserInfo_SUserDBData::set_euserplatform(::CSToSS::UserInfo_SUserDBData_EUserPlatform value) {
  _internal_set_euserplatform(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.eUserPlatform)
}
inline ::CSToSS::UserInfo_SUserDBData_EUserPlatform UserInfo_SUserDBData::_internal_euserplatform() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::UserInfo_SUserDBData_EUserPlatform>(_impl_.euserplatform_);
}
inline void UserInfo_SUserDBData::_internal_set_euserplatform(::CSToSS::UserInfo_SUserDBData_EUserPlatform value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::UserInfo_SUserDBData_EUserPlatform_IsValid(value));
  _impl_.euserplatform_ = value;
}

// optional string szUserName = 5;
inline bool UserInfo_SUserDBData::has_szusername() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_szusername() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.szusername_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UserInfo_SUserDBData::szusername() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.szUserName)
  return _internal_szusername();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserInfo_SUserDBData::set_szusername(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.szusername_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.szUserName)
}
inline std::string* UserInfo_SUserDBData::mutable_szusername() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_szusername();
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.SUserDBData.szUserName)
  return _s;
}
inline const std::string& UserInfo_SUserDBData::_internal_szusername() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.szusername_.Get();
}
inline void UserInfo_SUserDBData::_internal_set_szusername(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.szusername_.Set(value, GetArena());
}
inline std::string* UserInfo_SUserDBData::_internal_mutable_szusername() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.szusername_.Mutable( GetArena());
}
inline std::string* UserInfo_SUserDBData::release_szusername() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.UserInfo.SUserDBData.szUserName)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.szusername_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.szusername_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserInfo_SUserDBData::set_allocated_szusername(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.szusername_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.szusername_.IsDefault()) {
          _impl_.szusername_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSToSS.UserInfo.SUserDBData.szUserName)
}

// optional string szUserPwd = 6;
inline bool UserInfo_SUserDBData::has_szuserpwd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_szuserpwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.szuserpwd_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& UserInfo_SUserDBData::szuserpwd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.szUserPwd)
  return _internal_szuserpwd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserInfo_SUserDBData::set_szuserpwd(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.szuserpwd_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.szUserPwd)
}
inline std::string* UserInfo_SUserDBData::mutable_szuserpwd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_szuserpwd();
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.SUserDBData.szUserPwd)
  return _s;
}
inline const std::string& UserInfo_SUserDBData::_internal_szuserpwd() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.szuserpwd_.Get();
}
inline void UserInfo_SUserDBData::_internal_set_szuserpwd(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.szuserpwd_.Set(value, GetArena());
}
inline std::string* UserInfo_SUserDBData::_internal_mutable_szuserpwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.szuserpwd_.Mutable( GetArena());
}
inline std::string* UserInfo_SUserDBData::release_szuserpwd() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.UserInfo.SUserDBData.szUserPwd)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.szuserpwd_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.szuserpwd_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserInfo_SUserDBData::set_allocated_szuserpwd(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.szuserpwd_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.szuserpwd_.IsDefault()) {
          _impl_.szuserpwd_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSToSS.UserInfo.SUserDBData.szUserPwd)
}

// optional string szNickName = 7;
inline bool UserInfo_SUserDBData::has_sznickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_sznickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sznickname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& UserInfo_SUserDBData::sznickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.szNickName)
  return _internal_sznickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserInfo_SUserDBData::set_sznickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.sznickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.szNickName)
}
inline std::string* UserInfo_SUserDBData::mutable_sznickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sznickname();
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.SUserDBData.szNickName)
  return _s;
}
inline const std::string& UserInfo_SUserDBData::_internal_sznickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sznickname_.Get();
}
inline void UserInfo_SUserDBData::_internal_set_sznickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.sznickname_.Set(value, GetArena());
}
inline std::string* UserInfo_SUserDBData::_internal_mutable_sznickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.sznickname_.Mutable( GetArena());
}
inline std::string* UserInfo_SUserDBData::release_sznickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.UserInfo.SUserDBData.szNickName)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.sznickname_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sznickname_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserInfo_SUserDBData::set_allocated_sznickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.sznickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sznickname_.IsDefault()) {
          _impl_.sznickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSToSS.UserInfo.SUserDBData.szNickName)
}

// optional int32 un32HeaderID = 8;
inline bool UserInfo_SUserDBData::has_un32headerid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_un32headerid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32headerid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t UserInfo_SUserDBData::un32headerid() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.un32HeaderID)
  return _internal_un32headerid();
}
inline void UserInfo_SUserDBData::set_un32headerid(::int32_t value) {
  _internal_set_un32headerid(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.un32HeaderID)
}
inline ::int32_t UserInfo_SUserDBData::_internal_un32headerid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.un32headerid_;
}
inline void UserInfo_SUserDBData::_internal_set_un32headerid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32headerid_ = value;
}

// optional int32 n8Sex = 9;
inline bool UserInfo_SUserDBData::has_n8sex() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_n8sex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n8sex_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int32_t UserInfo_SUserDBData::n8sex() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.n8Sex)
  return _internal_n8sex();
}
inline void UserInfo_SUserDBData::set_n8sex(::int32_t value) {
  _internal_set_n8sex(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.n8Sex)
}
inline ::int32_t UserInfo_SUserDBData::_internal_n8sex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n8sex_;
}
inline void UserInfo_SUserDBData::_internal_set_n8sex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n8sex_ = value;
}

// optional int64 n64Score = 10;
inline bool UserInfo_SUserDBData::has_n64score() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_n64score() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n64score_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int64_t UserInfo_SUserDBData::n64score() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.n64Score)
  return _internal_n64score();
}
inline void UserInfo_SUserDBData::set_n64score(::int64_t value) {
  _internal_set_n64score(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.n64Score)
}
inline ::int64_t UserInfo_SUserDBData::_internal_n64score() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n64score_;
}
inline void UserInfo_SUserDBData::_internal_set_n64score(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n64score_ = value;
}

// optional int64 n64Diamond = 11;
inline bool UserInfo_SUserDBData::has_n64diamond() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_n64diamond() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n64diamond_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::int64_t UserInfo_SUserDBData::n64diamond() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.n64Diamond)
  return _internal_n64diamond();
}
inline void UserInfo_SUserDBData::set_n64diamond(::int64_t value) {
  _internal_set_n64diamond(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.n64Diamond)
}
inline ::int64_t UserInfo_SUserDBData::_internal_n64diamond() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n64diamond_;
}
inline void UserInfo_SUserDBData::_internal_set_n64diamond(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n64diamond_ = value;
}

// optional int64 n64Gold = 12;
inline bool UserInfo_SUserDBData::has_n64gold() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_n64gold() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n64gold_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int64_t UserInfo_SUserDBData::n64gold() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.n64Gold)
  return _internal_n64gold();
}
inline void UserInfo_SUserDBData::set_n64gold(::int64_t value) {
  _internal_set_n64gold(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.n64Gold)
}
inline ::int64_t UserInfo_SUserDBData::_internal_n64gold() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n64gold_;
}
inline void UserInfo_SUserDBData::_internal_set_n64gold(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n64gold_ = value;
}

// optional int64 tRegisteUTCMillisec = 13;
inline bool UserInfo_SUserDBData::has_tregisteutcmillisec() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_tregisteutcmillisec() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tregisteutcmillisec_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::int64_t UserInfo_SUserDBData::tregisteutcmillisec() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.tRegisteUTCMillisec)
  return _internal_tregisteutcmillisec();
}
inline void UserInfo_SUserDBData::set_tregisteutcmillisec(::int64_t value) {
  _internal_set_tregisteutcmillisec(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.tRegisteUTCMillisec)
}
inline ::int64_t UserInfo_SUserDBData::_internal_tregisteutcmillisec() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tregisteutcmillisec_;
}
inline void UserInfo_SUserDBData::_internal_set_tregisteutcmillisec(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tregisteutcmillisec_ = value;
}

// optional int64 tLastLoginUTCMillisec = 14;
inline bool UserInfo_SUserDBData::has_tlastloginutcmillisec() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_tlastloginutcmillisec() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tlastloginutcmillisec_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int64_t UserInfo_SUserDBData::tlastloginutcmillisec() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.tLastLoginUTCMillisec)
  return _internal_tlastloginutcmillisec();
}
inline void UserInfo_SUserDBData::set_tlastloginutcmillisec(::int64_t value) {
  _internal_set_tlastloginutcmillisec(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.tLastLoginUTCMillisec)
}
inline ::int64_t UserInfo_SUserDBData::_internal_tlastloginutcmillisec() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tlastloginutcmillisec_;
}
inline void UserInfo_SUserDBData::_internal_set_tlastloginutcmillisec(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tlastloginutcmillisec_ = value;
}

// optional int64 n32HeroNum = 15;
inline bool UserInfo_SUserDBData::has_n32heronum() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_n32heronum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32heronum_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::int64_t UserInfo_SUserDBData::n32heronum() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.n32HeroNum)
  return _internal_n32heronum();
}
inline void UserInfo_SUserDBData::set_n32heronum(::int64_t value) {
  _internal_set_n32heronum(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.n32HeroNum)
}
inline ::int64_t UserInfo_SUserDBData::_internal_n32heronum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n32heronum_;
}
inline void UserInfo_SUserDBData::_internal_set_n32heronum(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32heronum_ = value;
}

// optional int64 n32RunesSlotOpenNum = 16;
inline bool UserInfo_SUserDBData::has_n32runesslotopennum() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_n32runesslotopennum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32runesslotopennum_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::int64_t UserInfo_SUserDBData::n32runesslotopennum() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.n32RunesSlotOpenNum)
  return _internal_n32runesslotopennum();
}
inline void UserInfo_SUserDBData::set_n32runesslotopennum(::int64_t value) {
  _internal_set_n32runesslotopennum(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.n32RunesSlotOpenNum)
}
inline ::int64_t UserInfo_SUserDBData::_internal_n32runesslotopennum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n32runesslotopennum_;
}
inline void UserInfo_SUserDBData::_internal_set_n32runesslotopennum(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32runesslotopennum_ = value;
}

// optional int32 n32RunesBagNum = 17;
inline bool UserInfo_SUserDBData::has_n32runesbagnum() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_n32runesbagnum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32runesbagnum_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline ::int32_t UserInfo_SUserDBData::n32runesbagnum() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.n32RunesBagNum)
  return _internal_n32runesbagnum();
}
inline void UserInfo_SUserDBData::set_n32runesbagnum(::int32_t value) {
  _internal_set_n32runesbagnum(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.n32RunesBagNum)
}
inline ::int32_t UserInfo_SUserDBData::_internal_n32runesbagnum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n32runesbagnum_;
}
inline void UserInfo_SUserDBData::_internal_set_n32runesbagnum(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32runesbagnum_ = value;
}

// optional int32 n32RunesSlotNum = 18;
inline bool UserInfo_SUserDBData::has_n32runesslotnum() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_n32runesslotnum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32runesslotnum_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::int32_t UserInfo_SUserDBData::n32runesslotnum() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.n32RunesSlotNum)
  return _internal_n32runesslotnum();
}
inline void UserInfo_SUserDBData::set_n32runesslotnum(::int32_t value) {
  _internal_set_n32runesslotnum(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.n32RunesSlotNum)
}
inline ::int32_t UserInfo_SUserDBData::_internal_n32runesslotnum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n32runesslotnum_;
}
inline void UserInfo_SUserDBData::_internal_set_n32runesslotnum(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32runesslotnum_ = value;
}

// optional int32 n32FriendsNum = 19;
inline bool UserInfo_SUserDBData::has_n32friendsnum() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_n32friendsnum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32friendsnum_ = 0;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::int32_t UserInfo_SUserDBData::n32friendsnum() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.n32FriendsNum)
  return _internal_n32friendsnum();
}
inline void UserInfo_SUserDBData::set_n32friendsnum(::int32_t value) {
  _internal_set_n32friendsnum(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.n32FriendsNum)
}
inline ::int32_t UserInfo_SUserDBData::_internal_n32friendsnum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n32friendsnum_;
}
inline void UserInfo_SUserDBData::_internal_set_n32friendsnum(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32friendsnum_ = value;
}

// optional int32 n32BlacklistNum = 20;
inline bool UserInfo_SUserDBData::has_n32blacklistnum() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_n32blacklistnum() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32blacklistnum_ = 0;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline ::int32_t UserInfo_SUserDBData::n32blacklistnum() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.n32BlacklistNum)
  return _internal_n32blacklistnum();
}
inline void UserInfo_SUserDBData::set_n32blacklistnum(::int32_t value) {
  _internal_set_n32blacklistnum(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.n32BlacklistNum)
}
inline ::int32_t UserInfo_SUserDBData::_internal_n32blacklistnum() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n32blacklistnum_;
}
inline void UserInfo_SUserDBData::_internal_set_n32blacklistnum(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n32blacklistnum_ = value;
}

// optional int32 un32TotalGameInns = 21;
inline bool UserInfo_SUserDBData::has_un32totalgameinns() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_un32totalgameinns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32totalgameinns_ = 0;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline ::int32_t UserInfo_SUserDBData::un32totalgameinns() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.un32TotalGameInns)
  return _internal_un32totalgameinns();
}
inline void UserInfo_SUserDBData::set_un32totalgameinns(::int32_t value) {
  _internal_set_un32totalgameinns(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.un32TotalGameInns)
}
inline ::int32_t UserInfo_SUserDBData::_internal_un32totalgameinns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.un32totalgameinns_;
}
inline void UserInfo_SUserDBData::_internal_set_un32totalgameinns(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32totalgameinns_ = value;
}

// optional int32 un32TotalWinInns = 22;
inline bool UserInfo_SUserDBData::has_un32totalwininns() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_un32totalwininns() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32totalwininns_ = 0;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline ::int32_t UserInfo_SUserDBData::un32totalwininns() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.un32TotalWinInns)
  return _internal_un32totalwininns();
}
inline void UserInfo_SUserDBData::set_un32totalwininns(::int32_t value) {
  _internal_set_un32totalwininns(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.un32TotalWinInns)
}
inline ::int32_t UserInfo_SUserDBData::_internal_un32totalwininns() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.un32totalwininns_;
}
inline void UserInfo_SUserDBData::_internal_set_un32totalwininns(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32totalwininns_ = value;
}

// optional int32 un32TotalHeroKills = 23;
inline bool UserInfo_SUserDBData::has_un32totalherokills() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_un32totalherokills() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32totalherokills_ = 0;
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline ::int32_t UserInfo_SUserDBData::un32totalherokills() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.un32TotalHeroKills)
  return _internal_un32totalherokills();
}
inline void UserInfo_SUserDBData::set_un32totalherokills(::int32_t value) {
  _internal_set_un32totalherokills(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.un32TotalHeroKills)
}
inline ::int32_t UserInfo_SUserDBData::_internal_un32totalherokills() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.un32totalherokills_;
}
inline void UserInfo_SUserDBData::_internal_set_un32totalherokills(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32totalherokills_ = value;
}

// optional int32 un32TotalDestoryBuildings = 24;
inline bool UserInfo_SUserDBData::has_un32totaldestorybuildings() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_un32totaldestorybuildings() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32totaldestorybuildings_ = 0;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline ::int32_t UserInfo_SUserDBData::un32totaldestorybuildings() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.un32TotalDestoryBuildings)
  return _internal_un32totaldestorybuildings();
}
inline void UserInfo_SUserDBData::set_un32totaldestorybuildings(::int32_t value) {
  _internal_set_un32totaldestorybuildings(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.un32TotalDestoryBuildings)
}
inline ::int32_t UserInfo_SUserDBData::_internal_un32totaldestorybuildings() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.un32totaldestorybuildings_;
}
inline void UserInfo_SUserDBData::_internal_set_un32totaldestorybuildings(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32totaldestorybuildings_ = value;
}

// optional int32 un32TotalDeadTimes = 25;
inline bool UserInfo_SUserDBData::has_un32totaldeadtimes() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_un32totaldeadtimes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32totaldeadtimes_ = 0;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline ::int32_t UserInfo_SUserDBData::un32totaldeadtimes() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.un32TotalDeadTimes)
  return _internal_un32totaldeadtimes();
}
inline void UserInfo_SUserDBData::set_un32totaldeadtimes(::int32_t value) {
  _internal_set_un32totaldeadtimes(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.un32TotalDeadTimes)
}
inline ::int32_t UserInfo_SUserDBData::_internal_un32totaldeadtimes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.un32totaldeadtimes_;
}
inline void UserInfo_SUserDBData::_internal_set_un32totaldeadtimes(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32totaldeadtimes_ = value;
}

// optional int32 un16UserLv = 26;
inline bool UserInfo_SUserDBData::has_un16userlv() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_un16userlv() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un16userlv_ = 0;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline ::int32_t UserInfo_SUserDBData::un16userlv() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.un16UserLv)
  return _internal_un16userlv();
}
inline void UserInfo_SUserDBData::set_un16userlv(::int32_t value) {
  _internal_set_un16userlv(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.un16UserLv)
}
inline ::int32_t UserInfo_SUserDBData::_internal_un16userlv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.un16userlv_;
}
inline void UserInfo_SUserDBData::_internal_set_un16userlv(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un16userlv_ = value;
}

// optional int32 un32UserCurLvExp = 27;
inline bool UserInfo_SUserDBData::has_un32usercurlvexp() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_un32usercurlvexp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32usercurlvexp_ = 0;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline ::int32_t UserInfo_SUserDBData::un32usercurlvexp() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.un32UserCurLvExp)
  return _internal_un32usercurlvexp();
}
inline void UserInfo_SUserDBData::set_un32usercurlvexp(::int32_t value) {
  _internal_set_un32usercurlvexp(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.un32UserCurLvExp)
}
inline ::int32_t UserInfo_SUserDBData::_internal_un32usercurlvexp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.un32usercurlvexp_;
}
inline void UserInfo_SUserDBData::_internal_set_un32usercurlvexp(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32usercurlvexp_ = value;
}

// optional int64 tLastFirstWinTime = 28;
inline bool UserInfo_SUserDBData::has_tlastfirstwintime() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_tlastfirstwintime() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tlastfirstwintime_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline ::int64_t UserInfo_SUserDBData::tlastfirstwintime() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.tLastFirstWinTime)
  return _internal_tlastfirstwintime();
}
inline void UserInfo_SUserDBData::set_tlastfirstwintime(::int64_t value) {
  _internal_set_tlastfirstwintime(value);
  _impl_._has_bits_[0] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.tLastFirstWinTime)
}
inline ::int64_t UserInfo_SUserDBData::_internal_tlastfirstwintime() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tlastfirstwintime_;
}
inline void UserInfo_SUserDBData::_internal_set_tlastfirstwintime(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tlastfirstwintime_ = value;
}

// optional .CSToSS.UserInfo.SUserDBData.SUserGuideSteps mGuideSteps = 29;
inline bool UserInfo_SUserDBData::has_mguidesteps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mguidesteps_ != nullptr);
  return value;
}
inline void UserInfo_SUserDBData::clear_mguidesteps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.mguidesteps_ != nullptr) _impl_.mguidesteps_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps& UserInfo_SUserDBData::_internal_mguidesteps() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* p = _impl_.mguidesteps_;
  return p != nullptr ? *p : reinterpret_cast<const ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps&>(::CSToSS::_UserInfo_SUserDBData_SUserGuideSteps_default_instance_);
}
inline const ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps& UserInfo_SUserDBData::mguidesteps() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.mGuideSteps)
  return _internal_mguidesteps();
}
inline void UserInfo_SUserDBData::unsafe_arena_set_allocated_mguidesteps(::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mguidesteps_);
  }
  _impl_.mguidesteps_ = reinterpret_cast<::CSToSS::UserInfo_SUserDBData_SUserGuideSteps*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CSToSS.UserInfo.SUserDBData.mGuideSteps)
}
inline ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* UserInfo_SUserDBData::release_mguidesteps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* released = _impl_.mguidesteps_;
  _impl_.mguidesteps_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* UserInfo_SUserDBData::unsafe_arena_release_mguidesteps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.UserInfo.SUserDBData.mGuideSteps)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* temp = _impl_.mguidesteps_;
  _impl_.mguidesteps_ = nullptr;
  return temp;
}
inline ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* UserInfo_SUserDBData::_internal_mutable_mguidesteps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.mguidesteps_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CSToSS::UserInfo_SUserDBData_SUserGuideSteps>(GetArena());
    _impl_.mguidesteps_ = reinterpret_cast<::CSToSS::UserInfo_SUserDBData_SUserGuideSteps*>(p);
  }
  return _impl_.mguidesteps_;
}
inline ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* UserInfo_SUserDBData::mutable_mguidesteps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* _msg = _internal_mutable_mguidesteps();
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.SUserDBData.mGuideSteps)
  return _msg;
}
inline void UserInfo_SUserDBData::set_allocated_mguidesteps(::CSToSS::UserInfo_SUserDBData_SUserGuideSteps* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.mguidesteps_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.mguidesteps_ = reinterpret_cast<::CSToSS::UserInfo_SUserDBData_SUserGuideSteps*>(value);
  // @@protoc_insertion_point(field_set_allocated:CSToSS.UserInfo.SUserDBData.mGuideSteps)
}

// optional string szFriends = 30;
inline bool UserInfo_SUserDBData::has_szfriends() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void UserInfo_SUserDBData::clear_szfriends() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.szfriends_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& UserInfo_SUserDBData::szfriends() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserDBData.szFriends)
  return _internal_szfriends();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserInfo_SUserDBData::set_szfriends(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.szfriends_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserDBData.szFriends)
}
inline std::string* UserInfo_SUserDBData::mutable_szfriends() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_szfriends();
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.SUserDBData.szFriends)
  return _s;
}
inline const std::string& UserInfo_SUserDBData::_internal_szfriends() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.szfriends_.Get();
}
inline void UserInfo_SUserDBData::_internal_set_szfriends(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.szfriends_.Set(value, GetArena());
}
inline std::string* UserInfo_SUserDBData::_internal_mutable_szfriends() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.szfriends_.Mutable( GetArena());
}
inline std::string* UserInfo_SUserDBData::release_szfriends() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.UserInfo.SUserDBData.szFriends)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.szfriends_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.szfriends_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserInfo_SUserDBData::set_allocated_szfriends(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.szfriends_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.szfriends_.IsDefault()) {
          _impl_.szfriends_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSToSS.UserInfo.SUserDBData.szFriends)
}

// -------------------------------------------------------------------

// UserInfo_SUserRunesRuntimeData

// optional int32 un32RunesTypeID = 1;
inline bool UserInfo_SUserRunesRuntimeData::has_un32runestypeid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UserInfo_SUserRunesRuntimeData::clear_un32runestypeid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32runestypeid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t UserInfo_SUserRunesRuntimeData::un32runestypeid() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserRunesRuntimeData.un32RunesTypeID)
  return _internal_un32runestypeid();
}
inline void UserInfo_SUserRunesRuntimeData::set_un32runestypeid(::int32_t value) {
  _internal_set_un32runestypeid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserRunesRuntimeData.un32RunesTypeID)
}
inline ::int32_t UserInfo_SUserRunesRuntimeData::_internal_un32runestypeid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.un32runestypeid_;
}
inline void UserInfo_SUserRunesRuntimeData::_internal_set_un32runestypeid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.un32runestypeid_ = value;
}

// optional int32 n16Pos = 2;
inline bool UserInfo_SUserRunesRuntimeData::has_n16pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UserInfo_SUserRunesRuntimeData::clear_n16pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n16pos_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t UserInfo_SUserRunesRuntimeData::n16pos() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserRunesRuntimeData.n16Pos)
  return _internal_n16pos();
}
inline void UserInfo_SUserRunesRuntimeData::set_n16pos(::int32_t value) {
  _internal_set_n16pos(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserRunesRuntimeData.n16Pos)
}
inline ::int32_t UserInfo_SUserRunesRuntimeData::_internal_n16pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n16pos_;
}
inline void UserInfo_SUserRunesRuntimeData::_internal_set_n16pos(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n16pos_ = value;
}

// optional int32 n16Num = 3;
inline bool UserInfo_SUserRunesRuntimeData::has_n16num() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void UserInfo_SUserRunesRuntimeData::clear_n16num() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n16num_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t UserInfo_SUserRunesRuntimeData::n16num() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserRunesRuntimeData.n16Num)
  return _internal_n16num();
}
inline void UserInfo_SUserRunesRuntimeData::set_n16num(::int32_t value) {
  _internal_set_n16num(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserRunesRuntimeData.n16Num)
}
inline ::int32_t UserInfo_SUserRunesRuntimeData::_internal_n16num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n16num_;
}
inline void UserInfo_SUserRunesRuntimeData::_internal_set_n16num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n16num_ = value;
}

// optional int32 n16RemainTimes = 4;
inline bool UserInfo_SUserRunesRuntimeData::has_n16remaintimes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void UserInfo_SUserRunesRuntimeData::clear_n16remaintimes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n16remaintimes_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t UserInfo_SUserRunesRuntimeData::n16remaintimes() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.SUserRunesRuntimeData.n16RemainTimes)
  return _internal_n16remaintimes();
}
inline void UserInfo_SUserRunesRuntimeData::set_n16remaintimes(::int32_t value) {
  _internal_set_n16remaintimes(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.SUserRunesRuntimeData.n16RemainTimes)
}
inline ::int32_t UserInfo_SUserRunesRuntimeData::_internal_n16remaintimes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.n16remaintimes_;
}
inline void UserInfo_SUserRunesRuntimeData::_internal_set_n16remaintimes(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.n16remaintimes_ = value;
}

// -------------------------------------------------------------------

// UserInfo

// optional .CSToSS.SUserNetInfo usernetinfo = 2;
inline bool UserInfo::has_usernetinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.usernetinfo_ != nullptr);
  return value;
}
inline void UserInfo::clear_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.usernetinfo_ != nullptr) _impl_.usernetinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CSToSS::SUserNetInfo& UserInfo::_internal_usernetinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CSToSS::SUserNetInfo* p = _impl_.usernetinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::CSToSS::SUserNetInfo&>(::CSToSS::_SUserNetInfo_default_instance_);
}
inline const ::CSToSS::SUserNetInfo& UserInfo::usernetinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.usernetinfo)
  return _internal_usernetinfo();
}
inline void UserInfo::unsafe_arena_set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.usernetinfo_);
  }
  _impl_.usernetinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CSToSS.UserInfo.usernetinfo)
}
inline ::CSToSS::SUserNetInfo* UserInfo::release_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CSToSS::SUserNetInfo* released = _impl_.usernetinfo_;
  _impl_.usernetinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CSToSS::SUserNetInfo* UserInfo::unsafe_arena_release_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.UserInfo.usernetinfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CSToSS::SUserNetInfo* temp = _impl_.usernetinfo_;
  _impl_.usernetinfo_ = nullptr;
  return temp;
}
inline ::CSToSS::SUserNetInfo* UserInfo::_internal_mutable_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.usernetinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CSToSS::SUserNetInfo>(GetArena());
    _impl_.usernetinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(p);
  }
  return _impl_.usernetinfo_;
}
inline ::CSToSS::SUserNetInfo* UserInfo::mutable_usernetinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CSToSS::SUserNetInfo* _msg = _internal_mutable_usernetinfo();
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.usernetinfo)
  return _msg;
}
inline void UserInfo::set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.usernetinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.usernetinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:CSToSS.UserInfo.usernetinfo)
}

// optional .CSToSS.UserInfo.SUserDBData userdata = 3;
inline bool UserInfo::has_userdata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.userdata_ != nullptr);
  return value;
}
inline void UserInfo::clear_userdata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.userdata_ != nullptr) _impl_.userdata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CSToSS::UserInfo_SUserDBData& UserInfo::_internal_userdata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CSToSS::UserInfo_SUserDBData* p = _impl_.userdata_;
  return p != nullptr ? *p : reinterpret_cast<const ::CSToSS::UserInfo_SUserDBData&>(::CSToSS::_UserInfo_SUserDBData_default_instance_);
}
inline const ::CSToSS::UserInfo_SUserDBData& UserInfo::userdata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.userdata)
  return _internal_userdata();
}
inline void UserInfo::unsafe_arena_set_allocated_userdata(::CSToSS::UserInfo_SUserDBData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.userdata_);
  }
  _impl_.userdata_ = reinterpret_cast<::CSToSS::UserInfo_SUserDBData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CSToSS.UserInfo.userdata)
}
inline ::CSToSS::UserInfo_SUserDBData* UserInfo::release_userdata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CSToSS::UserInfo_SUserDBData* released = _impl_.userdata_;
  _impl_.userdata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CSToSS::UserInfo_SUserDBData* UserInfo::unsafe_arena_release_userdata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.UserInfo.userdata)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CSToSS::UserInfo_SUserDBData* temp = _impl_.userdata_;
  _impl_.userdata_ = nullptr;
  return temp;
}
inline ::CSToSS::UserInfo_SUserDBData* UserInfo::_internal_mutable_userdata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.userdata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CSToSS::UserInfo_SUserDBData>(GetArena());
    _impl_.userdata_ = reinterpret_cast<::CSToSS::UserInfo_SUserDBData*>(p);
  }
  return _impl_.userdata_;
}
inline ::CSToSS::UserInfo_SUserDBData* UserInfo::mutable_userdata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CSToSS::UserInfo_SUserDBData* _msg = _internal_mutable_userdata();
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.userdata)
  return _msg;
}
inline void UserInfo::set_allocated_userdata(::CSToSS::UserInfo_SUserDBData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.userdata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.userdata_ = reinterpret_cast<::CSToSS::UserInfo_SUserDBData*>(value);
  // @@protoc_insertion_point(field_set_allocated:CSToSS.UserInfo.userdata)
}

// repeated int32 herolist = 4;
inline int UserInfo::_internal_herolist_size() const {
  return _internal_herolist().size();
}
inline int UserInfo::herolist_size() const {
  return _internal_herolist_size();
}
inline void UserInfo::clear_herolist() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.herolist_.Clear();
}
inline ::int32_t UserInfo::herolist(int index) const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.herolist)
  return _internal_herolist().Get(index);
}
inline void UserInfo::set_herolist(int index, ::int32_t value) {
  _internal_mutable_herolist()->Set(index, value);
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.herolist)
}
inline void UserInfo::add_herolist(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_herolist()->Add(value);
  // @@protoc_insertion_point(field_add:CSToSS.UserInfo.herolist)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& UserInfo::herolist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.UserInfo.herolist)
  return _internal_herolist();
}
inline ::google::protobuf::RepeatedField<::int32_t>* UserInfo::mutable_herolist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.UserInfo.herolist)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_herolist();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& UserInfo::_internal_herolist()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.herolist_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* UserInfo::_internal_mutable_herolist() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.herolist_;
}

// repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesBag = 5;
inline int UserInfo::_internal_runesbag_size() const {
  return _internal_runesbag().size();
}
inline int UserInfo::runesbag_size() const {
  return _internal_runesbag_size();
}
inline void UserInfo::clear_runesbag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runesbag_.Clear();
}
inline ::CSToSS::UserInfo_SUserRunesRuntimeData* UserInfo::mutable_runesbag(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.RunesBag)
  return _internal_mutable_runesbag()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>* UserInfo::mutable_runesbag()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.UserInfo.RunesBag)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_runesbag();
}
inline const ::CSToSS::UserInfo_SUserRunesRuntimeData& UserInfo::runesbag(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.RunesBag)
  return _internal_runesbag().Get(index);
}
inline ::CSToSS::UserInfo_SUserRunesRuntimeData* UserInfo::add_runesbag() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CSToSS::UserInfo_SUserRunesRuntimeData* _add = _internal_mutable_runesbag()->Add();
  // @@protoc_insertion_point(field_add:CSToSS.UserInfo.RunesBag)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>& UserInfo::runesbag() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.UserInfo.RunesBag)
  return _internal_runesbag();
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>&
UserInfo::_internal_runesbag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.runesbag_;
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>*
UserInfo::_internal_mutable_runesbag() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.runesbag_;
}

// repeated .CSToSS.UserInfo.SUserRunesRuntimeData RunesSlot = 6;
inline int UserInfo::_internal_runesslot_size() const {
  return _internal_runesslot().size();
}
inline int UserInfo::runesslot_size() const {
  return _internal_runesslot_size();
}
inline void UserInfo::clear_runesslot() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runesslot_.Clear();
}
inline ::CSToSS::UserInfo_SUserRunesRuntimeData* UserInfo::mutable_runesslot(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.UserInfo.RunesSlot)
  return _internal_mutable_runesslot()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>* UserInfo::mutable_runesslot()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.UserInfo.RunesSlot)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_runesslot();
}
inline const ::CSToSS::UserInfo_SUserRunesRuntimeData& UserInfo::runesslot(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.RunesSlot)
  return _internal_runesslot().Get(index);
}
inline ::CSToSS::UserInfo_SUserRunesRuntimeData* UserInfo::add_runesslot() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CSToSS::UserInfo_SUserRunesRuntimeData* _add = _internal_mutable_runesslot()->Add();
  // @@protoc_insertion_point(field_add:CSToSS.UserInfo.RunesSlot)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>& UserInfo::runesslot() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.UserInfo.RunesSlot)
  return _internal_runesslot();
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>&
UserInfo::_internal_runesslot() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.runesslot_;
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo_SUserRunesRuntimeData>*
UserInfo::_internal_mutable_runesslot() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.runesslot_;
}

// optional bool ifGuide = 7;
inline bool UserInfo::has_ifguide() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void UserInfo::clear_ifguide() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ifguide_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool UserInfo::ifguide() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserInfo.ifGuide)
  return _internal_ifguide();
}
inline void UserInfo::set_ifguide(bool value) {
  _internal_set_ifguide(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.UserInfo.ifGuide)
}
inline bool UserInfo::_internal_ifguide() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ifguide_;
}
inline void UserInfo::_internal_set_ifguide(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ifguide_ = value;
}

// -------------------------------------------------------------------

// UserRoomInfo

// optional bool ifmaster = 1;
inline bool UserRoomInfo::has_ifmaster() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UserRoomInfo::clear_ifmaster() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ifmaster_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool UserRoomInfo::ifmaster() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserRoomInfo.ifmaster)
  return _internal_ifmaster();
}
inline void UserRoomInfo::set_ifmaster(bool value) {
  _internal_set_ifmaster(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.UserRoomInfo.ifmaster)
}
inline bool UserRoomInfo::_internal_ifmaster() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ifmaster_;
}
inline void UserRoomInfo::_internal_set_ifmaster(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ifmaster_ = value;
}

// optional uint32 heroid = 2;
inline bool UserRoomInfo::has_heroid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UserRoomInfo::clear_heroid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.heroid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t UserRoomInfo::heroid() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserRoomInfo.heroid)
  return _internal_heroid();
}
inline void UserRoomInfo::set_heroid(::uint32_t value) {
  _internal_set_heroid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.UserRoomInfo.heroid)
}
inline ::uint32_t UserRoomInfo::_internal_heroid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.heroid_;
}
inline void UserRoomInfo::_internal_set_heroid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.heroid_ = value;
}

// optional uint64 guid = 3;
inline bool UserRoomInfo::has_guid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void UserRoomInfo::clear_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t UserRoomInfo::guid() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserRoomInfo.guid)
  return _internal_guid();
}
inline void UserRoomInfo::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.UserRoomInfo.guid)
}
inline ::uint64_t UserRoomInfo::_internal_guid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.guid_;
}
inline void UserRoomInfo::_internal_set_guid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = value;
}

// optional int32 pos = 4;
inline bool UserRoomInfo::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void UserRoomInfo::clear_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pos_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t UserRoomInfo::pos() const {
  // @@protoc_insertion_point(field_get:CSToSS.UserRoomInfo.pos)
  return _internal_pos();
}
inline void UserRoomInfo::set_pos(::int32_t value) {
  _internal_set_pos(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CSToSS.UserRoomInfo.pos)
}
inline ::int32_t UserRoomInfo::_internal_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pos_;
}
inline void UserRoomInfo::_internal_set_pos(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pos_ = value;
}

// -------------------------------------------------------------------

// OrderBeginNewBattle

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OrderBeginNewBattle];
inline bool OrderBeginNewBattle::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void OrderBeginNewBattle::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16388;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::CSToSS::MsgId OrderBeginNewBattle::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.OrderBeginNewBattle.msgid)
  return _internal_msgid();
}
inline void OrderBeginNewBattle::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CSToSS.OrderBeginNewBattle.msgid)
}
inline ::CSToSS::MsgId OrderBeginNewBattle::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void OrderBeginNewBattle::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 battleid = 2;
inline bool OrderBeginNewBattle::has_battleid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderBeginNewBattle::clear_battleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t OrderBeginNewBattle::battleid() const {
  // @@protoc_insertion_point(field_get:CSToSS.OrderBeginNewBattle.battleid)
  return _internal_battleid();
}
inline void OrderBeginNewBattle::set_battleid(::uint64_t value) {
  _internal_set_battleid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.OrderBeginNewBattle.battleid)
}
inline ::uint64_t OrderBeginNewBattle::_internal_battleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battleid_;
}
inline void OrderBeginNewBattle::_internal_set_battleid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = value;
}

// optional int32 state = 3;
inline bool OrderBeginNewBattle::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OrderBeginNewBattle::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t OrderBeginNewBattle::state() const {
  // @@protoc_insertion_point(field_get:CSToSS.OrderBeginNewBattle.state)
  return _internal_state();
}
inline void OrderBeginNewBattle::set_state(::int32_t value) {
  _internal_set_state(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.OrderBeginNewBattle.state)
}
inline ::int32_t OrderBeginNewBattle::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_;
}
inline void OrderBeginNewBattle::_internal_set_state(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_ = value;
}

// optional int32 mapid = 4;
inline bool OrderBeginNewBattle::has_mapid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OrderBeginNewBattle::clear_mapid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mapid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t OrderBeginNewBattle::mapid() const {
  // @@protoc_insertion_point(field_get:CSToSS.OrderBeginNewBattle.mapid)
  return _internal_mapid();
}
inline void OrderBeginNewBattle::set_mapid(::int32_t value) {
  _internal_set_mapid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.OrderBeginNewBattle.mapid)
}
inline ::int32_t OrderBeginNewBattle::_internal_mapid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mapid_;
}
inline void OrderBeginNewBattle::_internal_set_mapid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mapid_ = value;
}

// optional int32 ssid = 5;
inline bool OrderBeginNewBattle::has_ssid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void OrderBeginNewBattle::clear_ssid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ssid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t OrderBeginNewBattle::ssid() const {
  // @@protoc_insertion_point(field_get:CSToSS.OrderBeginNewBattle.ssid)
  return _internal_ssid();
}
inline void OrderBeginNewBattle::set_ssid(::int32_t value) {
  _internal_set_ssid(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CSToSS.OrderBeginNewBattle.ssid)
}
inline ::int32_t OrderBeginNewBattle::_internal_ssid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ssid_;
}
inline void OrderBeginNewBattle::_internal_set_ssid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ssid_ = value;
}

// repeated .CSToSS.UserRoomInfo userRoomInfo = 6;
inline int OrderBeginNewBattle::_internal_userroominfo_size() const {
  return _internal_userroominfo().size();
}
inline int OrderBeginNewBattle::userroominfo_size() const {
  return _internal_userroominfo_size();
}
inline void OrderBeginNewBattle::clear_userroominfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userroominfo_.Clear();
}
inline ::CSToSS::UserRoomInfo* OrderBeginNewBattle::mutable_userroominfo(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.OrderBeginNewBattle.userRoomInfo)
  return _internal_mutable_userroominfo()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::UserRoomInfo>* OrderBeginNewBattle::mutable_userroominfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.OrderBeginNewBattle.userRoomInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_userroominfo();
}
inline const ::CSToSS::UserRoomInfo& OrderBeginNewBattle::userroominfo(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.OrderBeginNewBattle.userRoomInfo)
  return _internal_userroominfo().Get(index);
}
inline ::CSToSS::UserRoomInfo* OrderBeginNewBattle::add_userroominfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CSToSS::UserRoomInfo* _add = _internal_mutable_userroominfo()->Add();
  // @@protoc_insertion_point(field_add:CSToSS.OrderBeginNewBattle.userRoomInfo)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::UserRoomInfo>& OrderBeginNewBattle::userroominfo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.OrderBeginNewBattle.userRoomInfo)
  return _internal_userroominfo();
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::UserRoomInfo>&
OrderBeginNewBattle::_internal_userroominfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userroominfo_;
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::UserRoomInfo>*
OrderBeginNewBattle::_internal_mutable_userroominfo() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.userroominfo_;
}

// repeated .CSToSS.UserInfo userinfo = 7;
inline int OrderBeginNewBattle::_internal_userinfo_size() const {
  return _internal_userinfo().size();
}
inline int OrderBeginNewBattle::userinfo_size() const {
  return _internal_userinfo_size();
}
inline void OrderBeginNewBattle::clear_userinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userinfo_.Clear();
}
inline ::CSToSS::UserInfo* OrderBeginNewBattle::mutable_userinfo(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.OrderBeginNewBattle.userinfo)
  return _internal_mutable_userinfo()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo>* OrderBeginNewBattle::mutable_userinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.OrderBeginNewBattle.userinfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_userinfo();
}
inline const ::CSToSS::UserInfo& OrderBeginNewBattle::userinfo(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.OrderBeginNewBattle.userinfo)
  return _internal_userinfo().Get(index);
}
inline ::CSToSS::UserInfo* OrderBeginNewBattle::add_userinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CSToSS::UserInfo* _add = _internal_mutable_userinfo()->Add();
  // @@protoc_insertion_point(field_add:CSToSS.OrderBeginNewBattle.userinfo)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo>& OrderBeginNewBattle::userinfo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.OrderBeginNewBattle.userinfo)
  return _internal_userinfo();
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo>&
OrderBeginNewBattle::_internal_userinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userinfo_;
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::UserInfo>*
OrderBeginNewBattle::_internal_mutable_userinfo() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.userinfo_;
}

// -------------------------------------------------------------------

// NotifyBattleStateChange

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBattleStateChange];
inline bool NotifyBattleStateChange::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NotifyBattleStateChange::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16389;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSToSS::MsgId NotifyBattleStateChange::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyBattleStateChange.msgid)
  return _internal_msgid();
}
inline void NotifyBattleStateChange::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyBattleStateChange.msgid)
}
inline ::CSToSS::MsgId NotifyBattleStateChange::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyBattleStateChange::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 battleid = 2;
inline bool NotifyBattleStateChange::has_battleid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyBattleStateChange::clear_battleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t NotifyBattleStateChange::battleid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyBattleStateChange.battleid)
  return _internal_battleid();
}
inline void NotifyBattleStateChange::set_battleid(::uint64_t value) {
  _internal_set_battleid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyBattleStateChange.battleid)
}
inline ::uint64_t NotifyBattleStateChange::_internal_battleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battleid_;
}
inline void NotifyBattleStateChange::_internal_set_battleid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = value;
}

// optional int32 state = 3;
inline bool NotifyBattleStateChange::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NotifyBattleStateChange::clear_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t NotifyBattleStateChange::state() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyBattleStateChange.state)
  return _internal_state();
}
inline void NotifyBattleStateChange::set_state(::int32_t value) {
  _internal_set_state(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyBattleStateChange.state)
}
inline ::int32_t NotifyBattleStateChange::_internal_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.state_;
}
inline void NotifyBattleStateChange::_internal_set_state(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.state_ = value;
}

// -------------------------------------------------------------------

// NotifyUsetNetInfoChange

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUsetNetInfoChange];
inline bool NotifyUsetNetInfoChange::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NotifyUsetNetInfoChange::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16390;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSToSS::MsgId NotifyUsetNetInfoChange::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUsetNetInfoChange.msgid)
  return _internal_msgid();
}
inline void NotifyUsetNetInfoChange::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUsetNetInfoChange.msgid)
}
inline ::CSToSS::MsgId NotifyUsetNetInfoChange::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyUsetNetInfoChange::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 guid = 2;
inline bool NotifyUsetNetInfoChange::has_guid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NotifyUsetNetInfoChange::clear_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t NotifyUsetNetInfoChange::guid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUsetNetInfoChange.guid)
  return _internal_guid();
}
inline void NotifyUsetNetInfoChange::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUsetNetInfoChange.guid)
}
inline ::uint64_t NotifyUsetNetInfoChange::_internal_guid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.guid_;
}
inline void NotifyUsetNetInfoChange::_internal_set_guid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = value;
}

// optional .CSToSS.SUserNetInfo netinfo = 3;
inline bool NotifyUsetNetInfoChange::has_netinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.netinfo_ != nullptr);
  return value;
}
inline void NotifyUsetNetInfoChange::clear_netinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.netinfo_ != nullptr) _impl_.netinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CSToSS::SUserNetInfo& NotifyUsetNetInfoChange::_internal_netinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CSToSS::SUserNetInfo* p = _impl_.netinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::CSToSS::SUserNetInfo&>(::CSToSS::_SUserNetInfo_default_instance_);
}
inline const ::CSToSS::SUserNetInfo& NotifyUsetNetInfoChange::netinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUsetNetInfoChange.netinfo)
  return _internal_netinfo();
}
inline void NotifyUsetNetInfoChange::unsafe_arena_set_allocated_netinfo(::CSToSS::SUserNetInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.netinfo_);
  }
  _impl_.netinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CSToSS.NotifyUsetNetInfoChange.netinfo)
}
inline ::CSToSS::SUserNetInfo* NotifyUsetNetInfoChange::release_netinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CSToSS::SUserNetInfo* released = _impl_.netinfo_;
  _impl_.netinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CSToSS::SUserNetInfo* NotifyUsetNetInfoChange::unsafe_arena_release_netinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.NotifyUsetNetInfoChange.netinfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CSToSS::SUserNetInfo* temp = _impl_.netinfo_;
  _impl_.netinfo_ = nullptr;
  return temp;
}
inline ::CSToSS::SUserNetInfo* NotifyUsetNetInfoChange::_internal_mutable_netinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.netinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CSToSS::SUserNetInfo>(GetArena());
    _impl_.netinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(p);
  }
  return _impl_.netinfo_;
}
inline ::CSToSS::SUserNetInfo* NotifyUsetNetInfoChange::mutable_netinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CSToSS::SUserNetInfo* _msg = _internal_mutable_netinfo();
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyUsetNetInfoChange.netinfo)
  return _msg;
}
inline void NotifyUsetNetInfoChange::set_allocated_netinfo(::CSToSS::SUserNetInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.netinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.netinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:CSToSS.NotifyUsetNetInfoChange.netinfo)
}

// -------------------------------------------------------------------

// PingRet

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_AskPingRet];
inline bool PingRet::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PingRet::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16385;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CSToSS::MsgId PingRet::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.PingRet.msgid)
  return _internal_msgid();
}
inline void PingRet::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.PingRet.msgid)
}
inline ::CSToSS::MsgId PingRet::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void PingRet::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional int64 time = 2;
inline bool PingRet::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PingRet::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t PingRet::time() const {
  // @@protoc_insertion_point(field_get:CSToSS.PingRet.time)
  return _internal_time();
}
inline void PingRet::set_time(::int64_t value) {
  _internal_set_time(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.PingRet.time)
}
inline ::int64_t PingRet::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_;
}
inline void PingRet::_internal_set_time(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = value;
}

// -------------------------------------------------------------------

// NotifyBuffCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyBuffCfgList];
inline bool NotifyBuffCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NotifyBuffCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16391;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CSToSS::MsgId NotifyBuffCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyBuffCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyBuffCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyBuffCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyBuffCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyBuffCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional int64 time = 2;
inline bool NotifyBuffCfgList::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyBuffCfgList::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t NotifyBuffCfgList::time() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyBuffCfgList.time)
  return _internal_time();
}
inline void NotifyBuffCfgList::set_time(::int64_t value) {
  _internal_set_time(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyBuffCfgList.time)
}
inline ::int64_t NotifyBuffCfgList::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_;
}
inline void NotifyBuffCfgList::_internal_set_time(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = value;
}

// -------------------------------------------------------------------

// NotifySkillCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillCfgList];
inline bool NotifySkillCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NotifySkillCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16392;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CSToSS::MsgId NotifySkillCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillCfgList.msgid)
  return _internal_msgid();
}
inline void NotifySkillCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillCfgList.msgid)
}
inline ::CSToSS::MsgId NotifySkillCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySkillCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional int64 time = 2;
inline bool NotifySkillCfgList::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySkillCfgList::clear_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t NotifySkillCfgList::time() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillCfgList.time)
  return _internal_time();
}
inline void NotifySkillCfgList::set_time(::int64_t value) {
  _internal_set_time(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillCfgList.time)
}
inline ::int64_t NotifySkillCfgList::_internal_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_;
}
inline void NotifySkillCfgList::_internal_set_time(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_ = value;
}

// -------------------------------------------------------------------

// NotifyNPCCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNPCCfgList];
inline bool NotifyNPCCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyNPCCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16393;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyNPCCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyNPCCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyNPCCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyNPCCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyNPCCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyNPCCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyNPCCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyNPCCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyNPCCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyNPCCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyNPCCfgList.cfg)
  return _s;
}
inline const std::string& NotifyNPCCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyNPCCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyNPCCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyNPCCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyNPCCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyNPCCfgList.cfg)
}
inline void NotifyNPCCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyNPCCfgList.cfg)
}
inline void NotifyNPCCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyNPCCfgList.cfg)
}
inline void NotifyNPCCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyNPCCfgList.cfg)
}
inline void NotifyNPCCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyNPCCfgList.cfg)
}
inline void NotifyNPCCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyNPCCfgList.cfg)
}
inline void NotifyNPCCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyNPCCfgList.cfg)
}
inline void NotifyNPCCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyNPCCfgList.cfg)
}
inline void NotifyNPCCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyNPCCfgList.cfg)
}
inline void NotifyNPCCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyNPCCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyNPCCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyNPCCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyNPCCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyNPCCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyNPCCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyNPCCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyHeroCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyHeroCfgList];
inline bool NotifyHeroCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyHeroCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16394;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyHeroCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyHeroCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyHeroCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyHeroCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyHeroCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyHeroCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyHeroCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyHeroCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyHeroCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyHeroCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyHeroCfgList.cfg)
  return _s;
}
inline const std::string& NotifyHeroCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyHeroCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyHeroCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyHeroCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyHeroCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyHeroCfgList.cfg)
}
inline void NotifyHeroCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyHeroCfgList.cfg)
}
inline void NotifyHeroCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyHeroCfgList.cfg)
}
inline void NotifyHeroCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyHeroCfgList.cfg)
}
inline void NotifyHeroCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyHeroCfgList.cfg)
}
inline void NotifyHeroCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyHeroCfgList.cfg)
}
inline void NotifyHeroCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyHeroCfgList.cfg)
}
inline void NotifyHeroCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyHeroCfgList.cfg)
}
inline void NotifyHeroCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyHeroCfgList.cfg)
}
inline void NotifyHeroCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyHeroCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyHeroCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyHeroCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyHeroCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyHeroCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyHeroCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyHeroCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyShopCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyShopCfgList];
inline bool NotifyShopCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyShopCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16395;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyShopCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyShopCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyShopCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyShopCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyShopCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyShopCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyShopCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyShopCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyShopCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyShopCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyShopCfgList.cfg)
  return _s;
}
inline const std::string& NotifyShopCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyShopCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyShopCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyShopCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyShopCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyShopCfgList.cfg)
}
inline void NotifyShopCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyShopCfgList.cfg)
}
inline void NotifyShopCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyShopCfgList.cfg)
}
inline void NotifyShopCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyShopCfgList.cfg)
}
inline void NotifyShopCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyShopCfgList.cfg)
}
inline void NotifyShopCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyShopCfgList.cfg)
}
inline void NotifyShopCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyShopCfgList.cfg)
}
inline void NotifyShopCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyShopCfgList.cfg)
}
inline void NotifyShopCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyShopCfgList.cfg)
}
inline void NotifyShopCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyShopCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyShopCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyShopCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyShopCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyShopCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyShopCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyShopCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyGoodsCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyGoodsCfgList];
inline bool NotifyGoodsCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyGoodsCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16396;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyGoodsCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyGoodsCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyGoodsCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyGoodsCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyGoodsCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyGoodsCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyGoodsCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyGoodsCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyGoodsCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyGoodsCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyGoodsCfgList.cfg)
  return _s;
}
inline const std::string& NotifyGoodsCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyGoodsCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyGoodsCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyGoodsCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyGoodsCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyGoodsCfgList.cfg)
}
inline void NotifyGoodsCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyGoodsCfgList.cfg)
}
inline void NotifyGoodsCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyGoodsCfgList.cfg)
}
inline void NotifyGoodsCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyGoodsCfgList.cfg)
}
inline void NotifyGoodsCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyGoodsCfgList.cfg)
}
inline void NotifyGoodsCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyGoodsCfgList.cfg)
}
inline void NotifyGoodsCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyGoodsCfgList.cfg)
}
inline void NotifyGoodsCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyGoodsCfgList.cfg)
}
inline void NotifyGoodsCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyGoodsCfgList.cfg)
}
inline void NotifyGoodsCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyGoodsCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyGoodsCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyGoodsCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyGoodsCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyGoodsCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyGoodsCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyGoodsCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyPublicLuaStr

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPublicLuaStr];
inline bool NotifyPublicLuaStr::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyPublicLuaStr::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16397;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyPublicLuaStr::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyPublicLuaStr.msgid)
  return _internal_msgid();
}
inline void NotifyPublicLuaStr::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPublicLuaStr.msgid)
}
inline ::CSToSS::MsgId NotifyPublicLuaStr::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyPublicLuaStr::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyPublicLuaStr::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyPublicLuaStr::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyPublicLuaStr::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyPublicLuaStr::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyPublicLuaStr.cfg)
  return _s;
}
inline const std::string& NotifyPublicLuaStr::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyPublicLuaStr.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyPublicLuaStr::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyPublicLuaStr.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyPublicLuaStr::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPublicLuaStr.cfg)
}
inline void NotifyPublicLuaStr::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPublicLuaStr.cfg)
}
inline void NotifyPublicLuaStr::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyPublicLuaStr.cfg)
}
inline void NotifyPublicLuaStr::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyPublicLuaStr.cfg)
}
inline void NotifyPublicLuaStr::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyPublicLuaStr.cfg)
}
inline void NotifyPublicLuaStr::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyPublicLuaStr.cfg)
}
inline void NotifyPublicLuaStr::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyPublicLuaStr.cfg)
}
inline void NotifyPublicLuaStr::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyPublicLuaStr.cfg)
}
inline void NotifyPublicLuaStr::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyPublicLuaStr.cfg)
}
inline void NotifyPublicLuaStr::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyPublicLuaStr.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyPublicLuaStr::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyPublicLuaStr.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyPublicLuaStr::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyPublicLuaStr.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyPublicLuaStr::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyPublicLuaStr::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyRunesCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesCfgList];
inline bool NotifyRunesCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyRunesCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16400;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyRunesCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyRunesCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyRunesCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRunesCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyRunesCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyRunesCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyRunesCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyRunesCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyRunesCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyRunesCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyRunesCfgList.cfg)
  return _s;
}
inline const std::string& NotifyRunesCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyRunesCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyRunesCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyRunesCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyRunesCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRunesCfgList.cfg)
}
inline void NotifyRunesCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRunesCfgList.cfg)
}
inline void NotifyRunesCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyRunesCfgList.cfg)
}
inline void NotifyRunesCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyRunesCfgList.cfg)
}
inline void NotifyRunesCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyRunesCfgList.cfg)
}
inline void NotifyRunesCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyRunesCfgList.cfg)
}
inline void NotifyRunesCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyRunesCfgList.cfg)
}
inline void NotifyRunesCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyRunesCfgList.cfg)
}
inline void NotifyRunesCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyRunesCfgList.cfg)
}
inline void NotifyRunesCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyRunesCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyRunesCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyRunesCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyRunesCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyRunesCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyRunesCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyRunesCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyRunesSlotCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRunesSlotCfgList];
inline bool NotifyRunesSlotCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyRunesSlotCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16401;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyRunesSlotCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyRunesSlotCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyRunesSlotCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRunesSlotCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyRunesSlotCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyRunesSlotCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyRunesSlotCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyRunesSlotCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyRunesSlotCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyRunesSlotCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyRunesSlotCfgList.cfg)
  return _s;
}
inline const std::string& NotifyRunesSlotCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyRunesSlotCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyRunesSlotCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyRunesSlotCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyRunesSlotCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRunesSlotCfgList.cfg)
}
inline void NotifyRunesSlotCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRunesSlotCfgList.cfg)
}
inline void NotifyRunesSlotCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyRunesSlotCfgList.cfg)
}
inline void NotifyRunesSlotCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyRunesSlotCfgList.cfg)
}
inline void NotifyRunesSlotCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyRunesSlotCfgList.cfg)
}
inline void NotifyRunesSlotCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyRunesSlotCfgList.cfg)
}
inline void NotifyRunesSlotCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyRunesSlotCfgList.cfg)
}
inline void NotifyRunesSlotCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyRunesSlotCfgList.cfg)
}
inline void NotifyRunesSlotCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyRunesSlotCfgList.cfg)
}
inline void NotifyRunesSlotCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyRunesSlotCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyRunesSlotCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyRunesSlotCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyRunesSlotCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyRunesSlotCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyRunesSlotCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyRunesSlotCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyWildMonsterCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyWildMonsterCfgList];
inline bool NotifyWildMonsterCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyWildMonsterCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16402;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyWildMonsterCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyWildMonsterCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyWildMonsterCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyWildMonsterCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyWildMonsterCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyWildMonsterCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyWildMonsterCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyWildMonsterCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyWildMonsterCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyWildMonsterCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyWildMonsterCfgList.cfg)
  return _s;
}
inline const std::string& NotifyWildMonsterCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyWildMonsterCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyWildMonsterCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyWildMonsterCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyWildMonsterCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyWildMonsterCfgList.cfg)
}
inline void NotifyWildMonsterCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyWildMonsterCfgList.cfg)
}
inline void NotifyWildMonsterCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyWildMonsterCfgList.cfg)
}
inline void NotifyWildMonsterCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyWildMonsterCfgList.cfg)
}
inline void NotifyWildMonsterCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyWildMonsterCfgList.cfg)
}
inline void NotifyWildMonsterCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyWildMonsterCfgList.cfg)
}
inline void NotifyWildMonsterCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyWildMonsterCfgList.cfg)
}
inline void NotifyWildMonsterCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyWildMonsterCfgList.cfg)
}
inline void NotifyWildMonsterCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyWildMonsterCfgList.cfg)
}
inline void NotifyWildMonsterCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyWildMonsterCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyWildMonsterCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyWildMonsterCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyWildMonsterCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyWildMonsterCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyWildMonsterCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyWildMonsterCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyUserInfoChange

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserInfoChange];
inline bool NotifyUserInfoChange::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NotifyUserInfoChange::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16436;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSToSS::MsgId NotifyUserInfoChange::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserInfoChange.msgid)
  return _internal_msgid();
}
inline void NotifyUserInfoChange::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserInfoChange.msgid)
}
inline ::CSToSS::MsgId NotifyUserInfoChange::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyUserInfoChange::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 guid = 2;
inline bool NotifyUserInfoChange::has_guid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyUserInfoChange::clear_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t NotifyUserInfoChange::guid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserInfoChange.guid)
  return _internal_guid();
}
inline void NotifyUserInfoChange::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserInfoChange.guid)
}
inline ::uint64_t NotifyUserInfoChange::_internal_guid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.guid_;
}
inline void NotifyUserInfoChange::_internal_set_guid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = value;
}

// optional int64 gold = 3;
inline bool NotifyUserInfoChange::has_gold() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NotifyUserInfoChange::clear_gold() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gold_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t NotifyUserInfoChange::gold() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserInfoChange.gold)
  return _internal_gold();
}
inline void NotifyUserInfoChange::set_gold(::int64_t value) {
  _internal_set_gold(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserInfoChange.gold)
}
inline ::int64_t NotifyUserInfoChange::_internal_gold() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gold_;
}
inline void NotifyUserInfoChange::_internal_set_gold(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gold_ = value;
}

// -------------------------------------------------------------------

// NotifyNewSkillCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyNewSkillCfgList];
inline bool NotifyNewSkillCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyNewSkillCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16404;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyNewSkillCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyNewSkillCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyNewSkillCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyNewSkillCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyNewSkillCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyNewSkillCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyNewSkillCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyNewSkillCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyNewSkillCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyNewSkillCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyNewSkillCfgList.cfg)
  return _s;
}
inline const std::string& NotifyNewSkillCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyNewSkillCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyNewSkillCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyNewSkillCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyNewSkillCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyNewSkillCfgList.cfg)
}
inline void NotifyNewSkillCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyNewSkillCfgList.cfg)
}
inline void NotifyNewSkillCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyNewSkillCfgList.cfg)
}
inline void NotifyNewSkillCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyNewSkillCfgList.cfg)
}
inline void NotifyNewSkillCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyNewSkillCfgList.cfg)
}
inline void NotifyNewSkillCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyNewSkillCfgList.cfg)
}
inline void NotifyNewSkillCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyNewSkillCfgList.cfg)
}
inline void NotifyNewSkillCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyNewSkillCfgList.cfg)
}
inline void NotifyNewSkillCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyNewSkillCfgList.cfg)
}
inline void NotifyNewSkillCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyNewSkillCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyNewSkillCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyNewSkillCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyNewSkillCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyNewSkillCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyNewSkillCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyNewSkillCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifySkillModelAccountCfgCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelAccountCfgCfgList];
inline bool NotifySkillModelAccountCfgCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySkillModelAccountCfgCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16405;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifySkillModelAccountCfgCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelAccountCfgCfgList.msgid)
  return _internal_msgid();
}
inline void NotifySkillModelAccountCfgCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelAccountCfgCfgList.msgid)
}
inline ::CSToSS::MsgId NotifySkillModelAccountCfgCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySkillModelAccountCfgCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifySkillModelAccountCfgCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifySkillModelAccountCfgCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifySkillModelAccountCfgCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifySkillModelAccountCfgCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
  return _s;
}
inline const std::string& NotifySkillModelAccountCfgCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifySkillModelAccountCfgCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifySkillModelAccountCfgCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
}
inline void NotifySkillModelAccountCfgCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
}
inline void NotifySkillModelAccountCfgCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
}
inline void NotifySkillModelAccountCfgCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
}
inline void NotifySkillModelAccountCfgCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
}
inline void NotifySkillModelAccountCfgCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
}
inline void NotifySkillModelAccountCfgCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
}
inline void NotifySkillModelAccountCfgCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
}
inline void NotifySkillModelAccountCfgCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
}
inline void NotifySkillModelAccountCfgCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelAccountCfgCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelAccountCfgCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifySkillModelAccountCfgCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelAccountCfgCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelAccountCfgCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifySkillModelRangeCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelRangeCfgList];
inline bool NotifySkillModelRangeCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySkillModelRangeCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16407;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifySkillModelRangeCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelRangeCfgList.msgid)
  return _internal_msgid();
}
inline void NotifySkillModelRangeCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelRangeCfgList.msgid)
}
inline ::CSToSS::MsgId NotifySkillModelRangeCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySkillModelRangeCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifySkillModelRangeCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifySkillModelRangeCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifySkillModelRangeCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifySkillModelRangeCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifySkillModelRangeCfgList.cfg)
  return _s;
}
inline const std::string& NotifySkillModelRangeCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelRangeCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifySkillModelRangeCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifySkillModelRangeCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifySkillModelRangeCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelRangeCfgList.cfg)
}
inline void NotifySkillModelRangeCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelRangeCfgList.cfg)
}
inline void NotifySkillModelRangeCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifySkillModelRangeCfgList.cfg)
}
inline void NotifySkillModelRangeCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifySkillModelRangeCfgList.cfg)
}
inline void NotifySkillModelRangeCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifySkillModelRangeCfgList.cfg)
}
inline void NotifySkillModelRangeCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelRangeCfgList.cfg)
}
inline void NotifySkillModelRangeCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelRangeCfgList.cfg)
}
inline void NotifySkillModelRangeCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifySkillModelRangeCfgList.cfg)
}
inline void NotifySkillModelRangeCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifySkillModelRangeCfgList.cfg)
}
inline void NotifySkillModelRangeCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifySkillModelRangeCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelRangeCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifySkillModelRangeCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelRangeCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifySkillModelRangeCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelRangeCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelRangeCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifySkillModelLeadingCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLeadingCfgList];
inline bool NotifySkillModelLeadingCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySkillModelLeadingCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16408;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifySkillModelLeadingCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelLeadingCfgList.msgid)
  return _internal_msgid();
}
inline void NotifySkillModelLeadingCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelLeadingCfgList.msgid)
}
inline ::CSToSS::MsgId NotifySkillModelLeadingCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySkillModelLeadingCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifySkillModelLeadingCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifySkillModelLeadingCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifySkillModelLeadingCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifySkillModelLeadingCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifySkillModelLeadingCfgList.cfg)
  return _s;
}
inline const std::string& NotifySkillModelLeadingCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelLeadingCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifySkillModelLeadingCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifySkillModelLeadingCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifySkillModelLeadingCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelLeadingCfgList.cfg)
}
inline void NotifySkillModelLeadingCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelLeadingCfgList.cfg)
}
inline void NotifySkillModelLeadingCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifySkillModelLeadingCfgList.cfg)
}
inline void NotifySkillModelLeadingCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifySkillModelLeadingCfgList.cfg)
}
inline void NotifySkillModelLeadingCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifySkillModelLeadingCfgList.cfg)
}
inline void NotifySkillModelLeadingCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelLeadingCfgList.cfg)
}
inline void NotifySkillModelLeadingCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelLeadingCfgList.cfg)
}
inline void NotifySkillModelLeadingCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifySkillModelLeadingCfgList.cfg)
}
inline void NotifySkillModelLeadingCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifySkillModelLeadingCfgList.cfg)
}
inline void NotifySkillModelLeadingCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifySkillModelLeadingCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelLeadingCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifySkillModelLeadingCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelLeadingCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifySkillModelLeadingCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelLeadingCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelLeadingCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifySkillModelEmitCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelEmitCfgList];
inline bool NotifySkillModelEmitCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySkillModelEmitCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16406;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifySkillModelEmitCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelEmitCfgList.msgid)
  return _internal_msgid();
}
inline void NotifySkillModelEmitCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelEmitCfgList.msgid)
}
inline ::CSToSS::MsgId NotifySkillModelEmitCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySkillModelEmitCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifySkillModelEmitCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifySkillModelEmitCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifySkillModelEmitCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifySkillModelEmitCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifySkillModelEmitCfgList.cfg)
  return _s;
}
inline const std::string& NotifySkillModelEmitCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelEmitCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifySkillModelEmitCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifySkillModelEmitCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifySkillModelEmitCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelEmitCfgList.cfg)
}
inline void NotifySkillModelEmitCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelEmitCfgList.cfg)
}
inline void NotifySkillModelEmitCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifySkillModelEmitCfgList.cfg)
}
inline void NotifySkillModelEmitCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifySkillModelEmitCfgList.cfg)
}
inline void NotifySkillModelEmitCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifySkillModelEmitCfgList.cfg)
}
inline void NotifySkillModelEmitCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelEmitCfgList.cfg)
}
inline void NotifySkillModelEmitCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelEmitCfgList.cfg)
}
inline void NotifySkillModelEmitCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifySkillModelEmitCfgList.cfg)
}
inline void NotifySkillModelEmitCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifySkillModelEmitCfgList.cfg)
}
inline void NotifySkillModelEmitCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifySkillModelEmitCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelEmitCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifySkillModelEmitCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelEmitCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifySkillModelEmitCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelEmitCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelEmitCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifySkillModelBufCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelBufCfgList];
inline bool NotifySkillModelBufCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySkillModelBufCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16409;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifySkillModelBufCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelBufCfgList.msgid)
  return _internal_msgid();
}
inline void NotifySkillModelBufCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelBufCfgList.msgid)
}
inline ::CSToSS::MsgId NotifySkillModelBufCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySkillModelBufCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifySkillModelBufCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifySkillModelBufCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifySkillModelBufCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifySkillModelBufCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifySkillModelBufCfgList.cfg)
  return _s;
}
inline const std::string& NotifySkillModelBufCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelBufCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifySkillModelBufCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifySkillModelBufCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifySkillModelBufCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelBufCfgList.cfg)
}
inline void NotifySkillModelBufCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelBufCfgList.cfg)
}
inline void NotifySkillModelBufCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifySkillModelBufCfgList.cfg)
}
inline void NotifySkillModelBufCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifySkillModelBufCfgList.cfg)
}
inline void NotifySkillModelBufCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifySkillModelBufCfgList.cfg)
}
inline void NotifySkillModelBufCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelBufCfgList.cfg)
}
inline void NotifySkillModelBufCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelBufCfgList.cfg)
}
inline void NotifySkillModelBufCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifySkillModelBufCfgList.cfg)
}
inline void NotifySkillModelBufCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifySkillModelBufCfgList.cfg)
}
inline void NotifySkillModelBufCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifySkillModelBufCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelBufCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifySkillModelBufCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelBufCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifySkillModelBufCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelBufCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelBufCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifySkillModelSummonCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSummonCfgList];
inline bool NotifySkillModelSummonCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySkillModelSummonCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16410;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifySkillModelSummonCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelSummonCfgList.msgid)
  return _internal_msgid();
}
inline void NotifySkillModelSummonCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelSummonCfgList.msgid)
}
inline ::CSToSS::MsgId NotifySkillModelSummonCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySkillModelSummonCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifySkillModelSummonCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifySkillModelSummonCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifySkillModelSummonCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifySkillModelSummonCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifySkillModelSummonCfgList.cfg)
  return _s;
}
inline const std::string& NotifySkillModelSummonCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelSummonCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifySkillModelSummonCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifySkillModelSummonCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifySkillModelSummonCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelSummonCfgList.cfg)
}
inline void NotifySkillModelSummonCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelSummonCfgList.cfg)
}
inline void NotifySkillModelSummonCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifySkillModelSummonCfgList.cfg)
}
inline void NotifySkillModelSummonCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifySkillModelSummonCfgList.cfg)
}
inline void NotifySkillModelSummonCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifySkillModelSummonCfgList.cfg)
}
inline void NotifySkillModelSummonCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelSummonCfgList.cfg)
}
inline void NotifySkillModelSummonCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelSummonCfgList.cfg)
}
inline void NotifySkillModelSummonCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifySkillModelSummonCfgList.cfg)
}
inline void NotifySkillModelSummonCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifySkillModelSummonCfgList.cfg)
}
inline void NotifySkillModelSummonCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifySkillModelSummonCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelSummonCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifySkillModelSummonCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelSummonCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifySkillModelSummonCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelSummonCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelSummonCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifySkillModelMoveCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelMoveCfgList];
inline bool NotifySkillModelMoveCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySkillModelMoveCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16411;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifySkillModelMoveCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelMoveCfgList.msgid)
  return _internal_msgid();
}
inline void NotifySkillModelMoveCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelMoveCfgList.msgid)
}
inline ::CSToSS::MsgId NotifySkillModelMoveCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySkillModelMoveCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifySkillModelMoveCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifySkillModelMoveCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifySkillModelMoveCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifySkillModelMoveCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifySkillModelMoveCfgList.cfg)
  return _s;
}
inline const std::string& NotifySkillModelMoveCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelMoveCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifySkillModelMoveCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifySkillModelMoveCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifySkillModelMoveCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelMoveCfgList.cfg)
}
inline void NotifySkillModelMoveCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelMoveCfgList.cfg)
}
inline void NotifySkillModelMoveCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifySkillModelMoveCfgList.cfg)
}
inline void NotifySkillModelMoveCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifySkillModelMoveCfgList.cfg)
}
inline void NotifySkillModelMoveCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifySkillModelMoveCfgList.cfg)
}
inline void NotifySkillModelMoveCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelMoveCfgList.cfg)
}
inline void NotifySkillModelMoveCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelMoveCfgList.cfg)
}
inline void NotifySkillModelMoveCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifySkillModelMoveCfgList.cfg)
}
inline void NotifySkillModelMoveCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifySkillModelMoveCfgList.cfg)
}
inline void NotifySkillModelMoveCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifySkillModelMoveCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelMoveCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifySkillModelMoveCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelMoveCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifySkillModelMoveCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelMoveCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelMoveCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifySkillModelSwitchCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelSwitchCfgList];
inline bool NotifySkillModelSwitchCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySkillModelSwitchCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16412;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifySkillModelSwitchCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelSwitchCfgList.msgid)
  return _internal_msgid();
}
inline void NotifySkillModelSwitchCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelSwitchCfgList.msgid)
}
inline ::CSToSS::MsgId NotifySkillModelSwitchCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySkillModelSwitchCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifySkillModelSwitchCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifySkillModelSwitchCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifySkillModelSwitchCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifySkillModelSwitchCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifySkillModelSwitchCfgList.cfg)
  return _s;
}
inline const std::string& NotifySkillModelSwitchCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelSwitchCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifySkillModelSwitchCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifySkillModelSwitchCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifySkillModelSwitchCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelSwitchCfgList.cfg)
}
inline void NotifySkillModelSwitchCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelSwitchCfgList.cfg)
}
inline void NotifySkillModelSwitchCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifySkillModelSwitchCfgList.cfg)
}
inline void NotifySkillModelSwitchCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifySkillModelSwitchCfgList.cfg)
}
inline void NotifySkillModelSwitchCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifySkillModelSwitchCfgList.cfg)
}
inline void NotifySkillModelSwitchCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelSwitchCfgList.cfg)
}
inline void NotifySkillModelSwitchCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelSwitchCfgList.cfg)
}
inline void NotifySkillModelSwitchCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifySkillModelSwitchCfgList.cfg)
}
inline void NotifySkillModelSwitchCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifySkillModelSwitchCfgList.cfg)
}
inline void NotifySkillModelSwitchCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifySkillModelSwitchCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelSwitchCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifySkillModelSwitchCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelSwitchCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifySkillModelSwitchCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelSwitchCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelSwitchCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifySkillModelPurificationCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelPurificationCfgList];
inline bool NotifySkillModelPurificationCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySkillModelPurificationCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16418;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifySkillModelPurificationCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelPurificationCfgList.msgid)
  return _internal_msgid();
}
inline void NotifySkillModelPurificationCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelPurificationCfgList.msgid)
}
inline ::CSToSS::MsgId NotifySkillModelPurificationCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySkillModelPurificationCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifySkillModelPurificationCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifySkillModelPurificationCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifySkillModelPurificationCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifySkillModelPurificationCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifySkillModelPurificationCfgList.cfg)
  return _s;
}
inline const std::string& NotifySkillModelPurificationCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelPurificationCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifySkillModelPurificationCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifySkillModelPurificationCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifySkillModelPurificationCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelPurificationCfgList.cfg)
}
inline void NotifySkillModelPurificationCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelPurificationCfgList.cfg)
}
inline void NotifySkillModelPurificationCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifySkillModelPurificationCfgList.cfg)
}
inline void NotifySkillModelPurificationCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifySkillModelPurificationCfgList.cfg)
}
inline void NotifySkillModelPurificationCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifySkillModelPurificationCfgList.cfg)
}
inline void NotifySkillModelPurificationCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelPurificationCfgList.cfg)
}
inline void NotifySkillModelPurificationCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelPurificationCfgList.cfg)
}
inline void NotifySkillModelPurificationCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifySkillModelPurificationCfgList.cfg)
}
inline void NotifySkillModelPurificationCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifySkillModelPurificationCfgList.cfg)
}
inline void NotifySkillModelPurificationCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifySkillModelPurificationCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelPurificationCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifySkillModelPurificationCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelPurificationCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifySkillModelPurificationCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelPurificationCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelPurificationCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifySkillModelLinkCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifySkillModelLinkCfgList];
inline bool NotifySkillModelLinkCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifySkillModelLinkCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16420;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifySkillModelLinkCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelLinkCfgList.msgid)
  return _internal_msgid();
}
inline void NotifySkillModelLinkCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelLinkCfgList.msgid)
}
inline ::CSToSS::MsgId NotifySkillModelLinkCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifySkillModelLinkCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifySkillModelLinkCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifySkillModelLinkCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifySkillModelLinkCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifySkillModelLinkCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifySkillModelLinkCfgList.cfg)
  return _s;
}
inline const std::string& NotifySkillModelLinkCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifySkillModelLinkCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifySkillModelLinkCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifySkillModelLinkCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifySkillModelLinkCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelLinkCfgList.cfg)
}
inline void NotifySkillModelLinkCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifySkillModelLinkCfgList.cfg)
}
inline void NotifySkillModelLinkCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifySkillModelLinkCfgList.cfg)
}
inline void NotifySkillModelLinkCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifySkillModelLinkCfgList.cfg)
}
inline void NotifySkillModelLinkCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifySkillModelLinkCfgList.cfg)
}
inline void NotifySkillModelLinkCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelLinkCfgList.cfg)
}
inline void NotifySkillModelLinkCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifySkillModelLinkCfgList.cfg)
}
inline void NotifySkillModelLinkCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifySkillModelLinkCfgList.cfg)
}
inline void NotifySkillModelLinkCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifySkillModelLinkCfgList.cfg)
}
inline void NotifySkillModelLinkCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifySkillModelLinkCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelLinkCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifySkillModelLinkCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelLinkCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifySkillModelLinkCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifySkillModelLinkCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifySkillModelLinkCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyPassitiveSkillCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveSkillCfgList];
inline bool NotifyPassitiveSkillCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyPassitiveSkillCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16413;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyPassitiveSkillCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyPassitiveSkillCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyPassitiveSkillCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveSkillCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyPassitiveSkillCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyPassitiveSkillCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyPassitiveSkillCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyPassitiveSkillCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyPassitiveSkillCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyPassitiveSkillCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyPassitiveSkillCfgList.cfg)
  return _s;
}
inline const std::string& NotifyPassitiveSkillCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyPassitiveSkillCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyPassitiveSkillCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyPassitiveSkillCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyPassitiveSkillCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveSkillCfgList.cfg)
}
inline void NotifyPassitiveSkillCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveSkillCfgList.cfg)
}
inline void NotifyPassitiveSkillCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyPassitiveSkillCfgList.cfg)
}
inline void NotifyPassitiveSkillCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyPassitiveSkillCfgList.cfg)
}
inline void NotifyPassitiveSkillCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyPassitiveSkillCfgList.cfg)
}
inline void NotifyPassitiveSkillCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyPassitiveSkillCfgList.cfg)
}
inline void NotifyPassitiveSkillCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyPassitiveSkillCfgList.cfg)
}
inline void NotifyPassitiveSkillCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyPassitiveSkillCfgList.cfg)
}
inline void NotifyPassitiveSkillCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyPassitiveSkillCfgList.cfg)
}
inline void NotifyPassitiveSkillCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyPassitiveSkillCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyPassitiveSkillCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyPassitiveSkillCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyPassitiveSkillCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyPassitiveSkillCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyPassitiveSkillCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyPassitiveSkillCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyPassitiveEffectBloodSeekCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectBloodSeekCfgList];
inline bool NotifyPassitiveEffectBloodSeekCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyPassitiveEffectBloodSeekCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16414;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyPassitiveEffectBloodSeekCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyPassitiveEffectBloodSeekCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyPassitiveEffectBloodSeekCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyPassitiveEffectBloodSeekCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyPassitiveEffectBloodSeekCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyPassitiveEffectBloodSeekCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyPassitiveEffectBloodSeekCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyPassitiveEffectBloodSeekCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
  return _s;
}
inline const std::string& NotifyPassitiveEffectBloodSeekCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyPassitiveEffectBloodSeekCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyPassitiveEffectBloodSeekCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
}
inline void NotifyPassitiveEffectBloodSeekCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
}
inline void NotifyPassitiveEffectBloodSeekCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
}
inline void NotifyPassitiveEffectBloodSeekCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
}
inline void NotifyPassitiveEffectBloodSeekCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
}
inline void NotifyPassitiveEffectBloodSeekCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
}
inline void NotifyPassitiveEffectBloodSeekCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
}
inline void NotifyPassitiveEffectBloodSeekCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
}
inline void NotifyPassitiveEffectBloodSeekCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
}
inline void NotifyPassitiveEffectBloodSeekCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyPassitiveEffectBloodSeekCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyPassitiveEffectBloodSeekCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyPassitiveEffectBloodSeekCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyPassitiveEffectBloodSeekCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyPassitiveEffectBloodSeekCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyPassitiveEffectReboundCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReboundCfgList];
inline bool NotifyPassitiveEffectReboundCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyPassitiveEffectReboundCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16415;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyPassitiveEffectReboundCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyPassitiveEffectReboundCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyPassitiveEffectReboundCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveEffectReboundCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyPassitiveEffectReboundCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyPassitiveEffectReboundCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyPassitiveEffectReboundCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyPassitiveEffectReboundCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyPassitiveEffectReboundCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyPassitiveEffectReboundCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
  return _s;
}
inline const std::string& NotifyPassitiveEffectReboundCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyPassitiveEffectReboundCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyPassitiveEffectReboundCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
}
inline void NotifyPassitiveEffectReboundCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
}
inline void NotifyPassitiveEffectReboundCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
}
inline void NotifyPassitiveEffectReboundCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
}
inline void NotifyPassitiveEffectReboundCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
}
inline void NotifyPassitiveEffectReboundCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
}
inline void NotifyPassitiveEffectReboundCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
}
inline void NotifyPassitiveEffectReboundCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
}
inline void NotifyPassitiveEffectReboundCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
}
inline void NotifyPassitiveEffectReboundCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyPassitiveEffectReboundCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyPassitiveEffectReboundCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyPassitiveEffectReboundCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyPassitiveEffectReboundCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyPassitiveEffectReboundCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyPassitiveEffectReliveCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyPassitiveEffectReliveCfgList];
inline bool NotifyPassitiveEffectReliveCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyPassitiveEffectReliveCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16416;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyPassitiveEffectReliveCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyPassitiveEffectReliveCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyPassitiveEffectReliveCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveEffectReliveCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyPassitiveEffectReliveCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyPassitiveEffectReliveCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyPassitiveEffectReliveCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyPassitiveEffectReliveCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyPassitiveEffectReliveCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyPassitiveEffectReliveCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
  return _s;
}
inline const std::string& NotifyPassitiveEffectReliveCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyPassitiveEffectReliveCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyPassitiveEffectReliveCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
}
inline void NotifyPassitiveEffectReliveCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
}
inline void NotifyPassitiveEffectReliveCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
}
inline void NotifyPassitiveEffectReliveCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
}
inline void NotifyPassitiveEffectReliveCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
}
inline void NotifyPassitiveEffectReliveCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
}
inline void NotifyPassitiveEffectReliveCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
}
inline void NotifyPassitiveEffectReliveCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
}
inline void NotifyPassitiveEffectReliveCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
}
inline void NotifyPassitiveEffectReliveCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyPassitiveEffectReliveCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyPassitiveEffectReliveCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyPassitiveEffectReliveCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyPassitiveEffectReliveCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyPassitiveEffectReliveCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyRobotAICfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAICfgList];
inline bool NotifyRobotAICfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyRobotAICfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16417;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyRobotAICfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyRobotAICfgList.msgid)
  return _internal_msgid();
}
inline void NotifyRobotAICfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRobotAICfgList.msgid)
}
inline ::CSToSS::MsgId NotifyRobotAICfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyRobotAICfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyRobotAICfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyRobotAICfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyRobotAICfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyRobotAICfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyRobotAICfgList.cfg)
  return _s;
}
inline const std::string& NotifyRobotAICfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyRobotAICfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyRobotAICfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyRobotAICfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyRobotAICfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRobotAICfgList.cfg)
}
inline void NotifyRobotAICfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRobotAICfgList.cfg)
}
inline void NotifyRobotAICfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyRobotAICfgList.cfg)
}
inline void NotifyRobotAICfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyRobotAICfgList.cfg)
}
inline void NotifyRobotAICfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyRobotAICfgList.cfg)
}
inline void NotifyRobotAICfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyRobotAICfgList.cfg)
}
inline void NotifyRobotAICfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyRobotAICfgList.cfg)
}
inline void NotifyRobotAICfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyRobotAICfgList.cfg)
}
inline void NotifyRobotAICfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyRobotAICfgList.cfg)
}
inline void NotifyRobotAICfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyRobotAICfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyRobotAICfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyRobotAICfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyRobotAICfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyRobotAICfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyRobotAICfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyRobotAICfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyRobotAIPathCfgList

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyRobotAIPathCfgList];
inline bool NotifyRobotAIPathCfgList::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyRobotAIPathCfgList::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16419;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::CSToSS::MsgId NotifyRobotAIPathCfgList::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyRobotAIPathCfgList.msgid)
  return _internal_msgid();
}
inline void NotifyRobotAIPathCfgList::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRobotAIPathCfgList.msgid)
}
inline ::CSToSS::MsgId NotifyRobotAIPathCfgList::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyRobotAIPathCfgList::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated string cfg = 2;
inline int NotifyRobotAIPathCfgList::_internal_cfg_size() const {
  return _internal_cfg().size();
}
inline int NotifyRobotAIPathCfgList::cfg_size() const {
  return _internal_cfg_size();
}
inline void NotifyRobotAIPathCfgList::clear_cfg() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cfg_.Clear();
}
inline std::string* NotifyRobotAIPathCfgList::add_cfg()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_cfg()->Add();
  // @@protoc_insertion_point(field_add_mutable:CSToSS.NotifyRobotAIPathCfgList.cfg)
  return _s;
}
inline const std::string& NotifyRobotAIPathCfgList::cfg(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyRobotAIPathCfgList.cfg)
  return _internal_cfg().Get(index);
}
inline std::string* NotifyRobotAIPathCfgList::mutable_cfg(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyRobotAIPathCfgList.cfg)
  return _internal_mutable_cfg()->Mutable(index);
}
inline void NotifyRobotAIPathCfgList::set_cfg(int index, const std::string& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRobotAIPathCfgList.cfg)
}
inline void NotifyRobotAIPathCfgList::set_cfg(int index, std::string&& value) {
  _internal_mutable_cfg()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:CSToSS.NotifyRobotAIPathCfgList.cfg)
}
inline void NotifyRobotAIPathCfgList::set_cfg(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_cfg()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CSToSS.NotifyRobotAIPathCfgList.cfg)
}
inline void NotifyRobotAIPathCfgList::set_cfg(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_cfg()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CSToSS.NotifyRobotAIPathCfgList.cfg)
}
inline void NotifyRobotAIPathCfgList::set_cfg(int index, absl::string_view value) {
  _internal_mutable_cfg()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:CSToSS.NotifyRobotAIPathCfgList.cfg)
}
inline void NotifyRobotAIPathCfgList::add_cfg(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:CSToSS.NotifyRobotAIPathCfgList.cfg)
}
inline void NotifyRobotAIPathCfgList::add_cfg(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:CSToSS.NotifyRobotAIPathCfgList.cfg)
}
inline void NotifyRobotAIPathCfgList::add_cfg(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CSToSS.NotifyRobotAIPathCfgList.cfg)
}
inline void NotifyRobotAIPathCfgList::add_cfg(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CSToSS.NotifyRobotAIPathCfgList.cfg)
}
inline void NotifyRobotAIPathCfgList::add_cfg(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_cfg()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:CSToSS.NotifyRobotAIPathCfgList.cfg)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyRobotAIPathCfgList::cfg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyRobotAIPathCfgList.cfg)
  return _internal_cfg();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyRobotAIPathCfgList::mutable_cfg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyRobotAIPathCfgList.cfg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cfg();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NotifyRobotAIPathCfgList::_internal_cfg() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cfg_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NotifyRobotAIPathCfgList::_internal_mutable_cfg() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cfg_;
}

// -------------------------------------------------------------------

// NotifyOBUser_OBPosInfo

// optional int32 pos = 1;
inline bool NotifyOBUser_OBPosInfo::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NotifyOBUser_OBPosInfo::clear_pos() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pos_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t NotifyOBUser_OBPosInfo::pos() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyOBUser.OBPosInfo.pos)
  return _internal_pos();
}
inline void NotifyOBUser_OBPosInfo::set_pos(::int32_t value) {
  _internal_set_pos(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyOBUser.OBPosInfo.pos)
}
inline ::int32_t NotifyOBUser_OBPosInfo::_internal_pos() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pos_;
}
inline void NotifyOBUser_OBPosInfo::_internal_set_pos(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pos_ = value;
}

// optional uint64 guid = 2;
inline bool NotifyOBUser_OBPosInfo::has_guid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyOBUser_OBPosInfo::clear_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t NotifyOBUser_OBPosInfo::guid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyOBUser.OBPosInfo.guid)
  return _internal_guid();
}
inline void NotifyOBUser_OBPosInfo::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyOBUser.OBPosInfo.guid)
}
inline ::uint64_t NotifyOBUser_OBPosInfo::_internal_guid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.guid_;
}
inline void NotifyOBUser_OBPosInfo::_internal_set_guid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = value;
}

// -------------------------------------------------------------------

// NotifyOBUser

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyOBUser];
inline bool NotifyOBUser::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NotifyOBUser::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16429;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::CSToSS::MsgId NotifyOBUser::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyOBUser.msgid)
  return _internal_msgid();
}
inline void NotifyOBUser::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyOBUser.msgid)
}
inline ::CSToSS::MsgId NotifyOBUser::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyOBUser::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// repeated .CSToSS.NotifyOBUser.OBPosInfo obinfo = 2;
inline int NotifyOBUser::_internal_obinfo_size() const {
  return _internal_obinfo().size();
}
inline int NotifyOBUser::obinfo_size() const {
  return _internal_obinfo_size();
}
inline void NotifyOBUser::clear_obinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.obinfo_.Clear();
}
inline ::CSToSS::NotifyOBUser_OBPosInfo* NotifyOBUser::mutable_obinfo(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyOBUser.obinfo)
  return _internal_mutable_obinfo()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::NotifyOBUser_OBPosInfo>* NotifyOBUser::mutable_obinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.NotifyOBUser.obinfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_obinfo();
}
inline const ::CSToSS::NotifyOBUser_OBPosInfo& NotifyOBUser::obinfo(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyOBUser.obinfo)
  return _internal_obinfo().Get(index);
}
inline ::CSToSS::NotifyOBUser_OBPosInfo* NotifyOBUser::add_obinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CSToSS::NotifyOBUser_OBPosInfo* _add = _internal_mutable_obinfo()->Add();
  // @@protoc_insertion_point(field_add:CSToSS.NotifyOBUser.obinfo)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::NotifyOBUser_OBPosInfo>& NotifyOBUser::obinfo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.NotifyOBUser.obinfo)
  return _internal_obinfo();
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::NotifyOBUser_OBPosInfo>&
NotifyOBUser::_internal_obinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.obinfo_;
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::NotifyOBUser_OBPosInfo>*
NotifyOBUser::_internal_mutable_obinfo() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.obinfo_;
}

// optional uint64 battleid = 3;
inline bool NotifyOBUser::has_battleid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyOBUser::clear_battleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t NotifyOBUser::battleid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyOBUser.battleid)
  return _internal_battleid();
}
inline void NotifyOBUser::set_battleid(::uint64_t value) {
  _internal_set_battleid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyOBUser.battleid)
}
inline ::uint64_t NotifyOBUser::_internal_battleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battleid_;
}
inline void NotifyOBUser::_internal_set_battleid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = value;
}

// -------------------------------------------------------------------

// NotifyUserReconnectGame

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_NotifyUserReconnectGame];
inline bool NotifyUserReconnectGame::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NotifyUserReconnectGame::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16430;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSToSS::MsgId NotifyUserReconnectGame::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserReconnectGame.msgid)
  return _internal_msgid();
}
inline void NotifyUserReconnectGame::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserReconnectGame.msgid)
}
inline ::CSToSS::MsgId NotifyUserReconnectGame::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyUserReconnectGame::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 guid = 2;
inline bool NotifyUserReconnectGame::has_guid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyUserReconnectGame::clear_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t NotifyUserReconnectGame::guid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserReconnectGame.guid)
  return _internal_guid();
}
inline void NotifyUserReconnectGame::set_guid(::uint64_t value) {
  _internal_set_guid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserReconnectGame.guid)
}
inline ::uint64_t NotifyUserReconnectGame::_internal_guid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.guid_;
}
inline void NotifyUserReconnectGame::_internal_set_guid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = value;
}

// optional uint64 battleid = 3;
inline bool NotifyUserReconnectGame::has_battleid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NotifyUserReconnectGame::clear_battleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t NotifyUserReconnectGame::battleid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserReconnectGame.battleid)
  return _internal_battleid();
}
inline void NotifyUserReconnectGame::set_battleid(::uint64_t value) {
  _internal_set_battleid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserReconnectGame.battleid)
}
inline ::uint64_t NotifyUserReconnectGame::_internal_battleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battleid_;
}
inline void NotifyUserReconnectGame::_internal_set_battleid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = value;
}

// -------------------------------------------------------------------

// BattleKickOneUser

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_BattleKickOneUser];
inline bool BattleKickOneUser::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BattleKickOneUser::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16433;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSToSS::MsgId BattleKickOneUser::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.BattleKickOneUser.msgid)
  return _internal_msgid();
}
inline void BattleKickOneUser::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.BattleKickOneUser.msgid)
}
inline ::CSToSS::MsgId BattleKickOneUser::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void BattleKickOneUser::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 battleid = 2;
inline bool BattleKickOneUser::has_battleid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BattleKickOneUser::clear_battleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t BattleKickOneUser::battleid() const {
  // @@protoc_insertion_point(field_get:CSToSS.BattleKickOneUser.battleid)
  return _internal_battleid();
}
inline void BattleKickOneUser::set_battleid(::uint64_t value) {
  _internal_set_battleid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.BattleKickOneUser.battleid)
}
inline ::uint64_t BattleKickOneUser::_internal_battleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battleid_;
}
inline void BattleKickOneUser::_internal_set_battleid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = value;
}

// optional uint64 userkey = 3;
inline bool BattleKickOneUser::has_userkey() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BattleKickOneUser::clear_userkey() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userkey_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t BattleKickOneUser::userkey() const {
  // @@protoc_insertion_point(field_get:CSToSS.BattleKickOneUser.userkey)
  return _internal_userkey();
}
inline void BattleKickOneUser::set_userkey(::uint64_t value) {
  _internal_set_userkey(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.BattleKickOneUser.userkey)
}
inline ::uint64_t BattleKickOneUser::_internal_userkey() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userkey_;
}
inline void BattleKickOneUser::_internal_set_userkey(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userkey_ = value;
}

// -------------------------------------------------------------------

// CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo

// optional int32 effectId = 1;
inline bool CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::has_effectid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::clear_effectid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.effectid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::effectid() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo.effectId)
  return _internal_effectid();
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::set_effectid(::int32_t value) {
  _internal_set_effectid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo.effectId)
}
inline ::int32_t CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::_internal_effectid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.effectid_;
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::_internal_set_effectid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.effectid_ = value;
}

// optional string effectName = 2;
inline bool CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::has_effectname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::clear_effectname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.effectname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::effectname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo.effectName)
  return _internal_effectname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::set_effectname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.effectname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo.effectName)
}
inline std::string* CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::mutable_effectname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_effectname();
  // @@protoc_insertion_point(field_mutable:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo.effectName)
  return _s;
}
inline const std::string& CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::_internal_effectname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.effectname_.Get();
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::_internal_set_effectname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.effectname_.Set(value, GetArena());
}
inline std::string* CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::_internal_mutable_effectname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.effectname_.Mutable( GetArena());
}
inline std::string* CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::release_effectname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo.effectName)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.effectname_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.effectname_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::set_allocated_effectname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.effectname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.effectname_.IsDefault()) {
          _impl_.effectname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo.effectName)
}

// optional float effectValue = 3;
inline bool CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::has_effectvalue() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::clear_effectvalue() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.effectvalue_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::effectvalue() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo.effectValue)
  return _internal_effectvalue();
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::set_effectvalue(float value) {
  _internal_set_effectvalue(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo.effectValue)
}
inline float CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::_internal_effectvalue() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.effectvalue_;
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::_internal_set_effectvalue(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.effectvalue_ = value;
}

// optional float effectPer = 4;
inline bool CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::has_effectper() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::clear_effectper() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.effectper_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::effectper() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo.effectPer)
  return _internal_effectper();
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::set_effectper(float value) {
  _internal_set_effectper(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo.effectPer)
}
inline float CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::_internal_effectper() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.effectper_;
}
inline void CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo::_internal_set_effectper(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.effectper_ = value;
}

// -------------------------------------------------------------------

// CreateBattle_CreateBattleUserInfo_RunePage

// optional int32 runePage = 1;
inline bool CreateBattle_CreateBattleUserInfo_RunePage::has_runepage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo_RunePage::clear_runepage() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runepage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t CreateBattle_CreateBattleUserInfo_RunePage::runepage() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.runePage)
  return _internal_runepage();
}
inline void CreateBattle_CreateBattleUserInfo_RunePage::set_runepage(::int32_t value) {
  _internal_set_runepage(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.runePage)
}
inline ::int32_t CreateBattle_CreateBattleUserInfo_RunePage::_internal_runepage() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.runepage_;
}
inline void CreateBattle_CreateBattleUserInfo_RunePage::_internal_set_runepage(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runepage_ = value;
}

// repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.RuneInfo runeEffects = 2;
inline int CreateBattle_CreateBattleUserInfo_RunePage::_internal_runeeffects_size() const {
  return _internal_runeeffects().size();
}
inline int CreateBattle_CreateBattleUserInfo_RunePage::runeeffects_size() const {
  return _internal_runeeffects_size();
}
inline void CreateBattle_CreateBattleUserInfo_RunePage::clear_runeeffects() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runeeffects_.Clear();
}
inline ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* CreateBattle_CreateBattleUserInfo_RunePage::mutable_runeeffects(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.runeEffects)
  return _internal_mutable_runeeffects()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo>* CreateBattle_CreateBattleUserInfo_RunePage::mutable_runeeffects()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.runeEffects)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_runeeffects();
}
inline const ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo& CreateBattle_CreateBattleUserInfo_RunePage::runeeffects(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.runeEffects)
  return _internal_runeeffects().Get(index);
}
inline ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* CreateBattle_CreateBattleUserInfo_RunePage::add_runeeffects() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo* _add = _internal_mutable_runeeffects()->Add();
  // @@protoc_insertion_point(field_add:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.runeEffects)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo>& CreateBattle_CreateBattleUserInfo_RunePage::runeeffects() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.CreateBattle.CreateBattleUserInfo.RunePage.runeEffects)
  return _internal_runeeffects();
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo>&
CreateBattle_CreateBattleUserInfo_RunePage::_internal_runeeffects() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.runeeffects_;
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage_RuneInfo>*
CreateBattle_CreateBattleUserInfo_RunePage::_internal_mutable_runeeffects() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.runeeffects_;
}

// -------------------------------------------------------------------

// CreateBattle_CreateBattleUserInfo

// optional .CSToSS.SUserNetInfo usernetinfo = 1;
inline bool CreateBattle_CreateBattleUserInfo::has_usernetinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.usernetinfo_ != nullptr);
  return value;
}
inline void CreateBattle_CreateBattleUserInfo::clear_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.usernetinfo_ != nullptr) _impl_.usernetinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CSToSS::SUserNetInfo& CreateBattle_CreateBattleUserInfo::_internal_usernetinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CSToSS::SUserNetInfo* p = _impl_.usernetinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::CSToSS::SUserNetInfo&>(::CSToSS::_SUserNetInfo_default_instance_);
}
inline const ::CSToSS::SUserNetInfo& CreateBattle_CreateBattleUserInfo::usernetinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.usernetinfo)
  return _internal_usernetinfo();
}
inline void CreateBattle_CreateBattleUserInfo::unsafe_arena_set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.usernetinfo_);
  }
  _impl_.usernetinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CSToSS.CreateBattle.CreateBattleUserInfo.usernetinfo)
}
inline ::CSToSS::SUserNetInfo* CreateBattle_CreateBattleUserInfo::release_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CSToSS::SUserNetInfo* released = _impl_.usernetinfo_;
  _impl_.usernetinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CSToSS::SUserNetInfo* CreateBattle_CreateBattleUserInfo::unsafe_arena_release_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.CreateBattle.CreateBattleUserInfo.usernetinfo)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CSToSS::SUserNetInfo* temp = _impl_.usernetinfo_;
  _impl_.usernetinfo_ = nullptr;
  return temp;
}
inline ::CSToSS::SUserNetInfo* CreateBattle_CreateBattleUserInfo::_internal_mutable_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.usernetinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CSToSS::SUserNetInfo>(GetArena());
    _impl_.usernetinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(p);
  }
  return _impl_.usernetinfo_;
}
inline ::CSToSS::SUserNetInfo* CreateBattle_CreateBattleUserInfo::mutable_usernetinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CSToSS::SUserNetInfo* _msg = _internal_mutable_usernetinfo();
  // @@protoc_insertion_point(field_mutable:CSToSS.CreateBattle.CreateBattleUserInfo.usernetinfo)
  return _msg;
}
inline void CreateBattle_CreateBattleUserInfo::set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.usernetinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.usernetinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:CSToSS.CreateBattle.CreateBattleUserInfo.usernetinfo)
}

// optional int64 guid = 2;
inline bool CreateBattle_CreateBattleUserInfo::has_guid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo::clear_guid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t CreateBattle_CreateBattleUserInfo::guid() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.guid)
  return _internal_guid();
}
inline void CreateBattle_CreateBattleUserInfo::set_guid(::int64_t value) {
  _internal_set_guid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.guid)
}
inline ::int64_t CreateBattle_CreateBattleUserInfo::_internal_guid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.guid_;
}
inline void CreateBattle_CreateBattleUserInfo::_internal_set_guid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.guid_ = value;
}

// optional int32 seat = 3;
inline bool CreateBattle_CreateBattleUserInfo::has_seat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo::clear_seat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.seat_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CreateBattle_CreateBattleUserInfo::seat() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.seat)
  return _internal_seat();
}
inline void CreateBattle_CreateBattleUserInfo::set_seat(::int32_t value) {
  _internal_set_seat(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.seat)
}
inline ::int32_t CreateBattle_CreateBattleUserInfo::_internal_seat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.seat_;
}
inline void CreateBattle_CreateBattleUserInfo::_internal_set_seat(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.seat_ = value;
}

// optional int32 grpID = 4;
inline bool CreateBattle_CreateBattleUserInfo::has_grpid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo::clear_grpid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.grpid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t CreateBattle_CreateBattleUserInfo::grpid() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.grpID)
  return _internal_grpid();
}
inline void CreateBattle_CreateBattleUserInfo::set_grpid(::int32_t value) {
  _internal_set_grpid(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.grpID)
}
inline ::int32_t CreateBattle_CreateBattleUserInfo::_internal_grpid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.grpid_;
}
inline void CreateBattle_CreateBattleUserInfo::_internal_set_grpid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.grpid_ = value;
}

// optional string nickName = 5;
inline bool CreateBattle_CreateBattleUserInfo::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CreateBattle_CreateBattleUserInfo::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.nickName)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CreateBattle_CreateBattleUserInfo::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.nickName)
}
inline std::string* CreateBattle_CreateBattleUserInfo::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:CSToSS.CreateBattle.CreateBattleUserInfo.nickName)
  return _s;
}
inline const std::string& CreateBattle_CreateBattleUserInfo::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void CreateBattle_CreateBattleUserInfo::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* CreateBattle_CreateBattleUserInfo::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* CreateBattle_CreateBattleUserInfo::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.CreateBattle.CreateBattleUserInfo.nickName)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.nickname_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nickname_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CreateBattle_CreateBattleUserInfo::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CSToSS.CreateBattle.CreateBattleUserInfo.nickName)
}

// optional int64 diamond = 6;
inline bool CreateBattle_CreateBattleUserInfo::has_diamond() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo::clear_diamond() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.diamond_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t CreateBattle_CreateBattleUserInfo::diamond() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.diamond)
  return _internal_diamond();
}
inline void CreateBattle_CreateBattleUserInfo::set_diamond(::int64_t value) {
  _internal_set_diamond(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.diamond)
}
inline ::int64_t CreateBattle_CreateBattleUserInfo::_internal_diamond() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.diamond_;
}
inline void CreateBattle_CreateBattleUserInfo::_internal_set_diamond(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.diamond_ = value;
}

// optional int64 gold = 7;
inline bool CreateBattle_CreateBattleUserInfo::has_gold() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo::clear_gold() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gold_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t CreateBattle_CreateBattleUserInfo::gold() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.gold)
  return _internal_gold();
}
inline void CreateBattle_CreateBattleUserInfo::set_gold(::int64_t value) {
  _internal_set_gold(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.gold)
}
inline ::int64_t CreateBattle_CreateBattleUserInfo::_internal_gold() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gold_;
}
inline void CreateBattle_CreateBattleUserInfo::_internal_set_gold(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gold_ = value;
}

// optional int32 vipLv = 8;
inline bool CreateBattle_CreateBattleUserInfo::has_viplv() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo::clear_viplv() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.viplv_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t CreateBattle_CreateBattleUserInfo::viplv() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.vipLv)
  return _internal_viplv();
}
inline void CreateBattle_CreateBattleUserInfo::set_viplv(::int32_t value) {
  _internal_set_viplv(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.vipLv)
}
inline ::int32_t CreateBattle_CreateBattleUserInfo::_internal_viplv() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.viplv_;
}
inline void CreateBattle_CreateBattleUserInfo::_internal_set_viplv(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.viplv_ = value;
}

// optional bool ifOB = 9;
inline bool CreateBattle_CreateBattleUserInfo::has_ifob() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo::clear_ifob() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ifob_ = false;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline bool CreateBattle_CreateBattleUserInfo::ifob() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.ifOB)
  return _internal_ifob();
}
inline void CreateBattle_CreateBattleUserInfo::set_ifob(bool value) {
  _internal_set_ifob(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.ifOB)
}
inline bool CreateBattle_CreateBattleUserInfo::_internal_ifob() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ifob_;
}
inline void CreateBattle_CreateBattleUserInfo::_internal_set_ifob(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ifob_ = value;
}

// optional bool ifGM = 10;
inline bool CreateBattle_CreateBattleUserInfo::has_ifgm() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo::clear_ifgm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ifgm_ = false;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline bool CreateBattle_CreateBattleUserInfo::ifgm() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.ifGM)
  return _internal_ifgm();
}
inline void CreateBattle_CreateBattleUserInfo::set_ifgm(bool value) {
  _internal_set_ifgm(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.ifGM)
}
inline bool CreateBattle_CreateBattleUserInfo::_internal_ifgm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ifgm_;
}
inline void CreateBattle_CreateBattleUserInfo::_internal_set_ifgm(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ifgm_ = value;
}

// repeated int32 canUseHeroList = 11;
inline int CreateBattle_CreateBattleUserInfo::_internal_canuseherolist_size() const {
  return _internal_canuseherolist().size();
}
inline int CreateBattle_CreateBattleUserInfo::canuseherolist_size() const {
  return _internal_canuseherolist_size();
}
inline void CreateBattle_CreateBattleUserInfo::clear_canuseherolist() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.canuseherolist_.Clear();
}
inline ::int32_t CreateBattle_CreateBattleUserInfo::canuseherolist(int index) const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.canUseHeroList)
  return _internal_canuseherolist().Get(index);
}
inline void CreateBattle_CreateBattleUserInfo::set_canuseherolist(int index, ::int32_t value) {
  _internal_mutable_canuseherolist()->Set(index, value);
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.canUseHeroList)
}
inline void CreateBattle_CreateBattleUserInfo::add_canuseherolist(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_canuseherolist()->Add(value);
  // @@protoc_insertion_point(field_add:CSToSS.CreateBattle.CreateBattleUserInfo.canUseHeroList)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& CreateBattle_CreateBattleUserInfo::canuseherolist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.CreateBattle.CreateBattleUserInfo.canUseHeroList)
  return _internal_canuseherolist();
}
inline ::google::protobuf::RepeatedField<::int32_t>* CreateBattle_CreateBattleUserInfo::mutable_canuseherolist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.CreateBattle.CreateBattleUserInfo.canUseHeroList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_canuseherolist();
}
inline const ::google::protobuf::RepeatedField<::int32_t>& CreateBattle_CreateBattleUserInfo::_internal_canuseherolist()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.canuseherolist_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* CreateBattle_CreateBattleUserInfo::_internal_mutable_canuseherolist() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.canuseherolist_;
}

// repeated .CSToSS.CreateBattle.CreateBattleUserInfo.RunePage runePages = 12;
inline int CreateBattle_CreateBattleUserInfo::_internal_runepages_size() const {
  return _internal_runepages().size();
}
inline int CreateBattle_CreateBattleUserInfo::runepages_size() const {
  return _internal_runepages_size();
}
inline void CreateBattle_CreateBattleUserInfo::clear_runepages() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.runepages_.Clear();
}
inline ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage* CreateBattle_CreateBattleUserInfo::mutable_runepages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.CreateBattle.CreateBattleUserInfo.runePages)
  return _internal_mutable_runepages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage>* CreateBattle_CreateBattleUserInfo::mutable_runepages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.CreateBattle.CreateBattleUserInfo.runePages)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_runepages();
}
inline const ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage& CreateBattle_CreateBattleUserInfo::runepages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.runePages)
  return _internal_runepages().Get(index);
}
inline ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage* CreateBattle_CreateBattleUserInfo::add_runepages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage* _add = _internal_mutable_runepages()->Add();
  // @@protoc_insertion_point(field_add:CSToSS.CreateBattle.CreateBattleUserInfo.runePages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage>& CreateBattle_CreateBattleUserInfo::runepages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.CreateBattle.CreateBattleUserInfo.runePages)
  return _internal_runepages();
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage>&
CreateBattle_CreateBattleUserInfo::_internal_runepages() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.runepages_;
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo_RunePage>*
CreateBattle_CreateBattleUserInfo::_internal_mutable_runepages() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.runepages_;
}

// optional bool ifAiRobot = 13;
inline bool CreateBattle_CreateBattleUserInfo::has_ifairobot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CreateBattle_CreateBattleUserInfo::clear_ifairobot() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ifairobot_ = false;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline bool CreateBattle_CreateBattleUserInfo::ifairobot() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.CreateBattleUserInfo.ifAiRobot)
  return _internal_ifairobot();
}
inline void CreateBattle_CreateBattleUserInfo::set_ifairobot(bool value) {
  _internal_set_ifairobot(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.CreateBattleUserInfo.ifAiRobot)
}
inline bool CreateBattle_CreateBattleUserInfo::_internal_ifairobot() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ifairobot_;
}
inline void CreateBattle_CreateBattleUserInfo::_internal_set_ifairobot(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ifairobot_ = value;
}

// -------------------------------------------------------------------

// CreateBattle_AiRobotInfo

// optional uint32 seat = 1;
inline bool CreateBattle_AiRobotInfo::has_seat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CreateBattle_AiRobotInfo::clear_seat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.seat_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CreateBattle_AiRobotInfo::seat() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.AiRobotInfo.seat)
  return _internal_seat();
}
inline void CreateBattle_AiRobotInfo::set_seat(::uint32_t value) {
  _internal_set_seat(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.AiRobotInfo.seat)
}
inline ::uint32_t CreateBattle_AiRobotInfo::_internal_seat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.seat_;
}
inline void CreateBattle_AiRobotInfo::_internal_set_seat(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.seat_ = value;
}

// optional uint32 aitype = 2;
inline bool CreateBattle_AiRobotInfo::has_aitype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CreateBattle_AiRobotInfo::clear_aitype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.aitype_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CreateBattle_AiRobotInfo::aitype() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.AiRobotInfo.aitype)
  return _internal_aitype();
}
inline void CreateBattle_AiRobotInfo::set_aitype(::uint32_t value) {
  _internal_set_aitype(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.AiRobotInfo.aitype)
}
inline ::uint32_t CreateBattle_AiRobotInfo::_internal_aitype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.aitype_;
}
inline void CreateBattle_AiRobotInfo::_internal_set_aitype(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.aitype_ = value;
}

// -------------------------------------------------------------------

// CreateBattle

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_CreateBattle];
inline bool CreateBattle::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CreateBattle::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16500;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::CSToSS::MsgId CreateBattle::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.msgid)
  return _internal_msgid();
}
inline void CreateBattle::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.msgid)
}
inline ::CSToSS::MsgId CreateBattle::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void CreateBattle::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 battleid = 2;
inline bool CreateBattle::has_battleid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CreateBattle::clear_battleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CreateBattle::battleid() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.battleid)
  return _internal_battleid();
}
inline void CreateBattle::set_battleid(::uint64_t value) {
  _internal_set_battleid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.battleid)
}
inline ::uint64_t CreateBattle::_internal_battleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battleid_;
}
inline void CreateBattle::_internal_set_battleid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = value;
}

// optional int32 mapid = 3;
inline bool CreateBattle::has_mapid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CreateBattle::clear_mapid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mapid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CreateBattle::mapid() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.mapid)
  return _internal_mapid();
}
inline void CreateBattle::set_mapid(::int32_t value) {
  _internal_set_mapid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.mapid)
}
inline ::int32_t CreateBattle::_internal_mapid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mapid_;
}
inline void CreateBattle::_internal_set_mapid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mapid_ = value;
}

// optional .CSToSS.CreateBattle.BattleType battletype = 4;
inline bool CreateBattle::has_battletype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CreateBattle::clear_battletype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battletype_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSToSS::CreateBattle_BattleType CreateBattle::battletype() const {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.battletype)
  return _internal_battletype();
}
inline void CreateBattle::set_battletype(::CSToSS::CreateBattle_BattleType value) {
  _internal_set_battletype(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.CreateBattle.battletype)
}
inline ::CSToSS::CreateBattle_BattleType CreateBattle::_internal_battletype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::CreateBattle_BattleType>(_impl_.battletype_);
}
inline void CreateBattle::_internal_set_battletype(::CSToSS::CreateBattle_BattleType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::CreateBattle_BattleType_IsValid(value));
  _impl_.battletype_ = value;
}

// repeated .CSToSS.CreateBattle.CreateBattleUserInfo userinfo = 5;
inline int CreateBattle::_internal_userinfo_size() const {
  return _internal_userinfo().size();
}
inline int CreateBattle::userinfo_size() const {
  return _internal_userinfo_size();
}
inline void CreateBattle::clear_userinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userinfo_.Clear();
}
inline ::CSToSS::CreateBattle_CreateBattleUserInfo* CreateBattle::mutable_userinfo(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.CreateBattle.userinfo)
  return _internal_mutable_userinfo()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo>* CreateBattle::mutable_userinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.CreateBattle.userinfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_userinfo();
}
inline const ::CSToSS::CreateBattle_CreateBattleUserInfo& CreateBattle::userinfo(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.userinfo)
  return _internal_userinfo().Get(index);
}
inline ::CSToSS::CreateBattle_CreateBattleUserInfo* CreateBattle::add_userinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CSToSS::CreateBattle_CreateBattleUserInfo* _add = _internal_mutable_userinfo()->Add();
  // @@protoc_insertion_point(field_add:CSToSS.CreateBattle.userinfo)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo>& CreateBattle::userinfo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.CreateBattle.userinfo)
  return _internal_userinfo();
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo>&
CreateBattle::_internal_userinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userinfo_;
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_CreateBattleUserInfo>*
CreateBattle::_internal_mutable_userinfo() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.userinfo_;
}

// repeated .CSToSS.CreateBattle.AiRobotInfo aiRobotList = 6;
inline int CreateBattle::_internal_airobotlist_size() const {
  return _internal_airobotlist().size();
}
inline int CreateBattle::airobotlist_size() const {
  return _internal_airobotlist_size();
}
inline void CreateBattle::clear_airobotlist() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.airobotlist_.Clear();
}
inline ::CSToSS::CreateBattle_AiRobotInfo* CreateBattle::mutable_airobotlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CSToSS.CreateBattle.aiRobotList)
  return _internal_mutable_airobotlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_AiRobotInfo>* CreateBattle::mutable_airobotlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CSToSS.CreateBattle.aiRobotList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_airobotlist();
}
inline const ::CSToSS::CreateBattle_AiRobotInfo& CreateBattle::airobotlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.CreateBattle.aiRobotList)
  return _internal_airobotlist().Get(index);
}
inline ::CSToSS::CreateBattle_AiRobotInfo* CreateBattle::add_airobotlist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CSToSS::CreateBattle_AiRobotInfo* _add = _internal_mutable_airobotlist()->Add();
  // @@protoc_insertion_point(field_add:CSToSS.CreateBattle.aiRobotList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_AiRobotInfo>& CreateBattle::airobotlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CSToSS.CreateBattle.aiRobotList)
  return _internal_airobotlist();
}
inline const ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_AiRobotInfo>&
CreateBattle::_internal_airobotlist() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.airobotlist_;
}
inline ::google::protobuf::RepeatedPtrField<::CSToSS::CreateBattle_AiRobotInfo>*
CreateBattle::_internal_mutable_airobotlist() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.airobotlist_;
}

// -------------------------------------------------------------------

// NotifyUserOnline

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOnline];
inline bool NotifyUserOnline::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void NotifyUserOnline::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16501;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::CSToSS::MsgId NotifyUserOnline::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserOnline.msgid)
  return _internal_msgid();
}
inline void NotifyUserOnline::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserOnline.msgid)
}
inline ::CSToSS::MsgId NotifyUserOnline::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyUserOnline::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 battleid = 2;
inline bool NotifyUserOnline::has_battleid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NotifyUserOnline::clear_battleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t NotifyUserOnline::battleid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserOnline.battleid)
  return _internal_battleid();
}
inline void NotifyUserOnline::set_battleid(::uint64_t value) {
  _internal_set_battleid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserOnline.battleid)
}
inline ::uint64_t NotifyUserOnline::_internal_battleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battleid_;
}
inline void NotifyUserOnline::_internal_set_battleid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = value;
}

// optional uint64 userguid = 3;
inline bool NotifyUserOnline::has_userguid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NotifyUserOnline::clear_userguid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userguid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t NotifyUserOnline::userguid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserOnline.userguid)
  return _internal_userguid();
}
inline void NotifyUserOnline::set_userguid(::uint64_t value) {
  _internal_set_userguid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserOnline.userguid)
}
inline ::uint64_t NotifyUserOnline::_internal_userguid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userguid_;
}
inline void NotifyUserOnline::_internal_set_userguid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userguid_ = value;
}

// optional .CSToSS.SUserNetInfo usernetinfo = 4;
inline bool NotifyUserOnline::has_usernetinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.usernetinfo_ != nullptr);
  return value;
}
inline void NotifyUserOnline::clear_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.usernetinfo_ != nullptr) _impl_.usernetinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CSToSS::SUserNetInfo& NotifyUserOnline::_internal_usernetinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::CSToSS::SUserNetInfo* p = _impl_.usernetinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::CSToSS::SUserNetInfo&>(::CSToSS::_SUserNetInfo_default_instance_);
}
inline const ::CSToSS::SUserNetInfo& NotifyUserOnline::usernetinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserOnline.usernetinfo)
  return _internal_usernetinfo();
}
inline void NotifyUserOnline::unsafe_arena_set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.usernetinfo_);
  }
  _impl_.usernetinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CSToSS.NotifyUserOnline.usernetinfo)
}
inline ::CSToSS::SUserNetInfo* NotifyUserOnline::release_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CSToSS::SUserNetInfo* released = _impl_.usernetinfo_;
  _impl_.usernetinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CSToSS::SUserNetInfo* NotifyUserOnline::unsafe_arena_release_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:CSToSS.NotifyUserOnline.usernetinfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CSToSS::SUserNetInfo* temp = _impl_.usernetinfo_;
  _impl_.usernetinfo_ = nullptr;
  return temp;
}
inline ::CSToSS::SUserNetInfo* NotifyUserOnline::_internal_mutable_usernetinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.usernetinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CSToSS::SUserNetInfo>(GetArena());
    _impl_.usernetinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(p);
  }
  return _impl_.usernetinfo_;
}
inline ::CSToSS::SUserNetInfo* NotifyUserOnline::mutable_usernetinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CSToSS::SUserNetInfo* _msg = _internal_mutable_usernetinfo();
  // @@protoc_insertion_point(field_mutable:CSToSS.NotifyUserOnline.usernetinfo)
  return _msg;
}
inline void NotifyUserOnline::set_allocated_usernetinfo(::CSToSS::SUserNetInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.usernetinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.usernetinfo_ = reinterpret_cast<::CSToSS::SUserNetInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:CSToSS.NotifyUserOnline.usernetinfo)
}

// -------------------------------------------------------------------

// NotifyUserOffline

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_OneUserOffline];
inline bool NotifyUserOffline::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NotifyUserOffline::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16502;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSToSS::MsgId NotifyUserOffline::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserOffline.msgid)
  return _internal_msgid();
}
inline void NotifyUserOffline::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserOffline.msgid)
}
inline ::CSToSS::MsgId NotifyUserOffline::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void NotifyUserOffline::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 battleid = 2;
inline bool NotifyUserOffline::has_battleid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NotifyUserOffline::clear_battleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t NotifyUserOffline::battleid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserOffline.battleid)
  return _internal_battleid();
}
inline void NotifyUserOffline::set_battleid(::uint64_t value) {
  _internal_set_battleid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserOffline.battleid)
}
inline ::uint64_t NotifyUserOffline::_internal_battleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battleid_;
}
inline void NotifyUserOffline::_internal_set_battleid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = value;
}

// optional uint64 userguid = 3;
inline bool NotifyUserOffline::has_userguid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NotifyUserOffline::clear_userguid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userguid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t NotifyUserOffline::userguid() const {
  // @@protoc_insertion_point(field_get:CSToSS.NotifyUserOffline.userguid)
  return _internal_userguid();
}
inline void NotifyUserOffline::set_userguid(::uint64_t value) {
  _internal_set_userguid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.NotifyUserOffline.userguid)
}
inline ::uint64_t NotifyUserOffline::_internal_userguid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.userguid_;
}
inline void NotifyUserOffline::_internal_set_userguid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.userguid_ = value;
}

// -------------------------------------------------------------------

// FinishBattleResponse

// optional .CSToSS.MsgId msgid = 1 [default = eMsgToSSFromCS_FinishBattleResponse];
inline bool FinishBattleResponse::has_msgid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void FinishBattleResponse::clear_msgid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.msgid_ = 16510;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::CSToSS::MsgId FinishBattleResponse::msgid() const {
  // @@protoc_insertion_point(field_get:CSToSS.FinishBattleResponse.msgid)
  return _internal_msgid();
}
inline void FinishBattleResponse::set_msgid(::CSToSS::MsgId value) {
  _internal_set_msgid(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CSToSS.FinishBattleResponse.msgid)
}
inline ::CSToSS::MsgId FinishBattleResponse::_internal_msgid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::CSToSS::MsgId>(_impl_.msgid_);
}
inline void FinishBattleResponse::_internal_set_msgid(::CSToSS::MsgId value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  assert(::CSToSS::MsgId_IsValid(value));
  _impl_.msgid_ = value;
}

// optional uint64 battleid = 2;
inline bool FinishBattleResponse::has_battleid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void FinishBattleResponse::clear_battleid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t FinishBattleResponse::battleid() const {
  // @@protoc_insertion_point(field_get:CSToSS.FinishBattleResponse.battleid)
  return _internal_battleid();
}
inline void FinishBattleResponse::set_battleid(::uint64_t value) {
  _internal_set_battleid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CSToSS.FinishBattleResponse.battleid)
}
inline ::uint64_t FinishBattleResponse::_internal_battleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battleid_;
}
inline void FinishBattleResponse::_internal_set_battleid(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battleid_ = value;
}

// optional bool rst = 3;
inline bool FinishBattleResponse::has_rst() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void FinishBattleResponse::clear_rst() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rst_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool FinishBattleResponse::rst() const {
  // @@protoc_insertion_point(field_get:CSToSS.FinishBattleResponse.rst)
  return _internal_rst();
}
inline void FinishBattleResponse::set_rst(bool value) {
  _internal_set_rst(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CSToSS.FinishBattleResponse.rst)
}
inline bool FinishBattleResponse::_internal_rst() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rst_;
}
inline void FinishBattleResponse::_internal_set_rst(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rst_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace CSToSS


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::CSToSS::UserInfo_SUserDBData_EObjectType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::CSToSS::UserInfo_SUserDBData_EObjectType>() {
  return ::CSToSS::UserInfo_SUserDBData_EObjectType_descriptor();
}
template <>
struct is_proto_enum<::CSToSS::UserInfo_SUserDBData_EUserCate> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::CSToSS::UserInfo_SUserDBData_EUserCate>() {
  return ::CSToSS::UserInfo_SUserDBData_EUserCate_descriptor();
}
template <>
struct is_proto_enum<::CSToSS::UserInfo_SUserDBData_EUserPlatform> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::CSToSS::UserInfo_SUserDBData_EUserPlatform>() {
  return ::CSToSS::UserInfo_SUserDBData_EUserPlatform_descriptor();
}
template <>
struct is_proto_enum<::CSToSS::CreateBattle_BattleType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::CSToSS::CreateBattle_BattleType>() {
  return ::CSToSS::CreateBattle_BattleType_descriptor();
}
template <>
struct is_proto_enum<::CSToSS::MsgId> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::CSToSS::MsgId>() {
  return ::CSToSS::MsgId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_CSToSS_2eproto_2epb_2eh
