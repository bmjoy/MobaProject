// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GSToSS.proto
// Protobuf C++ Version: 4.26.0-dev

#include "GSToSS.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace GSToSS {

inline constexpr UserOffLine::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        usernetid_{0},
        mgsid_{static_cast< ::GSToSS::MsgID >(16388)} {}

template <typename>
PROTOBUF_CONSTEXPR UserOffLine::UserOffLine(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserOffLineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserOffLineDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserOffLineDefaultTypeInternal() {}
  union {
    UserOffLine _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserOffLineDefaultTypeInternal _UserOffLine_default_instance_;

inline constexpr ReportGCMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        othermsg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nsid_{0},
        othermsgid_{0},
        mgsid_{static_cast< ::GSToSS::MsgID >(16387)} {}

template <typename>
PROTOBUF_CONSTEXPR ReportGCMsg::ReportGCMsg(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReportGCMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReportGCMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReportGCMsgDefaultTypeInternal() {}
  union {
    ReportGCMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReportGCMsgDefaultTypeInternal _ReportGCMsg_default_instance_;

inline constexpr AskRegiste::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pwd_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gsid_{0},
        msgid_{static_cast< ::GSToSS::MsgID >(16386)} {}

template <typename>
PROTOBUF_CONSTEXPR AskRegiste::AskRegiste(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskRegisteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskRegisteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskRegisteDefaultTypeInternal() {}
  union {
    AskRegiste _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskRegisteDefaultTypeInternal _AskRegiste_default_instance_;

inline constexpr AskPing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        time_{::int64_t{0}},
        mgsid_{static_cast< ::GSToSS::MsgID >(16385)} {}

template <typename>
PROTOBUF_CONSTEXPR AskPing::AskPing(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AskPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AskPingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AskPingDefaultTypeInternal() {}
  union {
    AskPing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AskPingDefaultTypeInternal _AskPing_default_instance_;
}  // namespace GSToSS
static ::_pb::Metadata file_level_metadata_GSToSS_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_GSToSS_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_GSToSS_2eproto = nullptr;
const ::uint32_t
    TableStruct_GSToSS_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::GSToSS::UserOffLine, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GSToSS::UserOffLine, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GSToSS::UserOffLine, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::GSToSS::UserOffLine, _impl_.usernetid_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::GSToSS::AskPing, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GSToSS::AskPing, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GSToSS::AskPing, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::GSToSS::AskPing, _impl_.time_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::GSToSS::AskRegiste, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GSToSS::AskRegiste, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GSToSS::AskRegiste, _impl_.msgid_),
        PROTOBUF_FIELD_OFFSET(::GSToSS::AskRegiste, _impl_.gsid_),
        PROTOBUF_FIELD_OFFSET(::GSToSS::AskRegiste, _impl_.pwd_),
        2,
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::GSToSS::ReportGCMsg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::GSToSS::ReportGCMsg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::GSToSS::ReportGCMsg, _impl_.mgsid_),
        PROTOBUF_FIELD_OFFSET(::GSToSS::ReportGCMsg, _impl_.nsid_),
        PROTOBUF_FIELD_OFFSET(::GSToSS::ReportGCMsg, _impl_.othermsg_),
        PROTOBUF_FIELD_OFFSET(::GSToSS::ReportGCMsg, _impl_.othermsgid_),
        3,
        1,
        0,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::GSToSS::UserOffLine)},
        {12, 22, -1, sizeof(::GSToSS::AskPing)},
        {24, 35, -1, sizeof(::GSToSS::AskRegiste)},
        {38, 50, -1, sizeof(::GSToSS::ReportGCMsg)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::GSToSS::_UserOffLine_default_instance_._instance,
    &::GSToSS::_AskPing_default_instance_._instance,
    &::GSToSS::_AskRegiste_default_instance_._instance,
    &::GSToSS::_ReportGCMsg_default_instance_._instance,
};
const char descriptor_table_protodef_GSToSS_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014GSToSS.proto\022\006GSToSS\"Z\n\013UserOffLine\0228\n"
    "\005mgsid\030\001 \001(\0162\r.GSToSS.MsgID:\032eMsgToSSFro"
    "mGS_UserOffLine\022\021\n\tusernetid\030\002 \001(\005\"M\n\007As"
    "kPing\0224\n\005mgsid\030\001 \001(\0162\r.GSToSS.MsgID:\026eMs"
    "gToSSFromGS_AskPing\022\014\n\004time\030\002 \001(\003\"`\n\nAsk"
    "Registe\0227\n\005msgid\030\001 \001(\0162\r.GSToSS.MsgID:\031e"
    "MsgToSSFromGS_AskRegiste\022\014\n\004gsid\030\002 \001(\005\022\013"
    "\n\003pwd\030\003 \001(\t\"{\n\013ReportGCMsg\0228\n\005mgsid\030\001 \001("
    "\0162\r.GSToSS.MsgID:\032eMsgToSSFromGS_ReportG"
    "CMsg\022\014\n\004nsid\030\002 \001(\005\022\020\n\010othermsg\030\003 \001(\t\022\022\n\n"
    "othermsgid\030\004 \001(\005*\300\001\n\005MsgID\022\032\n\024eMsgToSSFr"
    "omGS_Begin\020\200\200\001\022\034\n\026eMsgToSSFromGS_AskPing"
    "\020\201\200\001\022\037\n\031eMsgToSSFromGS_AskRegiste\020\202\200\001\022 \n"
    "\032eMsgToSSFromGS_ReportGCMsg\020\203\200\001\022 \n\032eMsgT"
    "oSSFromGS_UserOffLine\020\204\200\001\022\030\n\022eMsgToSSFro"
    "mGS_End\020\350\204\001"
};
static ::absl::once_flag descriptor_table_GSToSS_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_GSToSS_2eproto = {
    false,
    false,
    611,
    descriptor_table_protodef_GSToSS_2eproto,
    "GSToSS.proto",
    &descriptor_table_GSToSS_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_GSToSS_2eproto::offsets,
    file_level_metadata_GSToSS_2eproto,
    file_level_enum_descriptors_GSToSS_2eproto,
    file_level_service_descriptors_GSToSS_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_GSToSS_2eproto_getter() {
  return &descriptor_table_GSToSS_2eproto;
}
namespace GSToSS {
const ::google::protobuf::EnumDescriptor* MsgID_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_GSToSS_2eproto);
  return file_level_enum_descriptors_GSToSS_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MsgID_internal_data_[] = {
    344064u, 65536u, 17000u, };
bool MsgID_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, MsgID_internal_data_);
}
// ===================================================================

class UserOffLine::_Internal {
 public:
  using HasBits = decltype(std::declval<UserOffLine>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UserOffLine, _impl_._has_bits_);
};

UserOffLine::UserOffLine(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GSToSS.UserOffLine)
}
UserOffLine::UserOffLine(
    ::google::protobuf::Arena* arena, const UserOffLine& from)
    : UserOffLine(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE UserOffLine::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::GSToSS::MsgID >(16388)} {}

inline void UserOffLine::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.usernetid_ = {};
}
UserOffLine::~UserOffLine() {
  // @@protoc_insertion_point(destructor:GSToSS.UserOffLine)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserOffLine::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserOffLine::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserOffLine, _impl_._cached_size_),
              false,
          },
          &UserOffLine::MergeImpl,
          &UserOffLine::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UserOffLine::Clear() {
// @@protoc_insertion_point(message_clear_start:GSToSS.UserOffLine)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.usernetid_ = 0;
    _impl_.mgsid_ = 16388;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserOffLine::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> UserOffLine::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UserOffLine, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserOffLine_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GSToSS::UserOffLine>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 usernetid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UserOffLine, _impl_.usernetid_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(UserOffLine, _impl_.usernetid_)}},
    // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_UserOffLine];
    {::_pbi::TcParser::FastEvS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(UserOffLine, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_UserOffLine];
    {PROTOBUF_FIELD_OFFSET(UserOffLine, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 usernetid = 2;
    {PROTOBUF_FIELD_OFFSET(UserOffLine, _impl_.usernetid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::GSToSS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* UserOffLine::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GSToSS.UserOffLine)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_UserOffLine];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int32 usernetid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_usernetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GSToSS.UserOffLine)
  return target;
}

::size_t UserOffLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GSToSS.UserOffLine)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 usernetid = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_usernetid());
    }

    // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_UserOffLine];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserOffLine::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserOffLine*>(&to_msg);
  auto& from = static_cast<const UserOffLine&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GSToSS.UserOffLine)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.usernetid_ = from._impl_.usernetid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserOffLine::CopyFrom(const UserOffLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GSToSS.UserOffLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserOffLine::IsInitialized() const {
  return true;
}

void UserOffLine::InternalSwap(UserOffLine* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserOffLine, _impl_.mgsid_)
      + sizeof(UserOffLine::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(UserOffLine, _impl_.usernetid_)>(
          reinterpret_cast<char*>(&_impl_.usernetid_),
          reinterpret_cast<char*>(&other->_impl_.usernetid_));
}

::google::protobuf::Metadata UserOffLine::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_GSToSS_2eproto_getter,
                                   &descriptor_table_GSToSS_2eproto_once,
                                   file_level_metadata_GSToSS_2eproto[0]);
}
// ===================================================================

class AskPing::_Internal {
 public:
  using HasBits = decltype(std::declval<AskPing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskPing, _impl_._has_bits_);
};

AskPing::AskPing(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GSToSS.AskPing)
}
AskPing::AskPing(
    ::google::protobuf::Arena* arena, const AskPing& from)
    : AskPing(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AskPing::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mgsid_{static_cast< ::GSToSS::MsgID >(16385)} {}

inline void AskPing::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
AskPing::~AskPing() {
  // @@protoc_insertion_point(destructor:GSToSS.AskPing)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskPing::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskPing::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskPing, _impl_._cached_size_),
              false,
          },
          &AskPing::MergeImpl,
          &AskPing::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskPing::Clear() {
// @@protoc_insertion_point(message_clear_start:GSToSS.AskPing)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.time_ = ::int64_t{0};
    _impl_.mgsid_ = 16385;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskPing::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AskPing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskPing, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskPing_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GSToSS::AskPing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AskPing, _impl_.time_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(AskPing, _impl_.time_)}},
    // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_AskPing];
    {::_pbi::TcParser::FastEvS1,
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(AskPing, _impl_.mgsid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_AskPing];
    {PROTOBUF_FIELD_OFFSET(AskPing, _impl_.mgsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int64 time = 2;
    {PROTOBUF_FIELD_OFFSET(AskPing, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::GSToSS::MsgID_internal_data_},
  }}, {{
  }},
};

::uint8_t* AskPing::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GSToSS.AskPing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_AskPing];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int64 time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GSToSS.AskPing)
  return target;
}

::size_t AskPing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GSToSS.AskPing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int64 time = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_time());
    }

    // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_AskPing];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskPing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskPing*>(&to_msg);
  auto& from = static_cast<const AskPing&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GSToSS.AskPing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.time_ = from._impl_.time_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskPing::CopyFrom(const AskPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GSToSS.AskPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskPing::IsInitialized() const {
  return true;
}

void AskPing::InternalSwap(AskPing* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskPing, _impl_.mgsid_)
      + sizeof(AskPing::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(AskPing, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata AskPing::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_GSToSS_2eproto_getter,
                                   &descriptor_table_GSToSS_2eproto_once,
                                   file_level_metadata_GSToSS_2eproto[1]);
}
// ===================================================================

class AskRegiste::_Internal {
 public:
  using HasBits = decltype(std::declval<AskRegiste>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_._has_bits_);
};

AskRegiste::AskRegiste(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GSToSS.AskRegiste)
}
inline PROTOBUF_NDEBUG_INLINE AskRegiste::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pwd_(arena, from.pwd_) {}

AskRegiste::AskRegiste(
    ::google::protobuf::Arena* arena,
    const AskRegiste& from)
    : ::google::protobuf::Message(arena) {
  AskRegiste* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gsid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gsid_),
           offsetof(Impl_, msgid_) -
               offsetof(Impl_, gsid_) +
               sizeof(Impl_::msgid_));

  // @@protoc_insertion_point(copy_constructor:GSToSS.AskRegiste)
}
inline PROTOBUF_NDEBUG_INLINE AskRegiste::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        pwd_(arena),
        msgid_{static_cast< ::GSToSS::MsgID >(16386)} {}

inline void AskRegiste::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gsid_ = {};
}
AskRegiste::~AskRegiste() {
  // @@protoc_insertion_point(destructor:GSToSS.AskRegiste)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AskRegiste::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.pwd_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AskRegiste::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_._cached_size_),
              false,
          },
          &AskRegiste::MergeImpl,
          &AskRegiste::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void AskRegiste::Clear() {
// @@protoc_insertion_point(message_clear_start:GSToSS.AskRegiste)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.pwd_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    _impl_.gsid_ = 0;
    _impl_.msgid_ = 16386;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AskRegiste::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 29, 2> AskRegiste::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AskRegiste_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GSToSS::AskRegiste>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .GSToSS.MsgID msgid = 1 [default = eMsgToSSFromGS_AskRegiste];
    {::_pbi::TcParser::FastEvS1,
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.msgid_)}},
    // optional int32 gsid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AskRegiste, _impl_.gsid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.gsid_)}},
    // optional string pwd = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.pwd_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .GSToSS.MsgID msgid = 1 [default = eMsgToSSFromGS_AskRegiste];
    {PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.msgid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 gsid = 2;
    {PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.gsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string pwd = 3;
    {PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.pwd_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::GSToSS::MsgID_internal_data_},
  }}, {{
    "\21\0\0\3\0\0\0\0"
    "GSToSS.AskRegiste"
    "pwd"
  }},
};

::uint8_t* AskRegiste::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GSToSS.AskRegiste)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .GSToSS.MsgID msgid = 1 [default = eMsgToSSFromGS_AskRegiste];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_msgid(), target);
  }

  // optional int32 gsid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_gsid(), target);
  }

  // optional string pwd = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_pwd();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "GSToSS.AskRegiste.pwd");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GSToSS.AskRegiste)
  return target;
}

::size_t AskRegiste::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GSToSS.AskRegiste)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string pwd = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_pwd());
    }

    // optional int32 gsid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_gsid());
    }

    // optional .GSToSS.MsgID msgid = 1 [default = eMsgToSSFromGS_AskRegiste];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_msgid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AskRegiste::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AskRegiste*>(&to_msg);
  auto& from = static_cast<const AskRegiste&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GSToSS.AskRegiste)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_pwd(from._internal_pwd());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.gsid_ = from._impl_.gsid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.msgid_ = from._impl_.msgid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AskRegiste::CopyFrom(const AskRegiste& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GSToSS.AskRegiste)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AskRegiste::IsInitialized() const {
  return true;
}

void AskRegiste::InternalSwap(AskRegiste* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pwd_, &other->_impl_.pwd_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.msgid_)
      + sizeof(AskRegiste::_impl_.msgid_)
      - PROTOBUF_FIELD_OFFSET(AskRegiste, _impl_.gsid_)>(
          reinterpret_cast<char*>(&_impl_.gsid_),
          reinterpret_cast<char*>(&other->_impl_.gsid_));
}

::google::protobuf::Metadata AskRegiste::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_GSToSS_2eproto_getter,
                                   &descriptor_table_GSToSS_2eproto_once,
                                   file_level_metadata_GSToSS_2eproto[2]);
}
// ===================================================================

class ReportGCMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<ReportGCMsg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_._has_bits_);
};

ReportGCMsg::ReportGCMsg(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GSToSS.ReportGCMsg)
}
inline PROTOBUF_NDEBUG_INLINE ReportGCMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        othermsg_(arena, from.othermsg_) {}

ReportGCMsg::ReportGCMsg(
    ::google::protobuf::Arena* arena,
    const ReportGCMsg& from)
    : ::google::protobuf::Message(arena) {
  ReportGCMsg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nsid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, nsid_),
           offsetof(Impl_, mgsid_) -
               offsetof(Impl_, nsid_) +
               sizeof(Impl_::mgsid_));

  // @@protoc_insertion_point(copy_constructor:GSToSS.ReportGCMsg)
}
inline PROTOBUF_NDEBUG_INLINE ReportGCMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        othermsg_(arena),
        mgsid_{static_cast< ::GSToSS::MsgID >(16387)} {}

inline void ReportGCMsg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, nsid_),
           0,
           offsetof(Impl_, othermsgid_) -
               offsetof(Impl_, nsid_) +
               sizeof(Impl_::othermsgid_));
}
ReportGCMsg::~ReportGCMsg() {
  // @@protoc_insertion_point(destructor:GSToSS.ReportGCMsg)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReportGCMsg::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.othermsg_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReportGCMsg::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_._cached_size_),
              false,
          },
          &ReportGCMsg::MergeImpl,
          &ReportGCMsg::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ReportGCMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:GSToSS.ReportGCMsg)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.othermsg_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&_impl_.nsid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.othermsgid_) -
        reinterpret_cast<char*>(&_impl_.nsid_)) + sizeof(_impl_.othermsgid_));
    _impl_.mgsid_ = 16387;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ReportGCMsg::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 35, 2> ReportGCMsg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ReportGCMsg_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::GSToSS::ReportGCMsg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 othermsgid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReportGCMsg, _impl_.othermsgid_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_.othermsgid_)}},
    // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_ReportGCMsg];
    {::_pbi::TcParser::FastEvS1,
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_.mgsid_)}},
    // optional int32 nsid = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReportGCMsg, _impl_.nsid_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_.nsid_)}},
    // optional string othermsg = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_.othermsg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_ReportGCMsg];
    {PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_.mgsid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnum)},
    // optional int32 nsid = 2;
    {PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_.nsid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string othermsg = 3;
    {PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_.othermsg_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 othermsgid = 4;
    {PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_.othermsgid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::FieldAuxEnumData{}, ::GSToSS::MsgID_internal_data_},
  }}, {{
    "\22\0\0\10\0\0\0\0"
    "GSToSS.ReportGCMsg"
    "othermsg"
  }},
};

::uint8_t* ReportGCMsg::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GSToSS.ReportGCMsg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_ReportGCMsg];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mgsid(), target);
  }

  // optional int32 nsid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_nsid(), target);
  }

  // optional string othermsg = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_othermsg();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "GSToSS.ReportGCMsg.othermsg");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional int32 othermsgid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_othermsgid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GSToSS.ReportGCMsg)
  return target;
}

::size_t ReportGCMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GSToSS.ReportGCMsg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string othermsg = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_othermsg());
    }

    // optional int32 nsid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_nsid());
    }

    // optional int32 othermsgid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_othermsgid());
    }

    // optional .GSToSS.MsgID mgsid = 1 [default = eMsgToSSFromGS_ReportGCMsg];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mgsid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReportGCMsg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReportGCMsg*>(&to_msg);
  auto& from = static_cast<const ReportGCMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GSToSS.ReportGCMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_othermsg(from._internal_othermsg());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.nsid_ = from._impl_.nsid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.othermsgid_ = from._impl_.othermsgid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.mgsid_ = from._impl_.mgsid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReportGCMsg::CopyFrom(const ReportGCMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GSToSS.ReportGCMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ReportGCMsg::IsInitialized() const {
  return true;
}

void ReportGCMsg::InternalSwap(ReportGCMsg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.othermsg_, &other->_impl_.othermsg_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_.mgsid_)
      + sizeof(ReportGCMsg::_impl_.mgsid_)
      - PROTOBUF_FIELD_OFFSET(ReportGCMsg, _impl_.nsid_)>(
          reinterpret_cast<char*>(&_impl_.nsid_),
          reinterpret_cast<char*>(&other->_impl_.nsid_));
}

::google::protobuf::Metadata ReportGCMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_GSToSS_2eproto_getter,
                                   &descriptor_table_GSToSS_2eproto_once,
                                   file_level_metadata_GSToSS_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace GSToSS
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_GSToSS_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
